{"version":3,"file":"ol-wfst.min.js","sources":["../node_modules/modal-vanilla/lib/modal.js","../src/modules/errors.ts","../src/modules/i18n/en.ts","../src/modules/i18n/index.ts","../src/modules/i18n/es.ts","../src/modules/i18n/zh.ts","../src/modules/loading.ts","../node_modules/ts-mixer/dist/esm/index.js","../src/@enums.ts","../src/modules/state.ts","../src/modules/base/BaseLayer.ts","../src/modules/base/WfsSource.ts","../src/WfsLayer.ts","../node_modules/ol/TileState.js","../src/modules/base/WmsSource.ts","../src/WmsLayer.ts","../src/myPragma.ts","../src/modules/LayersControl.tsx","../src/assets/images/visibilityOn.svg","../src/assets/images/visibilityOff.svg","../src/assets/images/upload.svg","../src/assets/images/draw.svg","../src/modules/editLayer.ts","../src/modules/Uploads.ts","../src/modules/helpers.ts","../src/modules/EditControlChanges.tsx","../src/modules/styleFunction.ts","../src/modules/EditFieldsModal.ts","../node_modules/ol-wfs-capabilities/lib/WFSCapabilities.js","../src/Geoserver.ts","../src/modules/EditOverlay.tsx","../src/assets/images/editFields.svg","../src/assets/images/editGeom.svg","../src/ol-wfst.ts","../src/defaults.ts","../src/index-umd.ts"],"sourcesContent":["/**\n * Vanilla JS Modal compatible with Bootstrap\n * modal-vanilla 0.12.0 <https://github.com/KaneCohen/modal-vanilla>\n * Copyright 2020 Kane Cohen <https://github.com/KaneCohen>\n * Available under BSD-3-Clause license\n */\nimport EventEmitter from 'events';\n\nlet _factory = null;\n\nconst _defaults = Object.freeze({\n  el: null,               // Existing DOM element that will be 'Modal-ized'.\n  animate: true,          // Show Modal using animation.\n  animateClass: 'fade',   //\n  animateInClass: 'show', //\n  appendTo: 'body',       // DOM element to which constructed Modal will be appended.\n  backdrop: true,         // Boolean or 'static', Show Modal backdrop blocking content.\n  keyboard: true,         // Close modal on esc key.\n  title: false,           // Content of the title in the constructed dialog.\n  header: true,           // Show header content.\n  content: false,         // Either string or an HTML element.\n  footer: true,           // Footer content. By default will use buttons.\n  buttons: null,          //\n  headerClose: true,      // Show close button in the header.\n  construct: false,       // Creates new HTML with a given content.\n  transition: 300,        //\n  backdropTransition: 150 //\n});\n\nconst _buttons = deepFreeze({\n  dialog: [\n    {text: 'Cancel',\n      value: false,\n      attr: {\n        'class': 'btn btn-default',\n        'data-dismiss': 'modal'\n      }\n    },\n    {text: 'OK',\n      value: true,\n      attr: {\n        'class': 'btn btn-primary',\n        'data-dismiss': 'modal'\n      }\n    }\n  ],\n  alert: [\n    {text: 'OK',\n      attr: {\n        'class': 'btn btn-primary',\n        'data-dismiss': 'modal'\n      }\n    }\n  ],\n  confirm: [\n    {text: 'Cancel',\n      value: false,\n      attr: {\n        'class': 'btn btn-default',\n        'data-dismiss': 'modal'\n      }\n    },\n    {text: 'OK',\n      value: true,\n      attr: {\n        'class': 'btn btn-primary',\n        'data-dismiss': 'modal'\n      }\n    }\n  ]\n});\n\nconst _templates = {\n  container: '<div class=\"modal\"></div>',\n  dialog: '<div class=\"modal-dialog\"></div>',\n  content: '<div class=\"modal-content\"></div>',\n  header: '<div class=\"modal-header\"></div>',\n  headerClose: '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>',\n  body: '<div class=\"modal-body\"></div>',\n  footer: '<div class=\"modal-footer\"></div>',\n  backdrop: '<div class=\"modal-backdrop\"></div>'\n};\n\nfunction deepFreeze(obj) {\n  for (let k in obj) {\n    if (Array.isArray(obj[k])) {\n      obj[k].forEach(v => {\n        deepFreeze(v);\n      });\n    } else if (obj[k] !== null && typeof obj[k] === 'object') {\n      Object.freeze(obj[k]);\n    }\n  }\n  return Object.freeze(obj);\n}\n\nfunction guid() {\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16) +\n    (((1 + Math.random()) * 0x10000) | 0).toString(16);\n}\n\nfunction data(el, prop, value) {\n let prefix = 'data';\n let elData = el[prefix] || {};\n if (typeof value === 'undefined') {\n   if (el[prefix] && el[prefix][prop]) {\n     return el[prefix][prop];\n   } else {\n     var dataAttr = el.getAttribute(`${prefix}-${prop}`);\n     if (typeof dataAttr !== 'undefined') {\n       return dataAttr;\n     }\n     return null;\n   }\n } else {\n   elData[prop] = value;\n   el[prefix] = elData;\n   return el;\n }\n}\n\nfunction build(html, all) {\n  if (html.nodeName) return html;\n  html = html.replace(/(\\t|\\n$)/g, '');\n\n  if (!_factory) {\n    _factory = document.createElement('div');\n  }\n\n  _factory.innerHTML = '';\n  _factory.innerHTML = html;\n  if (all === true) {\n    return _factory.childNodes;\n  } else {\n    return _factory.childNodes[0];\n  }\n}\n\nfunction calcScrollbarWidth() {\n  let inner;\n  let width;\n  let outerWidth;\n  let outer = document.createElement('div');\n  Object.assign(outer.style, {\n    visibility: 'hidden',\n    width: '100px'\n  });\n  document.body.appendChild(outer);\n\n  outerWidth = outer.offsetWidth;\n  outer.style.overflow = 'scroll';\n\n  inner = document.createElement('div');\n  inner.style.width = '100%';\n  outer.appendChild(inner);\n\n  width = outerWidth - inner.offsetWidth;\n  document.body.removeChild(outer);\n\n  return width;\n}\n\nfunction getPath(node) {\n  let nodes = [node];\n  while (node.parentNode) {\n    node = node.parentNode;\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nclass Modal extends EventEmitter {\n  static set templates(templates) {\n    this._baseTemplates = templates;\n  }\n\n  static get templates() {\n    return Object.assign({}, _templates, Modal._baseTemplates || {});\n  }\n\n  static set buttons(buttons) {\n    this._baseButtons = buttons;\n  }\n\n  static get buttons() {\n    return Object.assign({}, _buttons, Modal._baseButtons || {});\n  }\n\n  static set options(options) {\n    this._baseOptions = options;\n  }\n\n  static get options() {\n    return Object.assign({}, _defaults, Modal._baseOptions || {});\n  }\n\n  static get version() {\n    return '0.12.0';\n  }\n\n  static alert(message, _options = {}) {\n    let options = Object.assign({},\n      _defaults,\n      {\n        title:  message,\n        content: false,\n        construct: true,\n        headerClose: false,\n        buttons: Modal.buttons.alert\n      },\n      _options\n    );\n\n    return new Modal(options);\n  }\n\n  static confirm(question, _options = {}) {\n    let options = Object.assign({},\n      _defaults,\n      {\n        title:  question,\n        content: false,\n        construct: true,\n        headerClose: false,\n        buttons: Modal.buttons.confirm\n      },\n      _options\n    );\n\n    return new Modal(options);\n  }\n\n  constructor(options = {}) {\n    super();\n\n    this.id = guid();\n    this.el = null;\n    this._html = {};\n    this._events = {};\n    this._visible = false;\n    this._pointerInContent = false;\n    this._options = Object.assign({}, Modal.options, options);\n    this._templates = Object.assign({}, Modal.templates, options.templates || {});\n    this._html.appendTo = document.querySelector(this._options.appendTo);\n    this._scrollbarWidth = calcScrollbarWidth();\n\n    if (this._options.buttons === null) {\n      this._options.buttons = Modal.buttons.dialog;\n    }\n\n    if (this._options.el) {\n      let el = this._options.el;\n      if (typeof this._options.el == 'string') {\n        el = document.querySelector(this._options.el);\n        if (! el) {\n          throw new Error(`Selector: DOM Element ${this._options.el} not found.`);\n        }\n      }\n      data(el, 'modal', this);\n      this.el = el;\n    } else {\n      this._options.construct = true;\n    }\n\n    if (this._options.construct) {\n      this._render();\n    } else {\n      this._mapDom();\n    }\n  }\n\n  _render() {\n    let html = this._html;\n    let o = this._options;\n    let t = this._templates;\n    let animate = o.animate ? o.animateClass : false;\n\n    html.container = build(t.container);\n    html.dialog = build(t.dialog);\n    html.content = build(t.content);\n    html.header = build(t.header);\n    html.headerClose = build(t.headerClose);\n    html.body = build(t.body);\n    html.footer = build(t.footer);\n    if (animate) html.container.classList.add(animate);\n\n    this._setHeader();\n    this._setContent();\n    this._setFooter();\n\n    this.el = html.container;\n\n    html.dialog.appendChild(html.content);\n    html.container.appendChild(html.dialog);\n\n    return this;\n  }\n\n  _mapDom() {\n    let html = this._html;\n    let o = this._options;\n\n    if (this.el.classList.contains(o.animateClass)) {\n      o.animate = true;\n    }\n\n    html.container = this.el;\n    html.dialog = this.el.querySelector('.modal-dialog');\n    html.content = this.el.querySelector('.modal-content');\n    html.header = this.el.querySelector('.modal-header');\n    html.headerClose = this.el.querySelector('.modal-header .close');\n    html.body = this.el.querySelector('.modal-body');\n    html.footer = this.el.querySelector('.modal-footer');\n\n    this._setHeader();\n    this._setContent();\n    this._setFooter();\n\n    return this;\n  }\n\n  _setHeader() {\n    let html = this._html;\n    let o = this._options;\n\n    if (o.header && html.header) {\n      if (o.title.nodeName) {\n        html.header.innerHTML = o.title.outerHTML;\n      } else if (typeof o.title === 'string') {\n        html.header.innerHTML = `<h4 class=\"modal-title\">${o.title}</h4>`;\n      }\n      // Add header close button only to constructed modals.\n      if (this.el === null && html.headerClose && o.headerClose) {\n        html.header.appendChild(html.headerClose);\n      }\n      if (o.construct) {\n        html.content.appendChild(html.header);\n      }\n    }\n  }\n\n  _setContent() {\n    let html = this._html;\n    let o = this._options;\n\n    if (o.content && html.body) {\n      if (typeof o.content === 'string') {\n        html.body.innerHTML = o.content;\n      } else {\n        html.body.innerHTML = o.content.outerHTML;\n      }\n      if (o.construct) {\n        html.content.appendChild(html.body);\n      }\n    }\n  }\n\n  _setFooter() {\n    let html = this._html;\n    let o = this._options;\n\n    if (o.footer && html.footer) {\n      if (o.footer.nodeName) {\n        html.footer.ineerHTML = o.footer.outerHTML;\n      } else if (typeof o.footer === 'string') {\n        html.footer.innerHTML = o.footer;\n      } else if (! html.footer.children.length) {\n        o.buttons.forEach((button) => {\n          let el = document.createElement('button');\n          data(el, 'button', button);\n          el.innerHTML = button.text;\n          el.setAttribute('type', 'button');\n          for (let j in button.attr) {\n            el.setAttribute(j, button.attr[j]);\n          }\n          html.footer.appendChild(el);\n        });\n      }\n      if (o.construct) {\n        html.content.appendChild(html.footer);\n      }\n    }\n\n  }\n\n  _setEvents() {\n    let o = this._options;\n    let html = this._html;\n\n    this._events.keydownHandler = this._handleKeydownEvent.bind(this);\n    document.body.addEventListener('keydown',\n      this._events.keydownHandler\n    );\n\n    this._events.mousedownHandler = this._handleMousedownEvent.bind(this);\n    html.container.addEventListener('mousedown',\n      this._events.mousedownHandler\n    );\n\n    this._events.clickHandler = this._handleClickEvent.bind(this);\n    html.container.addEventListener('click',\n      this._events.clickHandler\n    );\n\n    this._events.resizeHandler = this._handleResizeEvent.bind(this);\n    window.addEventListener('resize',\n      this._events.resizeHandler\n    );\n  }\n\n  _handleMousedownEvent(e) {\n    this._pointerInContent = false;\n    let path = getPath(e.target);\n    path.every(node => {\n      if (node.classList && node.classList.contains('modal-content')) {\n        this._pointerInContent = true;\n        return false;\n      }\n      return true;\n    });\n  }\n\n  _handleClickEvent(e) {\n    let path = getPath(e.target);\n    path.every(node => {\n      if (node.tagName === 'HTML') {\n        return false;\n      }\n      if (this._options.backdrop !== true && node.classList.contains('modal')) {\n        return false;\n      }\n      if (node.classList.contains('modal-content')) {\n        return false;\n      }\n      if (node.getAttribute('data-dismiss') === 'modal') {\n        this.emit('dismiss', this, e, data(e.target, 'button'));\n        this.hide();\n        return false;\n      }\n\n      if (!this._pointerInContent && node.classList.contains('modal')) {\n        this.emit('dismiss', this, e, null);\n        this.hide();\n        return false;\n      }\n      return true;\n    });\n\n    this._pointerInContent = false;\n  }\n\n  _handleKeydownEvent(e) {\n    if (e.which === 27 && this._options.keyboard) {\n      this.emit('dismiss', this, e, null);\n      this.hide();\n    }\n  }\n\n  _handleResizeEvent(e) {\n    this._resize();\n  }\n\n  show() {\n    let o = this._options;\n    let html = this._html;\n    this.emit('show', this);\n\n    this._checkScrollbar();\n    this._setScrollbar();\n    document.body.classList.add('modal-open');\n\n    if (o.construct) {\n      html.appendTo.appendChild(html.container);\n    }\n\n    html.container.style.display = 'block';\n    html.container.scrollTop = 0;\n\n    if (o.backdrop !== false) {\n      this.once('showBackdrop', () => {\n        this._setEvents();\n\n        if (o.animate) html.container.offsetWidth; // Force reflow\n\n        html.container.classList.add(o.animateInClass);\n\n        setTimeout(() => {\n          this._visible = true;\n          this.emit('shown', this);\n        }, o.transition);\n      });\n      this._backdrop();\n    } else {\n      this._setEvents();\n\n      if (o.animate) html.container.offsetWidth; // Force reflow\n\n      html.container.classList.add(o.animateInClass);\n\n      setTimeout(() => {\n        this._visible = true;\n        this.emit('shown', this);\n      }, o.transition);\n    }\n    this._resize();\n\n    return this;\n  }\n\n  toggle() {\n    if (this._visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  _resize() {\n    var modalIsOverflowing =\n      this._html.container.scrollHeight > document.documentElement.clientHeight;\n\n    this._html.container.style.paddingLeft =\n      ! this.bodyIsOverflowing && modalIsOverflowing ? this._scrollbarWidth + 'px' : '';\n\n    this._html.container.style.paddingRight =\n      this.bodyIsOverflowing && ! modalIsOverflowing ? this._scrollbarWidth + 'px' : '';\n  }\n\n  _backdrop() {\n    let html = this._html;\n    let t = this._templates;\n    let o = this._options;\n    let animate = o.animate ? o.animateClass : false;\n\n    html.backdrop = build(t.backdrop);\n    if (animate) html.backdrop.classList.add(animate);\n    html.appendTo.appendChild(html.backdrop);\n\n    if (animate) html.backdrop.offsetWidth;\n\n    html.backdrop.classList.add(o.animateInClass);\n\n    setTimeout(() => {\n      this.emit('showBackdrop', this);\n    }, this._options.backdropTransition);\n  }\n\n  hide() {\n    let html = this._html;\n    let o = this._options;\n    let contCList = html.container.classList;\n    this.emit('hide', this);\n\n    contCList.remove(o.animateInClass);\n\n    if (o.backdrop) {\n      let backCList = html.backdrop.classList;\n      backCList.remove(o.animateInClass);\n    }\n\n    this._removeEvents();\n\n    setTimeout(() => {\n      document.body.classList.remove('modal-open');\n      document.body.style.paddingRight = this.originalBodyPad;\n    }, o.backdropTransition);\n\n    setTimeout(() => {\n      if (o.backdrop) {\n        html.backdrop.parentNode.removeChild(html.backdrop);\n      }\n      html.container.style.display = 'none';\n\n      if (o.construct) {\n        html.container.parentNode.removeChild(html.container);\n      }\n\n      this._visible = false;\n      this.emit('hidden', this);\n    }, o.transition);\n\n    return this;\n  }\n\n  _removeEvents() {\n    if (this._events.keydownHandler) {\n      document.body.removeEventListener('keydown',\n        this._events.keydownHandler\n      );\n    }\n\n    this._html.container.removeEventListener('mousedown',\n      this._events.mousedownHandler\n    );\n\n    this._html.container.removeEventListener('click',\n      this._events.clickHandler\n    );\n\n    window.removeEventListener('resize',\n      this._events.resizeHandler\n    );\n  }\n\n  _checkScrollbar() {\n    this.bodyIsOverflowing = document.body.clientWidth < window.innerWidth;\n  }\n\n  _setScrollbar() {\n    this.originalBodyPad = document.body.style.paddingRight || '';\n    if (this.bodyIsOverflowing) {\n      let basePadding = parseInt(this.originalBodyPad || 0, 10);\n      document.body.style.paddingRight = basePadding + this._scrollbarWidth + 'px';\n    }\n  }\n}\n\nexport default Modal;\n","// External\r\nimport Modal from 'modal-vanilla';\r\n\r\nimport { Options } from '../ol-wfst';\r\nimport { ExceptionGeoserver, IGeoserverDescribeFeatureType } from '../@types';\r\nlet options = {};\r\n\r\n// Store layerNames that has errors\r\nconst isError = new Set();\r\n\r\nexport const initModal = (opts: Options['modal']) => {\r\n    options = opts;\r\n};\r\n\r\nexport const parseError = (\r\n    geoserverResponse: IGeoserverDescribeFeatureType\r\n) => {\r\n    if ('exceptions' in geoserverResponse) {\r\n        return (geoserverResponse.exceptions as ExceptionGeoserver[])\r\n            .map((e) => e.text)\r\n            .join(',');\r\n    } else {\r\n        return '';\r\n    }\r\n};\r\n\r\n/**\r\n * Show modal with errors\r\n *\r\n * @param msg\r\n * @private\r\n */\r\nexport const showError = (\r\n    msg: string,\r\n    originalError: Error = null,\r\n    layerName = ''\r\n): void => {\r\n    // Prevent multiples modals error in the same layer\r\n    if (isError.has(layerName)) {\r\n        return;\r\n    }\r\n\r\n    isError.add(layerName);\r\n\r\n    let err_msg = `<b>Error: ${msg}</b>`;\r\n    if (originalError && originalError.message !== msg) {\r\n        err_msg += `. ${originalError.message}`;\r\n    }\r\n\r\n    const al = Modal.alert(err_msg, options);\r\n\r\n    al.show();\r\n\r\n    al.on('hidden', () => {\r\n        isError.delete(layerName);\r\n    });\r\n};\r\n","import { I18n } from '../../ol-wfst';\r\n\r\nexport const en: I18n = {\r\n    labels: {\r\n        select: 'Select',\r\n        addElement: 'Toggle Draw mode',\r\n        editElement: 'Edit feature',\r\n        save: 'Save',\r\n        delete: 'Delete',\r\n        cancel: 'Cancel',\r\n        apply: 'Apply changes',\r\n        upload: 'Upload',\r\n        editMode: 'Edit Mode',\r\n        confirmDelete: 'Are you sure to delete the feature?',\r\n        geomTypeNotSupported: 'Geometry not supported by layer',\r\n        editFields: 'Edit fields',\r\n        editGeom: 'Edit geometry',\r\n        selectDrawType: 'Geometry type to draw',\r\n        uploadToLayer: 'Upload file to selected layer',\r\n        uploadFeatures: 'Uploaded features to layer',\r\n        validFeatures: 'Valid geometries',\r\n        invalidFeatures: 'Invalid',\r\n        loading: 'Loading...',\r\n        toggleVisibility: 'Toggle layer visibility',\r\n        close: 'Close'\r\n    },\r\n    errors: {\r\n        capabilities: 'GeoServer Capabilities could not be downloaded.',\r\n        wfst: 'The GeoServer does not support Transactions',\r\n        layer: 'Could not get data from layer',\r\n        layerNotFound: 'Layer not found',\r\n        layerNotVisible: 'Layer is not visible',\r\n        noValidGeometry: 'No valid geometries found to add to this layer',\r\n        geoserver: 'Failed to get data from GeoServer',\r\n        badFormat: 'Unsupported format',\r\n        badFile: 'Error reading items from file',\r\n        lockFeature: 'Could not lock items on the GeoServer',\r\n        transaction: 'Error when doing Transaction with GeoServer',\r\n        getFeatures: 'Error getting elements from GeoServer'\r\n    }\r\n};\r\n","import { I18n } from '../../@types';\r\nexport * from './es';\r\nexport * from './en';\r\nexport * from './zh';\r\n\r\nimport { es } from './es';\r\nimport { en } from './en';\r\nimport { zh } from './zh';\r\n\r\nconst langs = {\r\n    es,\r\n    en,\r\n    zh\r\n};\r\n\r\n// Set default Language\r\nexport let I18N: I18n = en;\r\n\r\nexport const setLang = (lang = 'en', customI18n: I18n = null): void => {\r\n    // Check if language exists\r\n    if (lang in langs) {\r\n        I18N = langs[lang];\r\n    }\r\n\r\n    // Check if customs translations are provided\r\n    if (customI18n) {\r\n        I18N = { ...I18N, ...customI18n };\r\n    }\r\n};\r\n\r\n/**\r\n * /**\r\n * For translations thas has a variable \"{}\"\" to be replaced inside\r\n * @param string\r\n * @param args\r\n * @returns\r\n */\r\nexport const I18N_ = (string: string, ...args: any): string => {\r\n    let text = I18N[string];\r\n\r\n    if (!text) {\r\n        console.error('Translation not found', string);\r\n        text = string;\r\n    }\r\n\r\n    if (args.length) {\r\n        args.forEach((arg) => {\r\n            text = text.replace(/{}/, arg);\r\n        });\r\n    }\r\n\r\n    return text;\r\n};\r\n","import { I18n } from '../../ol-wfst';\r\n\r\nexport const es: I18n = {\r\n    labels: {\r\n        select: 'Seleccionar',\r\n        addElement: 'Modo dibujo',\r\n        editElement: 'Editar elemento',\r\n        save: 'Guardar',\r\n        delete: 'Eliminar',\r\n        cancel: 'Cancelar',\r\n        apply: 'Aplicar cambios',\r\n        upload: 'Subir',\r\n        editMode: 'Modo Edición',\r\n        confirmDelete: '¿Estás seguro de borrar el elemento?',\r\n        geomTypeNotSupported: 'Geometría no compatible con la capa',\r\n        editFields: 'Editar campos',\r\n        editGeom: 'Editar geometría',\r\n        selectDrawType: 'Tipo de geometría para dibujar',\r\n        uploadToLayer: 'Subir archivo a la capa seleccionada',\r\n        uploadFeatures: 'Subida de elementos a la capa',\r\n        validFeatures: 'Válidas',\r\n        invalidFeatures: 'Invalidas',\r\n        loading: 'Cargando...',\r\n        toggleVisibility: 'Cambiar visibilidad de la capa',\r\n        close: 'Cerrar'\r\n    },\r\n    errors: {\r\n        capabilities: 'No se pudieron obtener las Capabilidades del GeoServer',\r\n        wfst: 'El GeoServer no tiene soporte a Transacciones',\r\n        layer: 'No se pudieron obtener datos de la capa',\r\n        layerNotFound: 'Capa no encontrada',\r\n        layerNotVisible: 'La capa no está visible',\r\n        noValidGeometry:\r\n            'No se encontraron geometrías válidas para agregar a esta capa',\r\n        geoserver: 'No se pudieron obtener datos desde el GeoServer',\r\n        badFormat: 'Formato no soportado',\r\n        badFile: 'Error al leer elementos del archivo',\r\n        lockFeature: 'No se pudieron bloquear elementos en el GeoServer',\r\n        transaction: 'Error al hacer transacción con el GeoServer',\r\n        getFeatures: 'Error al obtener elemento desde el GeoServer'\r\n    }\r\n};\r\n","import { I18n } from '../../ol-wfst';\r\n\r\nexport const zh: I18n = {\r\n    labels: {\r\n        select: '选择',\r\n        addElement: '切换绘图类型',\r\n        editElement: '编辑元素',\r\n        save: '保存',\r\n        delete: '删除',\r\n        cancel: '取消',\r\n        apply: '确认并应用改变',\r\n        upload: '上传',\r\n        editMode: '编辑模式',\r\n        confirmDelete: '确认删除元素?',\r\n        geomTypeNotSupported: '图层不支持该几何',\r\n        editFields: '编辑区域',\r\n        editGeom: '编辑几何',\r\n        selectDrawType: '几何类型',\r\n        uploadToLayer: '通过文件上传图层',\r\n        uploadFeatures: '上传元素到图层',\r\n        validFeatures: '合法的几何类型',\r\n        invalidFeatures: '不合法',\r\n        loading: '加载中...',\r\n        toggleVisibility: '切换图层透明度',\r\n        close: '关闭'\r\n    },\r\n    errors: {\r\n        capabilities: '无法加载GeoServer服务所支持的能力.',\r\n        wfst: 'GeoServer不支持事务',\r\n        layer: '无法从图层获得数据',\r\n        layerNotFound: 'Layer not found',\r\n        layerNotVisible: 'Layer is not visible',\r\n        noValidGeometry: '不支持的几何类型无法加载到图层',\r\n        geoserver: '无法从GeoServer获取数据',\r\n        badFormat: '不支持的格式',\r\n        badFile: '读取文件数据出错',\r\n        lockFeature: '无法锁定GeoServer上的元素.',\r\n        transaction: 'GeoServer处理事务出错.',\r\n        getFeatures: '从GeoServer获取元素出错.'\r\n    }\r\n};\r\n","import { I18N } from './i18n';\r\n\r\nlet loadingDiv: HTMLDivElement;\r\n\r\nexport const initLoading = (): HTMLDivElement => {\r\n    loadingDiv = document.createElement('div');\r\n    loadingDiv.className = 'ol-wfst--tools-control--loading';\r\n    loadingDiv.innerHTML = I18N.labels.loading;\r\n    return loadingDiv;\r\n};\r\n\r\nexport const showLoading = (bool: boolean = true) => {\r\n    if (bool) {\r\n        loadingDiv.classList.add('ol-wfst--tools-control--loading-show');\r\n    } else {\r\n        loadingDiv.classList.remove('ol-wfst--tools-control--loading-show');\r\n    }\r\n};\r\n","/**\n * Utility function that works like `Object.apply`, but copies getters and setters properly as well.  Additionally gives\n * the option to exclude properties by name.\n */\nconst copyProps = (dest, src, exclude = []) => {\n    const props = Object.getOwnPropertyDescriptors(src);\n    for (let prop of exclude)\n        delete props[prop];\n    Object.defineProperties(dest, props);\n};\n/**\n * Returns the full chain of prototypes up until Object.prototype given a starting object.  The order of prototypes will\n * be closest to farthest in the chain.\n */\nconst protoChain = (obj, currentChain = [obj]) => {\n    const proto = Object.getPrototypeOf(obj);\n    if (proto === null)\n        return currentChain;\n    return protoChain(proto, [...currentChain, proto]);\n};\n/**\n * Identifies the nearest ancestor common to all the given objects in their prototype chains.  For most unrelated\n * objects, this function should return Object.prototype.\n */\nconst nearestCommonProto = (...objs) => {\n    if (objs.length === 0)\n        return undefined;\n    let commonProto = undefined;\n    const protoChains = objs.map(obj => protoChain(obj));\n    while (protoChains.every(protoChain => protoChain.length > 0)) {\n        const protos = protoChains.map(protoChain => protoChain.pop());\n        const potentialCommonProto = protos[0];\n        if (protos.every(proto => proto === potentialCommonProto))\n            commonProto = potentialCommonProto;\n        else\n            break;\n    }\n    return commonProto;\n};\n/**\n * Creates a new prototype object that is a mixture of the given prototypes.  The mixing is achieved by first\n * identifying the nearest common ancestor and using it as the prototype for a new object.  Then all properties/methods\n * downstream of this prototype (ONLY downstream) are copied into the new object.\n *\n * The resulting prototype is more performant than softMixProtos(...), as well as ES5 compatible.  However, it's not as\n * flexible as updates to the source prototypes aren't captured by the mixed result.  See softMixProtos for why you may\n * want to use that instead.\n */\nconst hardMixProtos = (ingredients, constructor, exclude = []) => {\n    var _a;\n    const base = (_a = nearestCommonProto(...ingredients)) !== null && _a !== void 0 ? _a : Object.prototype;\n    const mixedProto = Object.create(base);\n    // Keeps track of prototypes we've already visited to avoid copying the same properties multiple times.  We init the\n    // list with the proto chain below the nearest common ancestor because we don't want any of those methods mixed in\n    // when they will already be accessible via prototype access.\n    const visitedProtos = protoChain(base);\n    for (let prototype of ingredients) {\n        let protos = protoChain(prototype);\n        // Apply the prototype chain in reverse order so that old methods don't override newer ones.\n        for (let i = protos.length - 1; i >= 0; i--) {\n            let newProto = protos[i];\n            if (visitedProtos.indexOf(newProto) === -1) {\n                copyProps(mixedProto, newProto, ['constructor', ...exclude]);\n                visitedProtos.push(newProto);\n            }\n        }\n    }\n    mixedProto.constructor = constructor;\n    return mixedProto;\n};\nconst unique = (arr) => arr.filter((e, i) => arr.indexOf(e) == i);\n\n/**\n * Finds the ingredient with the given prop, searching in reverse order and breadth-first if searching ingredient\n * prototypes is required.\n */\nconst getIngredientWithProp = (prop, ingredients) => {\n    const protoChains = ingredients.map(ingredient => protoChain(ingredient));\n    // since we search breadth-first, we need to keep track of our depth in the prototype chains\n    let protoDepth = 0;\n    // not all prototype chains are the same depth, so this remains true as long as at least one of the ingredients'\n    // prototype chains has an object at this depth\n    let protosAreLeftToSearch = true;\n    while (protosAreLeftToSearch) {\n        // with the start of each horizontal slice, we assume this is the one that's deeper than any of the proto chains\n        protosAreLeftToSearch = false;\n        // scan through the ingredients right to left\n        for (let i = ingredients.length - 1; i >= 0; i--) {\n            const searchTarget = protoChains[i][protoDepth];\n            if (searchTarget !== undefined && searchTarget !== null) {\n                // if we find something, this is proof that this horizontal slice potentially more objects to search\n                protosAreLeftToSearch = true;\n                // eureka, we found it\n                if (Object.getOwnPropertyDescriptor(searchTarget, prop) != undefined) {\n                    return protoChains[i][0];\n                }\n            }\n        }\n        protoDepth++;\n    }\n    return undefined;\n};\n/**\n * \"Mixes\" ingredients by wrapping them in a Proxy.  The optional prototype argument allows the mixed object to sit\n * downstream of an existing prototype chain.  Note that \"properties\" cannot be added, deleted, or modified.\n */\nconst proxyMix = (ingredients, prototype = Object.prototype) => new Proxy({}, {\n    getPrototypeOf() {\n        return prototype;\n    },\n    setPrototypeOf() {\n        throw Error('Cannot set prototype of Proxies created by ts-mixer');\n    },\n    getOwnPropertyDescriptor(_, prop) {\n        return Object.getOwnPropertyDescriptor(getIngredientWithProp(prop, ingredients) || {}, prop);\n    },\n    defineProperty() {\n        throw new Error('Cannot define new properties on Proxies created by ts-mixer');\n    },\n    has(_, prop) {\n        return getIngredientWithProp(prop, ingredients) !== undefined || prototype[prop] !== undefined;\n    },\n    get(_, prop) {\n        return (getIngredientWithProp(prop, ingredients) || prototype)[prop];\n    },\n    set(_, prop, val) {\n        const ingredientWithProp = getIngredientWithProp(prop, ingredients);\n        if (ingredientWithProp === undefined)\n            throw new Error('Cannot set new properties on Proxies created by ts-mixer');\n        ingredientWithProp[prop] = val;\n        return true;\n    },\n    deleteProperty() {\n        throw new Error('Cannot delete properties on Proxies created by ts-mixer');\n    },\n    ownKeys() {\n        return ingredients\n            .map(Object.getOwnPropertyNames)\n            .reduce((prev, curr) => curr.concat(prev.filter(key => curr.indexOf(key) < 0)));\n    },\n});\n/**\n * Creates a new proxy-prototype object that is a \"soft\" mixture of the given prototypes.  The mixing is achieved by\n * proxying all property access to the ingredients.  This is not ES5 compatible and less performant.  However, any\n * changes made to the source prototypes will be reflected in the proxy-prototype, which may be desirable.\n */\nconst softMixProtos = (ingredients, constructor) => proxyMix([...ingredients, { constructor }]);\n\nconst settings = {\n    initFunction: null,\n    staticsStrategy: 'copy',\n    prototypeStrategy: 'copy',\n    decoratorInheritance: 'deep',\n};\n\n// Keeps track of constituent classes for every mixin class created by ts-mixer.\nconst mixins = new Map();\nconst getMixinsForClass = (clazz) => mixins.get(clazz);\nconst registerMixins = (mixedClass, constituents) => mixins.set(mixedClass, constituents);\nconst hasMixin = (instance, mixin) => {\n    if (instance instanceof mixin)\n        return true;\n    const constructor = instance.constructor;\n    const visited = new Set();\n    let frontier = new Set();\n    frontier.add(constructor);\n    while (frontier.size > 0) {\n        // check if the frontier has the mixin we're looking for.  if not, we can say we visited every item in the frontier\n        if (frontier.has(mixin))\n            return true;\n        frontier.forEach(item => visited.add(item));\n        // build a new frontier based on the associated mixin classes and prototype chains of each frontier item\n        const newFrontier = new Set();\n        frontier.forEach(item => {\n            var _a;\n            const itemConstituents = (_a = mixins.get(item)) !== null && _a !== void 0 ? _a : protoChain(item.prototype).map(proto => proto.constructor).filter(item => item !== null);\n            if (itemConstituents)\n                itemConstituents.forEach(constituent => {\n                    if (!visited.has(constituent) && !frontier.has(constituent))\n                        newFrontier.add(constituent);\n                });\n        });\n        // we have a new frontier, now search again\n        frontier = newFrontier;\n    }\n    // if we get here, we couldn't find the mixin anywhere in the prototype chain or associated mixin classes\n    return false;\n};\n\nconst mergeObjectsOfDecorators = (o1, o2) => {\n    var _a, _b;\n    const allKeys = unique([...Object.getOwnPropertyNames(o1), ...Object.getOwnPropertyNames(o2)]);\n    const mergedObject = {};\n    for (let key of allKeys)\n        mergedObject[key] = unique([...((_a = o1 === null || o1 === void 0 ? void 0 : o1[key]) !== null && _a !== void 0 ? _a : []), ...((_b = o2 === null || o2 === void 0 ? void 0 : o2[key]) !== null && _b !== void 0 ? _b : [])]);\n    return mergedObject;\n};\nconst mergePropertyAndMethodDecorators = (d1, d2) => {\n    var _a, _b, _c, _d;\n    return ({\n        property: mergeObjectsOfDecorators((_a = d1 === null || d1 === void 0 ? void 0 : d1.property) !== null && _a !== void 0 ? _a : {}, (_b = d2 === null || d2 === void 0 ? void 0 : d2.property) !== null && _b !== void 0 ? _b : {}),\n        method: mergeObjectsOfDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.method) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.method) !== null && _d !== void 0 ? _d : {}),\n    });\n};\nconst mergeDecorators = (d1, d2) => {\n    var _a, _b, _c, _d, _e, _f;\n    return ({\n        class: unique([...(_a = d1 === null || d1 === void 0 ? void 0 : d1.class) !== null && _a !== void 0 ? _a : [], ...(_b = d2 === null || d2 === void 0 ? void 0 : d2.class) !== null && _b !== void 0 ? _b : []]),\n        static: mergePropertyAndMethodDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.static) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.static) !== null && _d !== void 0 ? _d : {}),\n        instance: mergePropertyAndMethodDecorators((_e = d1 === null || d1 === void 0 ? void 0 : d1.instance) !== null && _e !== void 0 ? _e : {}, (_f = d2 === null || d2 === void 0 ? void 0 : d2.instance) !== null && _f !== void 0 ? _f : {}),\n    });\n};\nconst decorators = new Map();\nconst findAllConstituentClasses = (...classes) => {\n    var _a;\n    const allClasses = new Set();\n    const frontier = new Set([...classes]);\n    while (frontier.size > 0) {\n        for (let clazz of frontier) {\n            const protoChainClasses = protoChain(clazz.prototype).map(proto => proto.constructor);\n            const mixinClasses = (_a = getMixinsForClass(clazz)) !== null && _a !== void 0 ? _a : [];\n            const potentiallyNewClasses = [...protoChainClasses, ...mixinClasses];\n            const newClasses = potentiallyNewClasses.filter(c => !allClasses.has(c));\n            for (let newClass of newClasses)\n                frontier.add(newClass);\n            allClasses.add(clazz);\n            frontier.delete(clazz);\n        }\n    }\n    return [...allClasses];\n};\nconst deepDecoratorSearch = (...classes) => {\n    const decoratorsForClassChain = findAllConstituentClasses(...classes)\n        .map(clazz => decorators.get(clazz))\n        .filter(decorators => !!decorators);\n    if (decoratorsForClassChain.length == 0)\n        return {};\n    if (decoratorsForClassChain.length == 1)\n        return decoratorsForClassChain[0];\n    return decoratorsForClassChain.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst directDecoratorSearch = (...classes) => {\n    const classDecorators = classes.map(clazz => getDecoratorsForClass(clazz));\n    if (classDecorators.length === 0)\n        return {};\n    if (classDecorators.length === 1)\n        return classDecorators[0];\n    return classDecorators.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst getDecoratorsForClass = (clazz) => {\n    let decoratorsForClass = decorators.get(clazz);\n    if (!decoratorsForClass) {\n        decoratorsForClass = {};\n        decorators.set(clazz, decoratorsForClass);\n    }\n    return decoratorsForClass;\n};\nconst decorateClass = (decorator) => ((clazz) => {\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    let classDecorators = decoratorsForClass.class;\n    if (!classDecorators) {\n        classDecorators = [];\n        decoratorsForClass.class = classDecorators;\n    }\n    classDecorators.push(decorator);\n    return decorator(clazz);\n});\nconst decorateMember = (decorator) => ((object, key, ...otherArgs) => {\n    var _a, _b, _c;\n    const decoratorTargetType = typeof object === 'function' ? 'static' : 'instance';\n    const decoratorType = typeof object[key] === 'function' ? 'method' : 'property';\n    const clazz = decoratorTargetType === 'static' ? object : object.constructor;\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    const decoratorsForTargetType = (_a = decoratorsForClass === null || decoratorsForClass === void 0 ? void 0 : decoratorsForClass[decoratorTargetType]) !== null && _a !== void 0 ? _a : {};\n    decoratorsForClass[decoratorTargetType] = decoratorsForTargetType;\n    let decoratorsForType = (_b = decoratorsForTargetType === null || decoratorsForTargetType === void 0 ? void 0 : decoratorsForTargetType[decoratorType]) !== null && _b !== void 0 ? _b : {};\n    decoratorsForTargetType[decoratorType] = decoratorsForType;\n    let decoratorsForKey = (_c = decoratorsForType === null || decoratorsForType === void 0 ? void 0 : decoratorsForType[key]) !== null && _c !== void 0 ? _c : [];\n    decoratorsForType[key] = decoratorsForKey;\n    // @ts-ignore: array is type `A[] | B[]` and item is type `A | B`, so technically a type error, but it's fine\n    decoratorsForKey.push(decorator);\n    // @ts-ignore\n    return decorator(object, key, ...otherArgs);\n});\nconst decorate = (decorator) => ((...args) => {\n    if (args.length === 1)\n        return decorateClass(decorator)(args[0]);\n    return decorateMember(decorator)(...args);\n});\n\nfunction Mixin(...constructors) {\n    var _a, _b, _c;\n    const prototypes = constructors.map(constructor => constructor.prototype);\n    // Here we gather up the init functions of the ingredient prototypes, combine them into one init function, and\n    // attach it to the mixed class prototype.  The reason we do this is because we want the init functions to mix\n    // similarly to constructors -- not methods, which simply override each other.\n    const initFunctionName = settings.initFunction;\n    if (initFunctionName !== null) {\n        const initFunctions = prototypes\n            .map(proto => proto[initFunctionName])\n            .filter(func => typeof func === 'function');\n        const combinedInitFunction = function (...args) {\n            for (let initFunction of initFunctions)\n                initFunction.apply(this, args);\n        };\n        const extraProto = { [initFunctionName]: combinedInitFunction };\n        prototypes.push(extraProto);\n    }\n    function MixedClass(...args) {\n        for (const constructor of constructors)\n            // @ts-ignore: potentially abstract class\n            copyProps(this, new constructor(...args));\n        if (initFunctionName !== null && typeof this[initFunctionName] === 'function')\n            this[initFunctionName].apply(this, args);\n    }\n    MixedClass.prototype = settings.prototypeStrategy === 'copy'\n        ? hardMixProtos(prototypes, MixedClass)\n        : softMixProtos(prototypes, MixedClass);\n    Object.setPrototypeOf(MixedClass, settings.staticsStrategy === 'copy'\n        ? hardMixProtos(constructors, null, ['prototype'])\n        : proxyMix(constructors, Function.prototype));\n    let DecoratedMixedClass = MixedClass;\n    if (settings.decoratorInheritance !== 'none') {\n        const classDecorators = settings.decoratorInheritance === 'deep'\n            ? deepDecoratorSearch(...constructors)\n            : directDecoratorSearch(...constructors);\n        for (let decorator of (_a = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.class) !== null && _a !== void 0 ? _a : []) {\n            const result = decorator(DecoratedMixedClass);\n            if (result) {\n                DecoratedMixedClass = result;\n            }\n        }\n        applyPropAndMethodDecorators((_b = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.static) !== null && _b !== void 0 ? _b : {}, DecoratedMixedClass);\n        applyPropAndMethodDecorators((_c = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.instance) !== null && _c !== void 0 ? _c : {}, DecoratedMixedClass.prototype);\n    }\n    registerMixins(DecoratedMixedClass, constructors);\n    return DecoratedMixedClass;\n}\nconst applyPropAndMethodDecorators = (propAndMethodDecorators, target) => {\n    const propDecorators = propAndMethodDecorators.property;\n    const methodDecorators = propAndMethodDecorators.method;\n    if (propDecorators)\n        for (let key in propDecorators)\n            for (let decorator of propDecorators[key])\n                decorator(target, key);\n    if (methodDecorators)\n        for (let key in methodDecorators)\n            for (let decorator of methodDecorators[key])\n                decorator(target, key, Object.getOwnPropertyDescriptor(target, key));\n};\n/**\n * A decorator version of the `Mixin` function.  You'll want to use this instead of `Mixin` for mixing generic classes.\n */\nconst mix = (...ingredients) => decoratedClass => {\n    // @ts-ignore\n    const mixedClass = Mixin(...ingredients.concat([decoratedClass]));\n    Object.defineProperty(mixedClass, 'name', {\n        value: decoratedClass.name,\n        writable: false,\n    });\n    return mixedClass;\n};\n\nexport { Mixin, decorate, hasMixin, mix, settings };\n","export enum GeometryType {\r\n    Point = 'Point',\r\n    LineString = 'LineString',\r\n    LinearRing = 'LinearRing',\r\n    Polygon = 'Polygon',\r\n    MultiPoint = 'MultiPoint',\r\n    MultiLineString = 'MultiLineString',\r\n    MultiPolygon = 'MultiPolygon',\r\n    GeometryCollection = 'GeometryCollection',\r\n    Circle = 'Circle'\r\n}\r\n\r\nexport enum TransactionType {\r\n    Insert = 'insert',\r\n    Delete = 'delete',\r\n    Update = 'update'\r\n}\r\n","import Map from 'ol/Map.js';\r\nimport { FeatureLike } from 'ol/Feature.js';\r\n\r\nimport WfsLayer from '../WfsLayer';\r\nimport WmsLayer from '../WmsLayer';\r\nimport { IWfstLayersList } from '../@types';\r\n\r\nlet map: Map;\r\nlet layerToInsertElements: WfsLayer | WmsLayer = null;\r\nlet mode = null;\r\n\r\nexport enum Modes {\r\n    Edit = 'EDIT',\r\n    Draw = 'DRAW'\r\n}\r\n\r\nexport function activateMode(m: Modes = null) {\r\n    mode = m;\r\n}\r\n\r\nexport function getMode() {\r\n    return mode;\r\n}\r\n\r\nconst editedFeatures: Set<string> = new Set();\r\nconst mapLayers: IWfstLayersList = {};\r\n\r\nexport function setMap(m: Map) {\r\n    map = m;\r\n}\r\n\r\nexport function getMap(): Map {\r\n    return map;\r\n}\r\n\r\nexport function setActiveLayerToInsertEls(layer: WmsLayer | WfsLayer) {\r\n    layerToInsertElements = layer;\r\n}\r\n\r\nexport function getActiveLayerToInsertEls(): WmsLayer | WfsLayer {\r\n    return layerToInsertElements;\r\n}\r\n\r\nexport function setMapLayers(data) {\r\n    Object.assign(mapLayers, data);\r\n}\r\n\r\nexport function getStoredMapLayers(): IWfstLayersList {\r\n    return mapLayers;\r\n}\r\n\r\nexport function getStoredLayer(layerName: string): WfsLayer | WmsLayer {\r\n    return getStoredMapLayers()[layerName];\r\n}\r\n\r\nexport function addFeatureToEditedList(feature: FeatureLike): void {\r\n    editedFeatures.add(String(feature.getId()));\r\n}\r\n\r\nexport function removeFeatureFromEditList(feature: FeatureLike): void {\r\n    editedFeatures.delete(String(feature.getId()));\r\n}\r\n\r\nexport function isFeatureEdited(feature: FeatureLike): boolean {\r\n    return editedFeatures.has(String(feature.getId()));\r\n}\r\n","import Feature from 'ol/Feature.js';\r\nimport Geometry from 'ol/geom/Geometry.js';\r\nimport { TransactionResponse } from 'ol/format/WFS.js';\r\nimport Layer from 'ol/layer/Base.js';\r\n\r\nimport Geoserver from '../../Geoserver';\r\nimport { IGeoserverDescribeFeatureType } from '../../@types';\r\nimport { GeometryType, TransactionType } from '../../@enums';\r\nimport { I18N } from '../i18n';\r\nimport { getMap } from '../state';\r\nimport { showError } from '../errors';\r\nimport { parseError } from '../errors';\r\n\r\n/**\r\n * Base class from which all layer types are derived.\r\n */\r\nexport default class BaseLayer extends Layer {\r\n    /**\r\n     * @private\r\n     */\r\n    _init(): void {\r\n        const geoserver = this.getGeoserver() as Geoserver;\r\n\r\n        if (geoserver.isLoaded()) {\r\n            this.getAndUpdateDescribeFeatureType();\r\n        } else {\r\n            geoserver.on('change:capabilities', async () => {\r\n                this.getAndUpdateDescribeFeatureType();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Request and store data layers obtained by DescribeFeatureType\r\n     *\r\n     * @public\r\n     */\r\n    async getAndUpdateDescribeFeatureType(): Promise<void> {\r\n        const layerName = this.get(BaseLayerProperty.NAME);\r\n        const layerLabel = this.get(BaseLayerProperty.LABEL);\r\n\r\n        try {\r\n            const geoserver = this.getGeoserver() as Geoserver;\r\n\r\n            const params = new URLSearchParams({\r\n                service: 'wfs',\r\n                version: geoserver.getAdvanced().describeFeatureTypeVersion,\r\n                request: 'DescribeFeatureType',\r\n                typeName: layerName,\r\n                outputFormat: 'application/json',\r\n                exceptions: 'application/json'\r\n            });\r\n\r\n            const url_fetch = geoserver.getUrl() + '?' + params.toString();\r\n\r\n            const response = await fetch(url_fetch, {\r\n                headers: geoserver.getHeaders(),\r\n                credentials: geoserver.getCredentials()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('');\r\n            }\r\n\r\n            const data: IGeoserverDescribeFeatureType = await response.json();\r\n\r\n            if (!data) {\r\n                throw new Error('');\r\n            }\r\n\r\n            if (data.exceptions) {\r\n                throw new Error(parseError(data));\r\n            }\r\n\r\n            const targetNamespace = data.targetNamespace;\r\n            const properties = data.featureTypes[0].properties;\r\n\r\n            // Find the geometry field\r\n            const geom = properties.find((el) => el.type.indexOf('gml:') >= 0);\r\n\r\n            data._parsed = {\r\n                namespace: targetNamespace,\r\n                properties: properties,\r\n                geomType: geom.localType as GeometryType,\r\n                geomField: geom.name\r\n            };\r\n\r\n            this.set(BaseLayerProperty.DESCRIBEFEATURETYPE, data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            showError(`${I18N.errors.layer} \"${layerLabel}\"`, err, layerName);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns\r\n     */\r\n    isVisibleByZoom(): boolean {\r\n        return getMap().getView().getZoom() > this.getMinZoom();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param mode\r\n     * @param features\r\n     * @public\r\n     */\r\n    async transactFeatures(\r\n        mode: TransactionType,\r\n        features: Array<Feature<Geometry>> | Feature<Geometry>\r\n    ): Promise<TransactionResponse | false> {\r\n        const geoserver = this.getGeoserver() as Geoserver;\r\n        return geoserver.transact(\r\n            mode,\r\n            features,\r\n            this.get(BaseLayerProperty.NAME)\r\n        );\r\n    }\r\n\r\n    async insertFeatures(\r\n        features: Array<Feature<Geometry>> | Feature<Geometry>\r\n    ): Promise<TransactionResponse | false> {\r\n        return this.transactFeatures(TransactionType.Insert, features);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param featureId\r\n     * @returns\r\n     */\r\n    async maybeLockFeature(featureId: string | number): Promise<string> {\r\n        const geoserver = this.getGeoserver() as Geoserver;\r\n\r\n        if (geoserver.getUseLockFeature() && geoserver.hasLockFeature()) {\r\n            return await geoserver.lockFeature(\r\n                featureId,\r\n                this.get(BaseLayerProperty.NAME)\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getGeoserver(): Geoserver {\r\n        return this.get(BaseLayerProperty.GEOSERVER);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getDescribeFeatureType(): IGeoserverDescribeFeatureType {\r\n        return this.get(BaseLayerProperty.DESCRIBEFEATURETYPE);\r\n    }\r\n}\r\n\r\nexport enum BaseLayerProperty {\r\n    NAME = 'name',\r\n    LABEL = 'label',\r\n    DESCRIBEFEATURETYPE = 'describeFeatureType',\r\n    ISVISIBLE = 'isVisible',\r\n    GEOSERVER = 'geoserver'\r\n}\r\n\r\nexport type BaseLayerEventTypes =\r\n    | 'layerRendered'\r\n    | `change:${BaseLayerProperty.DESCRIBEFEATURETYPE}`\r\n    | `change:${BaseLayerProperty.ISVISIBLE}`;\r\n","import Feature from 'ol/Feature.js';\r\nimport GeoJSON from 'ol/format/GeoJSON.js';\r\nimport Geometry from 'ol/geom/Geometry.js';\r\nimport VectorSource, { Options as VSOptions } from 'ol/source/Vector.js';\r\nimport { transformExtent } from 'ol/proj.js';\r\nimport { bbox } from 'ol/loadingstrategy.js';\r\n\r\nimport { WfsGeoserverVendor } from '../../@types';\r\nimport { parseError, showError } from '../errors';\r\nimport { I18N } from '../i18n';\r\nimport { GeoServerAdvanced } from '../../Geoserver';\r\n\r\n/**\r\n * Layer source to retrieve WFS features from geoservers\r\n * https://docs.geoserver.org/stable/en/user/services/wfs/reference.html\r\n *\r\n * @extends {ol/source/Vector~VectorSource}\r\n * @param options\r\n */\r\nexport default class WfsSource extends VectorSource {\r\n    public urlParams = new URLSearchParams({\r\n        SERVICE: 'wfs',\r\n        REQUEST: 'GetFeature',\r\n        OUTPUTFORMAT: 'application/json',\r\n        EXCEPTIONS: 'application/json'\r\n    });\r\n\r\n    constructor(options: WfsSourceOptions) {\r\n        super({\r\n            ...options,\r\n            format: new GeoJSON(),\r\n            loader: async (\r\n                extent,\r\n                resolution,\r\n                projection,\r\n                success,\r\n                failure\r\n            ) => {\r\n                try {\r\n                    // If bbox, add extent to the request\r\n                    if (options.strategy == bbox) {\r\n                        const extentGeoServer = transformExtent(\r\n                            extent,\r\n                            projection.getCode(),\r\n                            options.geoServerAdvanced.projection\r\n                        );\r\n                        // https://docs.geoserver.org/stable/en/user/services/wfs/reference.html\r\n                        // request features using a bounding box with CRS maybe different from featureTypes native CRS\r\n                        this.urlParams.set(\r\n                            'bbox',\r\n                            extentGeoServer.toString() +\r\n                                `,${options.geoServerAdvanced.projection}`\r\n                        );\r\n                    }\r\n\r\n                    const url_fetch =\r\n                        options.geoserverUrl + '?' + this.urlParams.toString();\r\n\r\n                    const response = await fetch(url_fetch, {\r\n                        headers: options.headers,\r\n                        credentials: options.credentials\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        throw new Error('');\r\n                    }\r\n\r\n                    const data = await response.json();\r\n\r\n                    if (data.exceptions) {\r\n                        throw new Error(parseError(data));\r\n                    }\r\n\r\n                    const features = this.getFormat().readFeatures(data, {\r\n                        featureProjection: projection.getCode(),\r\n                        dataProjection: options.geoServerAdvanced.projection\r\n                    });\r\n\r\n                    features.forEach((feature: Feature<Geometry>) => {\r\n                        feature.set(\r\n                            '_layerName_',\r\n                            options.name,\r\n                            /* silent = */ true\r\n                        );\r\n                    });\r\n\r\n                    this.addFeatures(features as Feature<Geometry>[]);\r\n\r\n                    success(features as Feature<Geometry>[]);\r\n                } catch (err) {\r\n                    this.removeLoadedExtent(extent);\r\n\r\n                    showError(I18N.errors.geoserver, err, options.name);\r\n\r\n                    failure();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.urlParams.set(\r\n            'version',\r\n            options.geoServerAdvanced.getFeatureVersion\r\n        );\r\n\r\n        this.urlParams.set('typename', options.name);\r\n\r\n        this.urlParams.set(\r\n            'srsName',\r\n            options.geoServerAdvanced.projection.toString()\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * **_[interface]_** - Parameters to create a WfsSource\r\n *\r\n * @public\r\n */\r\nexport interface WfsSourceOptions extends VSOptions {\r\n    /**\r\n     * Layer name in the GeoServer\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * Url for OWS services. This endpoint will recive the WFS, WFST and WMS requests\r\n     */\r\n    geoserverUrl: string;\r\n\r\n    /**\r\n     * Advanced options for geoserver requests\r\n     */\r\n    geoServerAdvanced?: GeoServerAdvanced;\r\n\r\n    /**\r\n     *\r\n     */\r\n    geoserverVendor?: WfsGeoserverVendor;\r\n\r\n    /**\r\n     * Url headers for GeoServer requests. You can use it to add Authorization credentials\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Request/headers\r\n     */\r\n    headers?: HeadersInit;\r\n\r\n    /**\r\n     * Credentials for fetch requests\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials\r\n     */\r\n    credentials?: RequestCredentials;\r\n}\r\n","import Feature from 'ol/Feature.js';\r\nimport Geometry from 'ol/geom/Geometry.js';\r\nimport VectorLayer from 'ol/layer/Vector.js';\r\nimport BaseEvent from 'ol/events/Event.js';\r\nimport { CombinedOnSignature, EventTypes, OnSignature } from 'ol/Observable.js';\r\nimport { EventsKey } from 'ol/events.js';\r\nimport { LayerRenderEventTypes } from 'ol/render/EventType.js';\r\nimport { BaseLayerObjectEventTypes } from 'ol/layer/Base.js';\r\nimport { ObjectEvent } from 'ol/Object.js';\r\nimport RenderEvent from 'ol/render/Event.js';\r\n\r\nimport { Mixin } from 'ts-mixer';\r\n\r\nimport BaseLayer, { BaseLayerEventTypes } from './modules/base/BaseLayer';\r\nimport WfsSource from './modules/base/WfsSource';\r\nimport { LayerOptions } from './ol-wfst';\r\nimport { showLoading } from './modules/loading';\r\nimport { TransactionType } from './@enums';\r\nimport { WfsGeoserverVendor } from './@types';\r\n\r\n/**\r\n * Layer to retrieve WFS features from geoservers\r\n * https://docs.geoserver.org/stable/en/user/services/wfs/reference.html\r\n *\r\n * @fires layerRendered\r\n * @extends {ol/layer/Vector~VectorLayer}\r\n * @param options\r\n */\r\nexport default class WfsLayer extends Mixin(BaseLayer, VectorLayer<WfsSource>) {\r\n    private _loadingCount = 0;\r\n    private _loadedCount = 0;\r\n\r\n    public beforeTransactFeature: (\r\n        feature: Feature<Geometry>,\r\n        transaction: TransactionType\r\n    ) => Feature<Geometry>;\r\n\r\n    declare on: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'change:source'\r\n            | 'sourceready',\r\n            ObjectEvent,\r\n            EventsKey\r\n        > &\r\n        OnSignature<LayerRenderEventTypes, RenderEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            | EventTypes\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'change:source'\r\n            | 'sourceready'\r\n            | LayerRenderEventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare once: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'change:source'\r\n            | 'sourceready',\r\n            ObjectEvent,\r\n            EventsKey\r\n        > &\r\n        OnSignature<LayerRenderEventTypes, RenderEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            | EventTypes\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'change:source'\r\n            | 'sourceready'\r\n            | LayerRenderEventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare un: OnSignature<EventTypes, BaseEvent, void> &\r\n        OnSignature<\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'change:source'\r\n            | 'sourceready',\r\n            ObjectEvent,\r\n            void\r\n        > &\r\n        OnSignature<LayerRenderEventTypes, RenderEvent, void> &\r\n        CombinedOnSignature<\r\n            | EventTypes\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'change:source'\r\n            | 'sourceready'\r\n            | LayerRenderEventTypes,\r\n            void\r\n        >;\r\n\r\n    constructor(options: LayerOptions) {\r\n        super({\r\n            name: options.name,\r\n            label: options.label || options.name,\r\n            minZoom: options.minZoom,\r\n            ...options\r\n        });\r\n\r\n        if (options.beforeTransactFeature) {\r\n            this.beforeTransactFeature = options.beforeTransactFeature;\r\n        }\r\n\r\n        const geoserver = options.geoserver;\r\n\r\n        const source = new WfsSource({\r\n            name: options.name,\r\n            headers: geoserver.getHeaders(),\r\n            credentials: geoserver.getCredentials(),\r\n            geoserverUrl: geoserver.getUrl(),\r\n            geoServerAdvanced: geoserver.getAdvanced(),\r\n            ...(options.strategy && { strategy: options.strategy }),\r\n            geoserverVendor: options.geoserverVendor\r\n        });\r\n\r\n        this._loadingCount = 0;\r\n        this._loadedCount = 0;\r\n\r\n        source.on('featuresloadstart', () => {\r\n            this._loadingCount++;\r\n            if (this._loadingCount === 1 && this.isVisibleByZoom()) {\r\n                showLoading();\r\n            }\r\n        });\r\n\r\n        source.on(['featuresloadend', 'featuresloaderror'], () => {\r\n            this._loadedCount++;\r\n            if (this._loadingCount === this._loadedCount) {\r\n                this._loadingCount = 0;\r\n                this._loadedCount = 0;\r\n                setTimeout(() => {\r\n                    this.dispatchEvent('layerRendered');\r\n                }, 300);\r\n            }\r\n        });\r\n\r\n        this.setSource(source);\r\n\r\n        const geoserverOptions = options.geoserverVendor as WfsGeoserverVendor;\r\n\r\n        Object.keys(geoserverOptions).forEach((param) => {\r\n            source.urlParams.set(param, geoserverOptions[param]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    refresh() {\r\n        const source = this.getSource();\r\n        // Refrescamos el wms\r\n        source.refresh();\r\n    }\r\n\r\n    /**\r\n     * Use this to update Geoserver Wms Vendors (https://docs.geoserver.org/latest/en/user/services/wms/vendor.html)\r\n     * and other arguements (https://docs.geoserver.org/stable/en/user/services/wms/reference.html#getmap)\r\n     * in all the getMap requests.\r\n     *\r\n     * Example: you can use this to change the style of the WMS, add a custom sld, set a cql_filter, etc.\r\n     *\r\n     * @public\r\n     * @param paramName\r\n     * @param value Use `undefined` or `null` to remove the param\r\n     * @param refresh\r\n     */\r\n    setCustomParam(\r\n        paramName: string,\r\n        value: string = null,\r\n        refresh = true\r\n    ): URLSearchParams {\r\n        const source = this.getSource();\r\n\r\n        if (value === undefined || value === null) {\r\n            source.urlParams.delete(paramName);\r\n        } else {\r\n            source.urlParams.set(paramName, value);\r\n        }\r\n\r\n        if (refresh) {\r\n            this.refresh();\r\n        }\r\n\r\n        return source.urlParams;\r\n    }\r\n}\r\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","import TileWMS, { Options as TSOptions } from 'ol/source/TileWMS.js';\r\nimport TileState from 'ol/TileState.js';\r\nimport ImageTile from 'ol/ImageTile.js';\r\n\r\nimport { WmsGeoserverVendor } from '../../@types';\r\nimport { parseError, showError } from '../errors';\r\nimport { I18N } from '../i18n';\r\nimport { GeoServerAdvanced } from '../../Geoserver';\r\n\r\n/**\r\n * Layer source to retrieve WMS information from geoservers\r\n * https://docs.geoserver.org/stable/en/user/services/wms/reference.html\r\n *\r\n * @extends {ol/source/TieWMS~TileWMS}\r\n * @param options\r\n */\r\nexport default class WmsSource extends TileWMS {\r\n    constructor(options: WmsSourceOptions) {\r\n        super({\r\n            url: options.geoserverUrl,\r\n            serverType: 'geoserver',\r\n            params: {\r\n                SERVICE: 'wms',\r\n                TILED: true,\r\n                LAYERS: options.name,\r\n                EXCEPTIONS: 'application/json',\r\n                ...(options.geoserverVendor && options.geoserverVendor)\r\n            },\r\n            tileLoadFunction: async (tile, src) => {\r\n                const blobToJson = (blob: Blob): any => {\r\n                    return new Promise((resolve) => {\r\n                        const reader = new FileReader();\r\n                        reader.onloadend = () =>\r\n                            resolve(JSON.parse(reader.result as string));\r\n                        reader.readAsText(blob);\r\n                    });\r\n                };\r\n\r\n                try {\r\n                    const response = await fetch(src, {\r\n                        headers: options.headers,\r\n                        credentials: options.credentials\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        throw new Error('');\r\n                    }\r\n\r\n                    let data = await response.blob();\r\n\r\n                    // Check if the response has an error\r\n                    if (data.type == 'application/json') {\r\n                        const parsedError = await blobToJson(data);\r\n                        throw new Error(parseError(parsedError));\r\n                    }\r\n\r\n                    ((tile as ImageTile).getImage() as HTMLImageElement).src =\r\n                        URL.createObjectURL(data);\r\n\r\n                    tile.setState(TileState.LOADED);\r\n                } catch (err) {\r\n                    showError(I18N.errors.geoserver, err, options.name);\r\n                    tile.setState(TileState.ERROR);\r\n                }\r\n            },\r\n            ...options\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * **_[interface]_** - Parameters to create a WmsSource\r\n *\r\n * @public\r\n */\r\nexport interface WmsSourceOptions extends Omit<TSOptions, 'params'> {\r\n    /**\r\n     * Layer name in the GeoServer\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * Url for OWS services. This endpoint will recive the WFS, WFST and WMS requests\r\n     */\r\n    geoserverUrl: string;\r\n\r\n    /**\r\n     * Advanced options for geoserver requests\r\n     */\r\n    geoServerAdvanced?: GeoServerAdvanced;\r\n\r\n    /**\r\n     *\r\n     */\r\n    geoserverVendor?: WmsGeoserverVendor;\r\n\r\n    /**\r\n     * Url headers for GeoServer requests. You can use it to add Authorization credentials\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Request/headers\r\n     */\r\n    headers?: HeadersInit;\r\n\r\n    /**\r\n     * Credentials for fetch requests\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials\r\n     */\r\n    credentials?: RequestCredentials;\r\n}\r\n","import MapBrowserEvent from 'ol/MapBrowserEvent.js';\r\nimport TileLayer from 'ol/layer/Tile.js';\r\nimport Geometry from 'ol/geom/Geometry.js';\r\nimport Feature from 'ol/Feature.js';\r\nimport GeoJSON from 'ol/format/GeoJSON.js';\r\nimport BaseEvent from 'ol/events/Event.js';\r\nimport { CombinedOnSignature, EventTypes, OnSignature } from 'ol/Observable.js';\r\nimport { EventsKey } from 'ol/events.js';\r\nimport { LayerRenderEventTypes } from 'ol/render/EventType.js';\r\nimport { BaseLayerObjectEventTypes } from 'ol/layer/Base.js';\r\nimport { ObjectEvent } from 'ol/Object.js';\r\nimport RenderEvent from 'ol/render/Event.js';\r\n\r\nimport { Mixin } from 'ts-mixer';\r\n\r\nimport WmsSource from './modules/base/WmsSource';\r\nimport BaseLayer, { BaseLayerEventTypes } from './modules/base/BaseLayer';\r\nimport { LayerOptions } from './ol-wfst';\r\nimport { showLoading } from './modules/loading';\r\nimport { TransactionType } from './@enums';\r\nimport { showError } from './modules/errors';\r\nimport { I18N } from './modules/i18n';\r\nimport { getMap } from './modules/state';\r\nimport { WmsGeoserverVendor } from './@types';\r\n\r\n/**\r\n * Layer to retrieve WMS information from geoservers\r\n * https://docs.geoserver.org/stable/en/user/services/wms/reference.html\r\n *\r\n * @fires layerRendered\r\n * @extends {ol/layer/Tile~TileLayer}\r\n * @param options\r\n */\r\nexport default class WmsLayer extends Mixin(BaseLayer, TileLayer<WmsSource>) {\r\n    private _loadingCount = 0;\r\n    private _loadedCount = 0;\r\n\r\n    public beforeTransactFeature: (\r\n        feature: Feature<Geometry>,\r\n        transaction: TransactionType\r\n    ) => Feature<Geometry>;\r\n\r\n    // Formats\r\n    private _formatGeoJSON: GeoJSON;\r\n\r\n    declare on: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'sourceready'\r\n            | 'change:source'\r\n            | 'change:preload'\r\n            | 'change:useInterimTilesOnError',\r\n            ObjectEvent,\r\n            EventsKey\r\n        > &\r\n        OnSignature<LayerRenderEventTypes, RenderEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            | EventTypes\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'sourceready'\r\n            | 'change:source'\r\n            | 'change:preload'\r\n            | 'change:useInterimTilesOnError'\r\n            | LayerRenderEventTypes,\r\n            EventsKey\r\n        >;\r\n    declare once: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'sourceready'\r\n            | 'change:source'\r\n            | 'change:preload'\r\n            | 'change:useInterimTilesOnError',\r\n            ObjectEvent,\r\n            EventsKey\r\n        > &\r\n        OnSignature<LayerRenderEventTypes, RenderEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            | EventTypes\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'sourceready'\r\n            | 'change:source'\r\n            | 'change:preload'\r\n            | 'change:useInterimTilesOnError'\r\n            | LayerRenderEventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare un: OnSignature<EventTypes, BaseEvent, void> &\r\n        OnSignature<\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'sourceready'\r\n            | 'change:source'\r\n            | 'change:preload'\r\n            | 'change:useInterimTilesOnError',\r\n            ObjectEvent,\r\n            void\r\n        > &\r\n        OnSignature<LayerRenderEventTypes, RenderEvent, void> &\r\n        CombinedOnSignature<\r\n            | EventTypes\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'sourceready'\r\n            | 'change:source'\r\n            | 'change:preload'\r\n            | 'change:useInterimTilesOnError'\r\n            | LayerRenderEventTypes,\r\n            void\r\n        >;\r\n\r\n    constructor(options: LayerOptions) {\r\n        super({\r\n            name: options.name,\r\n            label: options.label || options.name,\r\n            minZoom: options.minZoom,\r\n            ...options\r\n        });\r\n\r\n        if (options.beforeTransactFeature) {\r\n            this.beforeTransactFeature = options.beforeTransactFeature;\r\n        }\r\n\r\n        this._formatGeoJSON = new GeoJSON();\r\n\r\n        const geoserver = options.geoserver;\r\n\r\n        const source = new WmsSource({\r\n            name: options.name,\r\n            headers: geoserver.getHeaders(),\r\n            credentials: geoserver.getCredentials(),\r\n            geoserverUrl: geoserver.getUrl(),\r\n            geoServerAdvanced: geoserver.getAdvanced(),\r\n            geoserverVendor: options.geoserverVendor as WmsGeoserverVendor\r\n        });\r\n\r\n        this._loadingCount = 0;\r\n        this._loadedCount = 0;\r\n\r\n        source.on('tileloadstart', () => {\r\n            this._loadingCount++;\r\n            if (this._loadingCount === 1 && this.isVisibleByZoom()) {\r\n                showLoading();\r\n            }\r\n        });\r\n\r\n        source.on(['tileloadend', 'tileloaderror'], () => {\r\n            this._loadedCount++;\r\n            if (this._loadingCount === this._loadedCount) {\r\n                this._loadingCount = 0;\r\n                this._loadedCount = 0;\r\n                setTimeout(() => {\r\n                    this.dispatchEvent('layerRendered');\r\n                }, 300);\r\n            }\r\n        });\r\n\r\n        this.setSource(source);\r\n    }\r\n\r\n    /**\r\n     * Get the features on the click area\r\n     * @param evt\r\n     * @returns\r\n     * @private\r\n     */\r\n    async _getFeaturesByClickEvent(\r\n        evt: MapBrowserEvent<MouseEvent>\r\n    ): Promise<Feature<Geometry>[]> {\r\n        const coordinate = evt.coordinate;\r\n\r\n        const view = getMap().getView();\r\n\r\n        // Si la vista es lejana, disminumos el buffer\r\n        // Si es cercana, lo aumentamos, por ejemplo, para podeer clickear los vectores\r\n        // y mejorar la sensibilidad en IOS\r\n        const buffer = view.getZoom() > 10 ? 10 : 5;\r\n\r\n        const source = this.getSource();\r\n\r\n        // Fallback to support a bad name\r\n        // https://openlayers.org/en/v5.3.0/apidoc/module-ol_source_ImageWMS-ImageWMS.html#getGetFeatureInfoUrl\r\n        const fallbackOl5 =\r\n            'getFeatureInfoUrl' in source\r\n                ? 'getFeatureInfoUrl'\r\n                : 'getGetFeatureInfoUrl';\r\n\r\n        const url = source[fallbackOl5](\r\n            coordinate,\r\n            view.getResolution(),\r\n            view.getProjection().getCode(),\r\n            {\r\n                INFO_FORMAT: 'application/json',\r\n                BUFFER: buffer,\r\n                FEATURE_COUNT: 1,\r\n                EXCEPTIONS: 'application/json'\r\n            }\r\n        );\r\n\r\n        const geoserver = this.getGeoserver();\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                headers: geoserver.getHeaders(),\r\n                credentials: geoserver.getCredentials()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\r\n                    `${I18N.errors.getFeatures} ${response.status}`\r\n                );\r\n            }\r\n\r\n            const data = await response.json();\r\n            let features = this._parseFeaturesFromResponse(data);\r\n\r\n            const featuresId = features.map((f) => f.getId());\r\n\r\n            const fullResList = await this._getFullResGeometryById(featuresId);\r\n\r\n            if (fullResList) {\r\n                features = fullResList;\r\n            }\r\n\r\n            return features;\r\n        } catch (err) {\r\n            showError(err.message, err);\r\n        }\r\n    }\r\n\r\n    private _parseFeaturesFromResponse(data: string): Feature<Geometry>[] {\r\n        return this._formatGeoJSON.readFeatures(data);\r\n    }\r\n\r\n    /**\r\n     * Return the full accuracy geometry to replace the feature from GetFEatureInfo\r\n     * @param featuresId\r\n     * @returns\r\n     */\r\n    private _getFullResGeometryById = async (\r\n        featuresId: Array<string | number>\r\n    ): Promise<Feature<Geometry>[] | false> => {\r\n        const queryParams = new URLSearchParams({\r\n            SERVICE: 'wfs',\r\n            VERSION: '2.0.0',\r\n            INFO_FORMAT: 'application/json',\r\n            REQUEST: 'GetFeature',\r\n            TYPENAME: this.get('name'),\r\n            MAXFEATURES: '1',\r\n            OUTPUTFORMAT: 'application/json',\r\n            SRSNAME: getMap().getView().getProjection().getCode(),\r\n            FEATUREID: String(featuresId)\r\n        });\r\n\r\n        const url =\r\n            this.getSource().getUrls()[0] + '?' + queryParams.toString();\r\n\r\n        try {\r\n            const geoserver = this.getGeoserver();\r\n\r\n            const response = await fetch(url, {\r\n                headers: geoserver.getHeaders(),\r\n                credentials: geoserver.getCredentials()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\r\n                    `${I18N.errors.getFeatures} ${response.status}`\r\n                );\r\n            }\r\n            const data = await response.json();\r\n            return this._parseFeaturesFromResponse(data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    refresh() {\r\n        const source = this.getSource();\r\n\r\n        // Refrescamos el wms\r\n        source.refresh();\r\n\r\n        // Force refresh the tiles\r\n        const params = source.getParams();\r\n        params.t = new Date().getMilliseconds();\r\n        source.updateParams(params);\r\n    }\r\n\r\n    /**\r\n     * Use this to update Geoserver Wfs Vendors (https://docs.geoserver.org/latest/en/user/services/wfs/vendor.html)\r\n     * and other arguements (https://docs.geoserver.org/stable/en/user/services/wfs/reference.html)\r\n     * in all the getFeature requests.\r\n     *\r\n     * Example: you can use this to set a cql_filter, limit the numbers of features, etc.\r\n     *\r\n     * @public\r\n     * @param paramName\r\n     * @param value\r\n     * @param refresh\r\n     */\r\n    setCustomParam(\r\n        paramName: string,\r\n        value: string = null,\r\n        refresh = true\r\n    ): URLSearchParams {\r\n        const source = this.getSource();\r\n\r\n        source.updateParams({\r\n            [paramName]: value\r\n        });\r\n\r\n        if (refresh) {\r\n            this.refresh();\r\n        }\r\n\r\n        return source.getParams();\r\n    }\r\n}\r\n","export default function createElement(tagName, attrs = {}, ...children) {\r\n    if (typeof tagName === 'function') return tagName(attrs, children);\r\n\r\n    const elem =\r\n        tagName === null\r\n            ? new DocumentFragment()\r\n            : document.createElement(tagName);\r\n\r\n    Object.entries(attrs || {}).forEach(([name, value]) => {\r\n        if (\r\n            typeof value !== 'undefined' &&\r\n            value !== null &&\r\n            value !== undefined\r\n        ) {\r\n            if (name.startsWith('on') && name.toLowerCase() in window)\r\n                elem.addEventListener(name.toLowerCase().substr(2), value);\r\n            else {\r\n                if (name === 'className')\r\n                    elem.setAttribute('class', value.toString());\r\n                else if (name === 'htmlFor')\r\n                    elem.setAttribute('for', value.toString());\r\n                else elem.setAttribute(name, value.toString());\r\n            }\r\n        }\r\n    });\r\n\r\n    for (const child of children) {\r\n        if (!child) continue;\r\n        if (Array.isArray(child)) elem.append(...child);\r\n        else {\r\n            if (child.nodeType === undefined) elem.innerHTML += child;\r\n            else elem.appendChild(child);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n","import Observable from 'ol/Observable.js';\r\n\r\nimport { Options, WfsLayer, WmsLayer } from '../ol-wfst';\r\n\r\nimport uploadSvg from '../assets/images/upload.svg';\r\nimport drawSvg from '../assets/images/draw.svg';\r\nimport visibilityOn from '../assets/images/visibilityOn.svg';\r\nimport visibilityOff from '../assets/images/visibilityOff.svg';\r\n\r\nimport { GeometryType } from '../@enums';\r\nimport {\r\n    getActiveLayerToInsertEls,\r\n    getStoredMapLayers,\r\n    setActiveLayerToInsertEls\r\n} from './state';\r\nimport { I18N } from './i18n';\r\nimport Uploads from './Uploads';\r\nimport { BaseLayerProperty } from './base/BaseLayer';\r\n\r\nimport myPragma from '../myPragma';\r\n\r\n/**\r\n * Removes in the DOM the class of the tools\r\n * @private\r\n */\r\nexport const resetStateButtons = (): void => {\r\n    const activeBtn = document.querySelector(\r\n        '.ol-wfst--tools-control-btn.wfst--active'\r\n    );\r\n    if (activeBtn) {\r\n        activeBtn.classList.remove('wfst--active');\r\n    }\r\n};\r\n\r\nexport const activateModeButtons = () => {\r\n    const btn = document.querySelector('.ol-wfst--tools-control-btn-edit');\r\n    if (btn) {\r\n        btn.classList.add('wfst--active');\r\n    }\r\n};\r\n\r\nexport const activateDrawButton = () => {\r\n    const btn = document.querySelector('.ol-wfst--tools-control-btn-draw');\r\n    if (btn) {\r\n        btn.classList.add('wfst--active');\r\n    }\r\n};\r\n\r\nexport default class LayersControl extends Observable {\r\n    protected _uploads: Uploads;\r\n    protected _uploadFormats: Options['uploadFormats'];\r\n\r\n    constructor(uploads: Uploads, uploadFormats: Options['uploadFormats']) {\r\n        super();\r\n\r\n        this._uploads = uploads;\r\n        this._uploadFormats = uploadFormats;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param layer\r\n     * @public\r\n     */\r\n    addLayerEl(layer: WfsLayer | WmsLayer): HTMLElement {\r\n        const container = document.querySelector(\r\n            '.wfst--tools-control--select-layers'\r\n        );\r\n\r\n        const layerName = layer.get(BaseLayerProperty.NAME) as string;\r\n        const checked =\r\n            layer === getActiveLayerToInsertEls() ? { checked: true } : {};\r\n\r\n        const input = (\r\n            <input\r\n                value={layerName}\r\n                id={`wfst--${layerName}`}\r\n                type=\"radio\"\r\n                className=\"ol-wfst--tools-control-input\"\r\n                name=\"wfst--select-layer\"\r\n                {...checked}\r\n                onChange={(evt) => this._layerChangeHandler(evt, layer)}\r\n            />\r\n        );\r\n\r\n        const layerDom = (\r\n            <div\r\n                className={`wfst--layer-control \r\n                            ${layer.getVisible() ? 'ol-wfst--visible-on' : ''}\r\n                            ${\r\n                                layer === getActiveLayerToInsertEls()\r\n                                    ? 'ol-wfst--selected-on'\r\n                                    : ''\r\n                            }`}\r\n                data-layer={layerName}\r\n            >\r\n                <div className=\"ol-wfst--tools-control-visible\">\r\n                    <span\r\n                        className=\"ol-wfst--tools-control-visible-btn ol-wfst--visible-btn-on\"\r\n                        title={I18N.labels.toggleVisibility}\r\n                        onClick={(evt) => this._visibilityClickHandler(evt)}\r\n                    >\r\n                        <img src={visibilityOn} />\r\n                    </span>\r\n                    <span\r\n                        className=\"ol-wfst--tools-control-visible-btn ol-wfst--visible-btn-off\"\r\n                        title={I18N.labels.toggleVisibility}\r\n                        onClick={(evt) => this._visibilityClickHandler(evt)}\r\n                    >\r\n                        <img src={visibilityOff} />\r\n                    </span>\r\n                </div>\r\n                <label htmlFor={`wfst--${layerName}`}>\r\n                    {input}\r\n                    <span\r\n                        title={layer.getDescribeFeatureType()._parsed.geomType}\r\n                    >\r\n                        {layer.get(BaseLayerProperty.LABEL)}\r\n                    </span>\r\n                </label>\r\n            </div>\r\n        );\r\n\r\n        container.appendChild(layerDom);\r\n\r\n        if (layer === getActiveLayerToInsertEls()) {\r\n            input.dispatchEvent(new Event('change'));\r\n        }\r\n\r\n        return layerDom;\r\n    }\r\n\r\n    /**\r\n     * Update geom Types availibles to select for this layer\r\n     *\r\n     * @param layerName\r\n     * @param geomDrawTypeSelected\r\n     * @private\r\n     */\r\n    _changeStateSelect(\r\n        layer: WmsLayer | WfsLayer,\r\n        geomDrawTypeSelected: GeometryType = null\r\n    ): GeometryType {\r\n        /**\r\n         * Set the geometry type in the select according to the geometry of\r\n         * the layer in the geoserver and disable what does not correspond.\r\n         *\r\n         * @param value\r\n         * @param options\r\n         * @private\r\n         */\r\n        const setSelectState = (\r\n            value: GeometryType,\r\n            options: Array<string> | 'all'\r\n        ): void => {\r\n            Array.from(selectDraw.options).forEach(\r\n                (option: HTMLOptionElement) => {\r\n                    option.selected = option.value === value ? true : false;\r\n                    option.disabled =\r\n                        options === 'all'\r\n                            ? false\r\n                            : options.includes(option.value)\r\n                            ? false\r\n                            : true;\r\n                    option.title = option.disabled\r\n                        ? I18N.labels.geomTypeNotSupported\r\n                        : '';\r\n                }\r\n            );\r\n        };\r\n\r\n        const selectDraw = document.querySelector(\r\n            '.wfst--tools-control--select-draw'\r\n        ) as HTMLSelectElement;\r\n\r\n        let drawType: GeometryType;\r\n\r\n        if (selectDraw) {\r\n            const geomLayer = layer.getDescribeFeatureType()._parsed.geomType;\r\n\r\n            if (geomDrawTypeSelected) {\r\n                drawType = selectDraw.value as GeometryType;\r\n            } else {\r\n                if (geomLayer === GeometryType.GeometryCollection) {\r\n                    drawType = GeometryType.LineString; // Default drawing type for GeometryCollection\r\n                    setSelectState(drawType, 'all');\r\n                } else if (geomLayer === GeometryType.LinearRing) {\r\n                    drawType = GeometryType.LineString; // Default drawing type for GeometryCollection\r\n                    setSelectState(drawType, [\r\n                        GeometryType.Circle,\r\n                        GeometryType.LinearRing,\r\n                        GeometryType.Polygon\r\n                    ]);\r\n                    selectDraw.value = drawType;\r\n                } else {\r\n                    drawType = geomLayer;\r\n                    setSelectState(drawType, [geomLayer]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return drawType;\r\n    }\r\n\r\n    _visibilityClickHandler(evt) {\r\n        const btn = evt.currentTarget;\r\n        const parentDiv = btn.closest('.wfst--layer-control') as HTMLElement;\r\n        const layerName = parentDiv.dataset['layer'];\r\n        parentDiv.classList.toggle('ol-wfst--visible-on');\r\n        const layer = getStoredMapLayers()[layerName];\r\n        if (parentDiv.classList.contains('ol-wfst--visible-on')) {\r\n            layer.setVisible(true);\r\n        } else {\r\n            layer.setVisible(false);\r\n        }\r\n    }\r\n\r\n    _layerChangeHandler(evt, layer) {\r\n        const radioInput = evt.currentTarget;\r\n        const parentDiv = radioInput.closest(\r\n            '.wfst--layer-control'\r\n        ) as HTMLElement;\r\n\r\n        // Deselect DOM previous layer\r\n        const selected = document.querySelector('.ol-wfst--selected-on');\r\n\r\n        if (selected) selected.classList.remove('ol-wfst--selected-on');\r\n\r\n        // Select this layer\r\n        parentDiv.classList.add('ol-wfst--selected-on');\r\n        setActiveLayerToInsertEls(layer);\r\n        this._changeStateSelect(layer);\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        return (\r\n            <>\r\n                <div className=\"wfst--tools-control--head\">\r\n                    {this._uploads && (\r\n                        <div>\r\n                            <input\r\n                                id=\"ol-wfst--upload\"\r\n                                type=\"file\"\r\n                                accept={this._uploadFormats}\r\n                                onChange={(evt) => this._uploads.process(evt)}\r\n                            />\r\n                            <label\r\n                                className=\"ol-wfst--tools-control-btn ol-wfst--tools-control-btn-upload\"\r\n                                htmlFor=\"ol-wfst--upload\"\r\n                                title={I18N.labels.uploadToLayer}\r\n                            >\r\n                                <img src={uploadSvg} />\r\n                            </label>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"ol-wfst--tools-control-draw-cnt\">\r\n                        <button\r\n                            className=\"ol-wfst--tools-control-btn ol-wfst--tools-control-btn-draw\"\r\n                            type=\"button\"\r\n                            title={I18N.labels.addElement}\r\n                            onClick={() => {\r\n                                this.dispatchEvent('drawMode');\r\n                            }}\r\n                        >\r\n                            <img src={drawSvg} />\r\n                        </button>\r\n                        <select\r\n                            title={I18N.labels.selectDrawType}\r\n                            className=\"wfst--tools-control--select-draw\"\r\n                            onChange={(evt: Event) => {\r\n                                const selectedValue = (\r\n                                    evt.target as HTMLSelectElement\r\n                                ).value as GeometryType;\r\n                                this._changeStateSelect(\r\n                                    getActiveLayerToInsertEls(),\r\n                                    selectedValue\r\n                                );\r\n                                this.dispatchEvent('changeGeom');\r\n                            }}\r\n                        >\r\n                            {[\r\n                                GeometryType.Point,\r\n                                GeometryType.MultiPoint,\r\n                                GeometryType.LineString,\r\n                                GeometryType.MultiLineString,\r\n                                GeometryType.Polygon,\r\n                                GeometryType.MultiPolygon,\r\n                                GeometryType.Circle\r\n                            ].map((type) => {\r\n                                // Show all options, but enable only the accepted ones\r\n                                return <option value={type}>{type}</option>;\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"wfst--tools-control--select-layers\"></div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","var img = \"data:image/svg+xml,%3csvg version='1.1' xmlns='http://www.w3.org/2000/svg' width='768' height='768' viewBox='0 0 768 768'%3e%3cpath d='M384 288q39 0 67.5 28.5t28.5 67.5-28.5 67.5-67.5 28.5-67.5-28.5-28.5-67.5 28.5-67.5 67.5-28.5zM384 544.5q66 0 113.25-47.25t47.25-113.25-47.25-113.25-113.25-47.25-113.25 47.25-47.25 113.25 47.25 113.25 113.25 47.25zM384 144q118.5 0 214.5 66t138 174q-42 108-138 174t-214.5 66-214.5-66-138-174q42-108 138-174t214.5-66z'%3e%3c/path%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg version='1.1' xmlns='http://www.w3.org/2000/svg' width='768' height='768' viewBox='0 0 768 768'%3e%3cpath d='M379.5 288h4.5q39 0 67.5 28.5t28.5 67.5v6zM241.5 313.5q-18 36-18 70.5 0 66 47.25 113.25t113.25 47.25q34.5 0 70.5-18l-49.5-49.5q-12 3-21 3-39 0-67.5-28.5t-28.5-67.5q0-9 3-21zM64.5 136.5l40.5-40.5 567 567-40.5 40.5q-7.5-7.5-47.25-46.5t-60.75-60q-64.5 27-139.5 27-118.5 0-214.5-66t-138-174q16.5-39 51.75-86.25t68.25-72.75q-18-18-50.25-51t-36.75-37.5zM384 223.5q-30 0-58.5 12l-69-69q58.5-22.5 127.5-22.5 118.5 0 213.75 66t137.25 174q-36 88.5-109.5 151.5l-93-93q12-28.5 12-58.5 0-66-47.25-113.25t-113.25-47.25z'%3e%3c/path%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg version='1.1' xmlns='http://www.w3.org/2000/svg' width='512' height='512' viewBox='0 0 512 512'%3e%3cpath d='M240 352h-240v128h480v-128h-240zM448 416h-64v-32h64v32zM112 160l128-128 128 128h-80v160h-96v-160z'%3e%3c/path%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg version='1.1' xmlns='http://www.w3.org/2000/svg' width='768' height='768' viewBox='0 0 768 768'%3e %3cpath d='M663 225l-58.5 58.5-120-120 58.5-58.5q9-9 22.5-9t22.5 9l75 75q9 9 9 22.5t-9 22.5zM96 552l354-354 120 120-354 354h-120v-120z'%3e%3c/path%3e%3c/svg%3e\";\n  export default img;","import VectorLayer from 'ol/layer/Vector.js';\r\nimport VectorSource from 'ol/source/Vector.js';\r\n\r\nlet editLayer = new VectorLayer({\r\n    source: new VectorSource(),\r\n    zIndex: 100\r\n});\r\n\r\nexport const getEditLayer = (): VectorLayer<VectorSource> => {\r\n    return editLayer;\r\n};\r\n","// Ol\r\nimport {\r\n    Geometry,\r\n    LineString,\r\n    MultiLineString,\r\n    MultiPoint,\r\n    MultiPolygon,\r\n    Point,\r\n    Polygon\r\n} from 'ol/geom.js';\r\nimport Feature from 'ol/Feature.js';\r\nimport Observable from 'ol/Observable.js';\r\nimport GeoJSON from 'ol/format/GeoJSON.js';\r\nimport KML from 'ol/format/KML.js';\r\nimport WFS from 'ol/format/WFS.js';\r\nimport { VectorSourceEvent } from 'ol/source/Vector.js';\r\nimport { BaseLayerProperty } from './base/BaseLayer.js';\r\n\r\n// External\r\nimport Modal from 'modal-vanilla';\r\n\r\nimport { Options } from '../ol-wfst';\r\nimport { showError } from './errors';\r\nimport { resetStateButtons } from './LayersControl';\r\nimport { getEditLayer } from './editLayer';\r\nimport { getActiveLayerToInsertEls, getMap } from './state';\r\nimport { GeometryType } from '../@enums';\r\nimport { I18N } from './i18n';\r\n\r\nexport default class Uploads extends Observable {\r\n    protected _options: Options;\r\n\r\n    // Formats\r\n    protected _formatWFS: WFS;\r\n    protected _formatGeoJSON: GeoJSON;\r\n    protected _formatKml: KML;\r\n    protected _xs: XMLSerializer;\r\n\r\n    protected _processUpload: Options['processUpload'];\r\n\r\n    constructor(options: Options) {\r\n        super();\r\n\r\n        this._options = options;\r\n\r\n        this._processUpload = options.processUpload;\r\n\r\n        // Formats\r\n        this._formatWFS = new WFS();\r\n\r\n        this._formatGeoJSON = new GeoJSON();\r\n        this._formatKml = new KML({\r\n            extractStyles: false,\r\n            showPointNames: false\r\n        });\r\n        this._xs = new XMLSerializer();\r\n    }\r\n\r\n    /**\r\n     * Parse and check geometry of uploaded files\r\n     *\r\n     * @param evt\r\n     * @public\r\n     */\r\n    async process(evt: Event): Promise<void> {\r\n        const map = getMap();\r\n        const view = map.getView();\r\n\r\n        const file = (evt.target as HTMLInputElement).files[0];\r\n\r\n        let features: Array<Feature<Geometry>>;\r\n\r\n        if (!file) {\r\n            return;\r\n        }\r\n\r\n        const extension = file.name.split('.').pop().toLowerCase();\r\n\r\n        try {\r\n            // If the user uses a custom fucntion...\r\n            if (this._processUpload) {\r\n                features = this._processUpload(file);\r\n            }\r\n\r\n            // If the user functions return features, we dont process anything more\r\n            if (!features) {\r\n                const string = await this._fileReader(file);\r\n\r\n                if (extension === 'geojson' || extension === 'json') {\r\n                    features = this._formatGeoJSON.readFeatures(string, {\r\n                        featureProjection: view.getProjection().getCode()\r\n                    });\r\n                } else if (extension === 'kml') {\r\n                    features = this._formatKml.readFeatures(string, {\r\n                        featureProjection: view.getProjection().getCode()\r\n                    });\r\n                } else {\r\n                    showError(I18N.errors.badFormat);\r\n                }\r\n            }\r\n\r\n            let invalidFeaturesCount = 0;\r\n            let validFeaturesCount = 0;\r\n\r\n            const featuresToInsert: Array<Feature<Geometry>> = [];\r\n\r\n            for (let feature of features) {\r\n                // If the geometry doesn't correspond to the layer, try to fixit.\r\n                // If we can't, don't use it\r\n                if (!this._checkGeometry(feature)) {\r\n                    feature = this._fixGeometry(feature);\r\n                }\r\n\r\n                if (feature) {\r\n                    featuresToInsert.push(feature);\r\n                    validFeaturesCount++;\r\n                } else {\r\n                    invalidFeaturesCount++;\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (!validFeaturesCount) {\r\n                showError(I18N.errors.noValidGeometry);\r\n            } else {\r\n                resetStateButtons();\r\n\r\n                this.dispatchEvent(\r\n                    new VectorSourceEvent(\r\n                        'loadedFeatures',\r\n                        null,\r\n                        featuresToInsert\r\n                    )\r\n                );\r\n\r\n                const content = `\r\n            ${I18N.labels.validFeatures}: ${validFeaturesCount}<br>\r\n            ${\r\n                invalidFeaturesCount\r\n                    ? `${I18N.labels.invalidFeatures}: ${invalidFeaturesCount}`\r\n                    : ''\r\n            }`;\r\n\r\n                this._initModal(content, featuresToInsert);\r\n            }\r\n\r\n            // Reset the input to allow another onChange trigger\r\n            (evt.target as HTMLInputElement).value = null;\r\n        } catch (err) {\r\n            showError(I18N.errors.badFile, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Read data file\r\n     * @param file\r\n     * @public\r\n     */\r\n    async _fileReader(file: File): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n\r\n            reader.addEventListener('load', async (e) => {\r\n                const fileData = e.target.result;\r\n                resolve(fileData as string);\r\n            });\r\n\r\n            reader.addEventListener('error', (err) => {\r\n                console.error('Error' + err);\r\n                reject();\r\n            });\r\n            reader.readAsText(file);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Attemp to change the geometry feature to the layer\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _fixGeometry(feature: Feature<Geometry>): Feature<Geometry> {\r\n        // Geometry of the layer\r\n        const geomTypeLayer =\r\n            getActiveLayerToInsertEls().getDescribeFeatureType()._parsed\r\n                .geomType;\r\n        const geomTypeFeature = feature.getGeometry().getType();\r\n        let geom: Geometry;\r\n\r\n        switch (geomTypeFeature) {\r\n            case GeometryType.Point: {\r\n                if (geomTypeLayer === GeometryType.MultiPoint) {\r\n                    const coords = (\r\n                        feature.getGeometry() as Point\r\n                    ).getCoordinates();\r\n                    geom = new MultiPoint([coords]);\r\n                }\r\n                break;\r\n            }\r\n\r\n            case GeometryType.LineString:\r\n                if (geomTypeLayer === GeometryType.MultiLineString) {\r\n                    const coords = (\r\n                        feature.getGeometry() as LineString\r\n                    ).getCoordinates();\r\n                    geom = new MultiLineString([coords]);\r\n                }\r\n                break;\r\n\r\n            case GeometryType.Polygon:\r\n                if (geomTypeLayer === GeometryType.MultiPolygon) {\r\n                    const coords = (\r\n                        feature.getGeometry() as Polygon\r\n                    ).getCoordinates();\r\n                    geom = new MultiPolygon([coords]);\r\n                }\r\n                break;\r\n            default:\r\n                geom = null;\r\n        }\r\n\r\n        if (!geom) {\r\n            return null;\r\n        }\r\n\r\n        feature.setGeometry(geom);\r\n        return feature;\r\n    }\r\n\r\n    /**\r\n     * Check if the feature has the same geometry as the target layer\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _checkGeometry(feature: Feature<Geometry>): boolean {\r\n        // Geometry of the layer\r\n        const geomTypeLayer =\r\n            getActiveLayerToInsertEls().getDescribeFeatureType()._parsed\r\n                .geomType;\r\n        const geomTypeFeature = feature.getGeometry().getType();\r\n\r\n        // This geom accepts every type of geometry\r\n        if (geomTypeLayer === GeometryType.GeometryCollection) {\r\n            return true;\r\n        }\r\n\r\n        return geomTypeFeature === geomTypeLayer;\r\n    }\r\n\r\n    /**\r\n     * Confirm modal before transact to the GeoServer the features in the file\r\n     *\r\n     * @param content\r\n     * @param featuresToInsert\r\n     * @private\r\n     */\r\n    _initModal(\r\n        content: string,\r\n        featuresToInsert: Array<Feature<Geometry>>\r\n    ): void {\r\n        const footer = `\r\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" data-dismiss=\"modal\">\r\n            ${I18N.labels.cancel}\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" data-action=\"save\" data-dismiss=\"modal\">\r\n            ${I18N.labels.upload}\r\n        </button>\r\n    `;\r\n\r\n        const modal = new Modal({\r\n            ...this._options.modal,\r\n            header: true,\r\n            headerClose: false,\r\n            title:\r\n                I18N.labels.uploadFeatures +\r\n                ' ' +\r\n                getActiveLayerToInsertEls().get(BaseLayerProperty.NAME),\r\n            content: content,\r\n            backdrop: 'static', // Prevent close on click outside the modal\r\n            footer: footer\r\n        }).show();\r\n\r\n        modal.on('dismiss', (modal, event) => {\r\n            // On saving changes\r\n            if (event.target.dataset.action === 'save') {\r\n                this.dispatchEvent(\r\n                    new VectorSourceEvent(\r\n                        'addedFeatures',\r\n                        null,\r\n                        featuresToInsert\r\n                    )\r\n                );\r\n            } else {\r\n                // On cancel button\r\n                getEditLayer().getSource().clear();\r\n            }\r\n        });\r\n    }\r\n}\r\n","/**\r\n * @param target\r\n * @param sources\r\n * @returns\r\n */\r\nexport const deepObjectAssign = (target, ...sources) => {\r\n    sources.forEach((source) => {\r\n        Object.keys(source).forEach((key) => {\r\n            const s_val = source[key];\r\n            const t_val = target[key];\r\n            target[key] =\r\n                t_val &&\r\n                s_val &&\r\n                typeof t_val === 'object' &&\r\n                typeof s_val === 'object' &&\r\n                !Array.isArray(t_val) // Don't merge arrays\r\n                    ? deepObjectAssign(t_val, s_val)\r\n                    : s_val;\r\n        });\r\n    });\r\n    return target;\r\n};\r\n","import Feature from 'ol/Feature.js';\r\nimport Geometry from 'ol/geom/Geometry.js';\r\nimport Control from 'ol/control/Control.js';\r\nimport { VectorSourceEvent } from 'ol/source/Vector.js';\r\nimport { CombinedOnSignature, EventTypes, OnSignature } from 'ol/Observable.js';\r\nimport BaseEvent from 'ol/events/Event.js';\r\nimport { EventsKey } from 'ol/events.js';\r\nimport { ObjectEvent } from 'ol/Object.js';\r\nimport { Types as ObjectEventTypes } from 'ol/ObjectEventType.js';\r\n\r\nimport { I18N } from './i18n';\r\n\r\nimport myPragma from '../myPragma';\r\n\r\ntype ChangesEventTypes = 'cancel' | 'apply' | 'delete';\r\n\r\nexport default class EditControlChangesEl extends Control {\r\n    declare on: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<ChangesEventTypes, VectorSourceEvent, EventsKey> &\r\n        OnSignature<ObjectEventTypes, ObjectEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            ChangesEventTypes | ObjectEventTypes | EventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare once: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<ChangesEventTypes, VectorSourceEvent, EventsKey> &\r\n        OnSignature<ObjectEventTypes, ObjectEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            ChangesEventTypes | ObjectEventTypes | EventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare un: OnSignature<EventTypes, BaseEvent, void> &\r\n        OnSignature<ChangesEventTypes, VectorSourceEvent, EventsKey> &\r\n        OnSignature<ObjectEventTypes, ObjectEvent, void> &\r\n        CombinedOnSignature<\r\n            ChangesEventTypes | ObjectEventTypes | EventTypes,\r\n            void\r\n        >;\r\n\r\n    constructor(feature: Feature<Geometry>) {\r\n        super({\r\n            element: (\r\n                <div className=\"ol-wfst--changes-control\">\r\n                    <div className=\"ol-wfst--changes-control-el\">\r\n                        <div className=\"ol-wfst--changes-control-id\">\r\n                            <b>{I18N.labels.editMode}</b> -{' '}\r\n                            <i>{String(feature.getId())}</i>\r\n                        </div>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-sm btn-secondary\"\r\n                            onClick={() => {\r\n                                this.dispatchEvent(\r\n                                    new VectorSourceEvent('cancel', feature)\r\n                                );\r\n                            }}\r\n                        >\r\n                            {I18N.labels.cancel}\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-sm btn-primary\"\r\n                            onClick={() => {\r\n                                this.dispatchEvent(\r\n                                    new VectorSourceEvent('apply', feature)\r\n                                );\r\n                            }}\r\n                        >\r\n                            {I18N.labels.apply}\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-sm btn-danger-outline\"\r\n                            onClick={() => {\r\n                                this.dispatchEvent(\r\n                                    new VectorSourceEvent('delete', feature)\r\n                                );\r\n                            }}\r\n                        >\r\n                            {I18N.labels.delete}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n}\r\n","// Ol\r\nimport {\r\n    Geometry,\r\n    GeometryCollection,\r\n    LineString,\r\n    MultiLineString,\r\n    MultiPoint,\r\n    MultiPolygon,\r\n    Polygon\r\n} from 'ol/geom.js';\r\nimport { Circle as CircleStyle, Fill, Stroke, Style } from 'ol/style.js';\r\nimport Feature, { FeatureLike } from 'ol/Feature.js';\r\nimport { Coordinate } from 'ol/coordinate.js';\r\n\r\nimport { GeometryType } from '../@enums';\r\nimport { getMode, Modes } from './state';\r\n\r\n/**\r\n * Master style that handles two modes on the Edit Layer:\r\n * - one is the basic, showing only the vertices\r\n * - and the other when modify is active, showing bigger vertices\r\n *\r\n * @param feature\r\n * @private\r\n */\r\nexport default function styleFunction(\r\n    feature: Feature<Geometry>\r\n): Array<Style> {\r\n    const getVertexs = (feature: FeatureLike) => {\r\n        let geometry = feature.getGeometry();\r\n\r\n        if (geometry instanceof GeometryCollection) {\r\n            geometry = geometry.getGeometries()[0];\r\n        }\r\n\r\n        const coordinates = (geometry as LineString).getCoordinates();\r\n        let flatCoordinates: Coordinate[] | number[] = null;\r\n\r\n        if (\r\n            geometry instanceof Polygon ||\r\n            geometry instanceof MultiLineString\r\n        ) {\r\n            flatCoordinates = coordinates.flat(1);\r\n        } else if (geometry instanceof MultiPolygon) {\r\n            flatCoordinates = coordinates.flat(2);\r\n        } else {\r\n            flatCoordinates = coordinates;\r\n        }\r\n\r\n        if (!flatCoordinates || !flatCoordinates.length) {\r\n            return;\r\n        }\r\n\r\n        return new MultiPoint(flatCoordinates as Coordinate[]);\r\n    };\r\n\r\n    let geometry = feature.getGeometry();\r\n    let type = geometry.getType();\r\n\r\n    if (geometry instanceof GeometryCollection) {\r\n        geometry = geometry.getGeometries()[0];\r\n        type = geometry.getType();\r\n    }\r\n\r\n    switch (type) {\r\n        case GeometryType.Point:\r\n        case GeometryType.MultiPoint:\r\n            if (getMode() === Modes.Edit) {\r\n                return [\r\n                    new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 6,\r\n                            fill: new Fill({\r\n                                color: '#000000'\r\n                            })\r\n                        })\r\n                    }),\r\n                    new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 4,\r\n                            fill: new Fill({\r\n                                color: '#ff0000'\r\n                            })\r\n                        })\r\n                    })\r\n                ];\r\n            } else {\r\n                return [\r\n                    new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 5,\r\n                            fill: new Fill({\r\n                                color: '#ff0000'\r\n                            })\r\n                        })\r\n                    }),\r\n                    new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 2,\r\n                            fill: new Fill({\r\n                                color: '#000000'\r\n                            })\r\n                        })\r\n                    })\r\n                ];\r\n            }\r\n        default:\r\n            // If editing mode is active, show bigger vertex\r\n            if (getMode() == Modes.Draw || getMode() == Modes.Edit) {\r\n                return [\r\n                    new Style({\r\n                        stroke: new Stroke({\r\n                            color: 'rgba( 255, 0, 0, 1)',\r\n                            width: 4\r\n                        }),\r\n                        fill: new Fill({\r\n                            color: 'rgba(255, 0, 0, 0.7)'\r\n                        })\r\n                    }),\r\n                    new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 4,\r\n                            fill: new Fill({\r\n                                color: '#ff0000'\r\n                            }),\r\n                            stroke: new Stroke({\r\n                                width: 2,\r\n                                color: 'rgba(5, 5, 5, 0.9)'\r\n                            })\r\n                        }),\r\n                        geometry: (feature) => getVertexs(feature)\r\n                    }),\r\n                    new Style({\r\n                        stroke: new Stroke({\r\n                            color: 'rgba(255, 255, 255, 0.7)',\r\n                            width: 2\r\n                        })\r\n                    })\r\n                ];\r\n            } else {\r\n                return [\r\n                    new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 2,\r\n                            fill: new Fill({\r\n                                color: '#000000'\r\n                            })\r\n                        }),\r\n                        geometry: (feature) => getVertexs(feature)\r\n                    }),\r\n                    new Style({\r\n                        stroke: new Stroke({\r\n                            color: '#ff0000',\r\n                            width: 4\r\n                        }),\r\n                        fill: new Fill({\r\n                            color: 'rgba(255, 0, 0, 0.7)'\r\n                        })\r\n                    })\r\n                ];\r\n            }\r\n    }\r\n}\r\n","// Ol\r\nimport Observable from 'ol/Observable.js';\r\nimport Feature from 'ol/Feature.js';\r\nimport Geometry from 'ol/geom/Geometry.js';\r\nimport { VectorSourceEvent } from 'ol/source/Vector.js';\r\n\r\n// External\r\nimport Modal from 'modal-vanilla';\r\n\r\nimport { addFeatureToEditedList, getStoredLayer } from './state';\r\nimport { Options } from '../ol-wfst';\r\nimport { I18N } from './i18n';\r\n\r\n/**\r\n * Shows a fields form in a modal window to allow changes in the properties of the feature.\r\n *\r\n * @param feature\r\n * @private\r\n */\r\nexport class EditFieldsModal extends Observable {\r\n    protected _options: Options['modal'];\r\n    protected _modal: Modal;\r\n    protected _feature: Feature;\r\n\r\n    constructor(options: Options['modal']) {\r\n        super();\r\n\r\n        this._options = options;\r\n\r\n        const footer = `\r\n            <button type=\"button\" class=\"btn btn-sm btn-link btn-third\" data-action=\"delete\" data-dismiss=\"modal\">\r\n                ${I18N.labels.delete}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" data-dismiss=\"modal\">\r\n                ${I18N.labels.cancel}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-sm btn-primary\" data-action=\"save\" data-dismiss=\"modal\">\r\n                ${I18N.labels.save}\r\n            </button>\r\n        `;\r\n\r\n        this._modal = new Modal({\r\n            ...this._options,\r\n            header: true,\r\n            headerClose: true,\r\n            title: '',\r\n            content: '<div></div>',\r\n            footer: footer\r\n        });\r\n\r\n        this._modal.on('dismiss', (modal, event) => {\r\n            // On saving changes\r\n            if (event.target.dataset.action === 'save') {\r\n                const inputs = modal.el.querySelectorAll('input');\r\n\r\n                inputs.forEach((el: HTMLInputElement) => {\r\n                    const value = el.value;\r\n                    const field = el.name;\r\n                    this._feature.set(field, value, /*isSilent = */ true);\r\n                });\r\n\r\n                this._feature.changed();\r\n\r\n                addFeatureToEditedList(this._feature);\r\n\r\n                this.dispatchEvent(\r\n                    new VectorSourceEvent('save', this._feature)\r\n                );\r\n            } else if (event.target.dataset.action === 'delete') {\r\n                this.dispatchEvent(\r\n                    new VectorSourceEvent('delete', this._feature)\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    show(feature: Feature<Geometry>) {\r\n        this._feature = feature;\r\n\r\n        const title = `${I18N.labels.editElement} ${feature.getId()} `;\r\n\r\n        const properties = feature.getProperties();\r\n        const layerName = feature.get('_layerName_');\r\n\r\n        // Data schema from the geoserver\r\n        const layer = getStoredLayer(layerName);\r\n        const dataSchema = layer.getDescribeFeatureType()._parsed.properties;\r\n\r\n        let content = '<form autocomplete=\"false\">';\r\n        Object.keys(properties).forEach((key) => {\r\n            // If the feature field exists in the geoserver and is not added by openlayers\r\n            const field = dataSchema.find((data) => data.name === key);\r\n\r\n            if (field) {\r\n                const typeXsd = field.type;\r\n                let type;\r\n\r\n                switch (typeXsd) {\r\n                    case 'xsd:string':\r\n                        type = 'text';\r\n                        break;\r\n                    case 'xsd:number':\r\n                    case 'xsd:int':\r\n                        type = 'number';\r\n                        break;\r\n                    case 'xsd:date-time':\r\n                        type = 'datetime';\r\n                        break;\r\n                    default:\r\n                        type = 'text';\r\n                }\r\n\r\n                if (type) {\r\n                    content += `\r\n                <div class=\"ol-wfst--input-field-container\">\r\n                    <label class=\"ol-wfst--input-field-label\" for=\"${key}\">${key}</label>\r\n                    <input placeholder=\"NULL\" class=\"ol-wfst--input-field-input\" type=\"${type}\" name=\"${key}\" value=\"${\r\n                        properties[key] || ''\r\n                    }\">\r\n                </div>`;\r\n                }\r\n            }\r\n        });\r\n\r\n        content += '</form>';\r\n\r\n        this._modal._html.body.innerHTML = content;\r\n        this._modal._html.header.innerHTML = title;\r\n        this._modal.show();\r\n    }\r\n}\r\n","/**\n * @module ol/format/WFSCapabilities\n */\nimport XML from 'ol/format/XML.js';\nimport {\n  getAllTextContent,\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from 'ol/xml.js';\nimport {readHref} from 'ol/format/xlink.js';\nimport {readString} from 'ol/format/xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/fes/2.0',\n  'http://www.opengis.net/ows/1.1',\n  'http://www.opengis.net/wfs/2.0',\n];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n  'FeatureTypeList': makeObjectPropertySetter(readFeatureTypeList),\n  'Filter_Capabilities': makeObjectPropertySetter(readFilter_Capabilities),\n});\n\n/**\n * @classdesc\n * Format for reading WFS capabilities data\n *\n * @api\n */\nclass WFSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    this.version = node.getAttribute('version').trim();\n    const wfsCapabilityObject = pushParseAndPop(\n      {\n        'version': this.version,\n      },\n      PARSERS,\n      node,\n      []\n    );\n    return wfsCapabilityObject ? wfsCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'Keywords': makeObjectPropertySetter(readKeywordList),\n  'ServiceType': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': makeObjectPropertyPusher(readNamedOperation),\n  'Constraint': makeObjectPropertyPusher(readNamedConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FEATURE_TYPE_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'FeatureType': makeArrayPusher(readFeatureType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FEATURE_TYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'Keywords': makeObjectPropertySetter(readKeywordList),\n  'DefaultCRS': makeObjectPropertySetter(readString),\n  'WGS84BoundingBox': makeObjectPropertySetter(readWGS84BoundingBox),\n  'MetadataURL': makeObjectPropertySetter(readHref),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDCP),\n  'Parameter': makeObjectPropertyPusher(readNamedParameter),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARAMETER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readValueList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'NoValues': makeObjectPropertySetter(readString),\n  'DefaultValue': makeObjectPropertySetter(readString),\n  'AllowedValues': makeObjectPropertySetter(readValueList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertySetter(readHref),\n  'Post': makeObjectPropertySetter(readHref),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BOUNDINGBOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LowerCorner': makeObjectPropertySetter(readStringCoords),\n  'UpperCorner': makeObjectPropertySetter(readStringCoords),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHTTP),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Keyword': makeArrayPusher(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst VALUELIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeArrayPusher(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FILTER_CAPABILITIES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Conformance': makeObjectPropertySetter(readConformance),\n  'Id_Capabilities': makeObjectPropertySetter(readId_Capabilities),\n  'Scalar_Capabilities': makeObjectPropertySetter(readScalarCapabilities),\n  'Spatial_Capabilities': makeObjectPropertySetter(readSpatialCapabilities),\n  'Temporal_Capabilities': makeObjectPropertySetter(readTemporalCapabilities),\n  'Functions': makeObjectPropertySetter(readFunctions),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONFORMANCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readNamedConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ID_CAPABILITIES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ResourceIdentifier': makeObjectPropertySetter(readNamedResourceIdentifier),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCALAR_CAPABILITIES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LogicalOperators': makeObjectPropertySetter(readLogicalOperators),\n  'ComparisonOperators': makeObjectPropertySetter(readComparisonOperators),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SPATIAL_CAPABILITIES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'GeometryOperands': makeObjectPropertySetter(readGeometryOperands),\n  'SpatialOperators': makeObjectPropertySetter(readSpatialOperators),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TEMPORAL_CAPABILITIES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TemporalOperands': makeObjectPropertySetter(readTemporalOperands),\n  'TemporalOperators': makeObjectPropertySetter(readTemporalOperators),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FUNCTIONS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Function': makeArrayPusher(readNamedFunction),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FUNCTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Returns': makeObjectPropertySetter(readString),\n  'Arguments': makeObjectPropertySetter(readArguments),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ARGUMENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Argument': makeArrayPusher(readNamedArgument),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ARGUMENT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Type': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOGICAL_OPERATORS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LogicalOperator': makeArrayPusher(readNamedOnly),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst COMPARISON_OPERATORS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ComparisonOperator': makeArrayPusher(readNamedOnly),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_OPERANDS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'GeometryOperand': makeArrayPusher(readNamedOnly),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SPATIAL_OPERATORS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SpatialOperator': makeArrayPusher(readNamedOnly),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TEMPORAL_OPERANDS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TemporalOperand': makeArrayPusher(readNamedOnly),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"ol/xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TEMPORAL_OPERATORS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TemporalOperator': makeArrayPusher(readNamedOnly),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service Identification object.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service Provider object.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operations Metadata object.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} FeatureType list.\n */\nfunction readFeatureTypeList(node, objectStack) {\n  return pushParseAndPop([], FEATURE_TYPE_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Serrvice contact object.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact info object.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact Phone object.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP object.\n */\nfunction readDCP(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation object.\n */\nfunction readOperation(node, objectStack) {\n  return pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Parameter object.\n */\nfunction readParameter(node, objectStack) {\n  return pushParseAndPop({}, PARAMETER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Constraint object.\n */\nfunction readConstraint(node, objectStack) {\n  return pushParseAndPop({}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Named operation object.\n */\nfunction readNamedOperation(node, objectStack) {\n  const operation = readOperation(node, objectStack);\n  if (operation) {\n    operation['name'] = node.getAttribute('name');\n    return operation;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Named Function object.\n */\nfunction readNamedFunction(node, objectStack) {\n  const func = readFunction(node, objectStack);\n  if (func) {\n    func['name'] = node.getAttribute('name');\n    return func;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Named argument object.\n */\nfunction readNamedArgument(node, objectStack) {\n  const argument = readArgument(node, objectStack);\n  if (argument) {\n    argument['name'] = node.getAttribute('name');\n    return argument;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Named Parameter object.\n */\nfunction readNamedParameter(node, objectStack) {\n  const parameter = readParameter(node, objectStack);\n  if (parameter) {\n    parameter['name'] = node.getAttribute('name');\n    return parameter;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Named Constraint object.\n */\nfunction readNamedConstraint(node, objectStack) {\n  const constraint = readConstraint(node, objectStack);\n  if (constraint) {\n    constraint['name'] = node.getAttribute('name');\n    return constraint;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} Node name attribute string.\n */\nfunction readNamedOnly(node) {\n  return node.getAttribute('name') || undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Object|undefined} Named Resource Identifier object.\n */\nfunction readNamedResourceIdentifier(node) {\n  return {\n    name: node.getAttribute('name'),\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BoundingBox resource object.\n */\nfunction readWGS84BoundingBox(node, objectStack) {\n  return pushParseAndPop({}, WGS84_BOUNDINGBOX_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Value list.\n */\nfunction readValueList(node, objectStack) {\n  return pushParseAndPop([], VALUELIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} FeatureTyoe object.\n */\nfunction readFeatureType(node, objectStack) {\n  return pushParseAndPop({}, FEATURE_TYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} FilterCapabilities object.\n */\nfunction readFilter_Capabilities(node, objectStack) {\n  return pushParseAndPop({}, FILTER_CAPABILITIES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Conformance object.\n */\nfunction readConformance(node, objectStack) {\n  return pushParseAndPop({}, CONFORMANCE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Id Capabilities object.\n */\nfunction readId_Capabilities(node, objectStack) {\n  return pushParseAndPop({}, ID_CAPABILITIES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Scalar Capabilities object.\n */\nfunction readScalarCapabilities(node, objectStack) {\n  return pushParseAndPop({}, SCALAR_CAPABILITIES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Spatial Capabilities object.\n */\nfunction readSpatialCapabilities(node, objectStack) {\n  return pushParseAndPop({}, SPATIAL_CAPABILITIES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Temporal Capabilities object.\n */\nfunction readTemporalCapabilities(node, objectStack) {\n  return pushParseAndPop({}, TEMPORAL_CAPABILITIES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Functions array.\n */\nfunction readFunctions(node, objectStack) {\n  return pushParseAndPop([], FUNCTIONS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Function object.\n */\nfunction readFunction(node, objectStack) {\n  return pushParseAndPop({}, FUNCTION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Logical Operators array.\n */\nfunction readLogicalOperators(node, objectStack) {\n  return pushParseAndPop([], LOGICAL_OPERATORS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Comparison Operators array.\n */\nfunction readComparisonOperators(node, objectStack) {\n  return pushParseAndPop([], COMPARISON_OPERATORS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Geometry Operands array.\n */\nfunction readGeometryOperands(node, objectStack) {\n  return pushParseAndPop([], GEOMETRY_OPERANDS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Spatials Operators array.\n */\nfunction readSpatialOperators(node, objectStack) {\n  return pushParseAndPop([], SPATIAL_OPERATORS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Temporal Operands array.\n */\nfunction readTemporalOperands(node, objectStack) {\n  return pushParseAndPop([], TEMPORAL_OPERANDS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Temporal Operators array.\n */\nfunction readTemporalOperators(node, objectStack) {\n  return pushParseAndPop([], TEMPORAL_OPERATORS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Arguments array.\n */\nfunction readArguments(node, objectStack) {\n  return pushParseAndPop([], ARGUMENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Argument object.\n */\nfunction readArgument(node, objectStack) {\n  return pushParseAndPop({}, ARGUMENT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @return {Array<number>|undefined} Coordinates array.\n */\nfunction readStringCoords(node) {\n  const coords = getAllTextContent(node, false).split(' ');\n  if (coords.length) {\n    return coords.map((c) => Number(c));\n  }\n  return undefined;\n}\n\nexport default WFSCapabilities;\n","// Ol\r\nimport BaseObject, { ObjectEvent } from 'ol/Object.js';\r\nimport { Types as ObjectEventTypes } from 'ol/ObjectEventType.js';\r\n\r\nimport { ProjectionLike } from 'ol/proj.js';\r\nimport Circle from 'ol/geom/Circle.js';\r\nimport Geometry from 'ol/geom/Geometry.js';\r\nimport GeometryCollection from 'ol/geom/GeometryCollection.js';\r\nimport Feature from 'ol/Feature.js';\r\n\r\nimport GeoJSON from 'ol/format/GeoJSON.js';\r\nimport KML from 'ol/format/KML.js';\r\nimport WFS from 'ol/format/WFS.js';\r\n\r\nimport { State } from 'ol/source/Source.js';\r\nimport { fromCircle } from 'ol/geom/Polygon.js';\r\nimport BaseEvent from 'ol/events/Event.js';\r\nimport { CombinedOnSignature, EventTypes, OnSignature } from 'ol/Observable.js';\r\nimport { EventsKey } from 'ol/events.js';\r\nimport { TransactionResponse } from 'ol/format/WFS.js';\r\n\r\nimport WFSCapabilities from 'ol-wfs-capabilities';\r\n\r\nimport { showLoading } from './modules/loading';\r\nimport { parseError, showError } from './modules/errors';\r\nimport {\r\n    getMap,\r\n    getStoredLayer,\r\n    removeFeatureFromEditList\r\n} from './modules/state';\r\nimport { getEditLayer } from './modules/editLayer';\r\nimport { deepObjectAssign } from './modules/helpers';\r\nimport { I18N } from './modules/i18n';\r\nimport { GeometryType, TransactionType } from './@enums';\r\nimport WmsLayer from './WmsLayer';\r\n\r\n// https://docs.geoserver.org/latest/en/user/services/wfs/axis_order.html\r\n// Axis ordering: latitude/longitude\r\nconst DEFAULT_GEOSERVER_SRS = 'EPSG:3857';\r\nconst parser = new WFSCapabilities();\r\n\r\n/**\r\n * @fires change:capabilities\r\n * @extends {ol/Object~BaseObject}\r\n * @param options\r\n */\r\nexport default class Geoserver extends BaseObject {\r\n    protected _options: GeoserverOptions;\r\n\r\n    protected _countRequests: number;\r\n    protected _insertFeatures: Array<Feature<Geometry>>;\r\n    protected _updateFeatures: Array<Feature<Geometry>>;\r\n    protected _deleteFeatures: Array<Feature<Geometry>>;\r\n\r\n    // Formats\r\n    protected _formatWFS: WFS;\r\n    protected _formatGeoJSON: GeoJSON;\r\n    protected _formatKml: KML;\r\n    protected _xs: XMLSerializer;\r\n\r\n    protected state_: State;\r\n\r\n    declare on: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<\r\n            GeoserverEventTypes | ObjectEventTypes,\r\n            ObjectEvent,\r\n            EventsKey\r\n        > &\r\n        CombinedOnSignature<\r\n            GeoserverEventTypes | ObjectEventTypes | EventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare once: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<\r\n            GeoserverEventTypes | ObjectEventTypes,\r\n            ObjectEvent,\r\n            EventsKey\r\n        > &\r\n        CombinedOnSignature<\r\n            GeoserverEventTypes | ObjectEventTypes | EventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare un: OnSignature<EventTypes, BaseEvent, void> &\r\n        OnSignature<GeoserverEventTypes | ObjectEventTypes, ObjectEvent, void> &\r\n        CombinedOnSignature<\r\n            GeoserverEventTypes | ObjectEventTypes | EventTypes,\r\n            void\r\n        >;\r\n\r\n    constructor(options: GeoserverOptions) {\r\n        super();\r\n\r\n        const defaults = {\r\n            url: null,\r\n            advanced: {\r\n                getCapabilitiesVersion: '2.0.0',\r\n                getFeatureVersion: '1.0.0',\r\n                describeFeatureTypeVersion: '1.1.0',\r\n                lockFeatureVersion: '1.1.0',\r\n                wfsTransactionVersion: '1.1.0',\r\n                projection: DEFAULT_GEOSERVER_SRS,\r\n                lockFeatureParams: {\r\n                    expiry: 5, // minutes\r\n                    lockId: 'GeoServer',\r\n                    releaseAction: 'SOME'\r\n                }\r\n            },\r\n            headers: {},\r\n            credentials: 'same-origin',\r\n            useLockFeature: true\r\n        };\r\n\r\n        this._options = deepObjectAssign(defaults, options);\r\n\r\n        this.setAdvanced(this._options.advanced);\r\n        this.setHeaders(this._options.headers);\r\n        this.setCredentials(this._options.credentials);\r\n        this.setUrl(this._options.url);\r\n        this.setUseLockFeature(this._options.useLockFeature);\r\n\r\n        this._countRequests = 0;\r\n\r\n        this._insertFeatures = [];\r\n        this._updateFeatures = [];\r\n        this._deleteFeatures = [];\r\n\r\n        // Formats\r\n        this._formatWFS = new WFS();\r\n\r\n        this._formatGeoJSON = new GeoJSON();\r\n        this._formatKml = new KML({\r\n            extractStyles: false,\r\n            showPointNames: false\r\n        });\r\n        this._xs = new XMLSerializer();\r\n\r\n        this.getAndUpdateCapabilities();\r\n\r\n        this.on('change:parsedCapabilities', () => {\r\n            this._checkGeoserverCapabilities();\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getCapabilities(): XMLDocument {\r\n        return this.get(GeoserverProperty.CAPABILITIES);\r\n    }\r\n\r\n    /**\r\n     * Only work for `2.0.0` getCapabilities version\r\n     * @returns\r\n     * @public\r\n     */\r\n    getParsedCapabilities(): any {\r\n        return this.get(GeoserverProperty.PARSED_CAPABILITIES);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param url\r\n     * @param opt_silent\r\n     * @public\r\n     */\r\n    setUrl(url: string, opt_silent = false): void {\r\n        this.set(GeoserverProperty.URL, url, opt_silent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     */\r\n    getUrl(): string {\r\n        return this.get(GeoserverProperty.URL);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param headers\r\n     * @param opt_silent\r\n     * @returns\r\n     * @public\r\n     */\r\n    setHeaders(headers: HeadersInit = {}, opt_silent = false): void {\r\n        return this.set(GeoserverProperty.HEADERS, headers, opt_silent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getHeaders(): HeadersInit {\r\n        return this.get(GeoserverProperty.HEADERS);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param credentials\r\n     * @param opt_silent\r\n     * @public\r\n     */\r\n    setCredentials(\r\n        credentials: RequestCredentials = null,\r\n        opt_silent = false\r\n    ): void {\r\n        this.set(GeoserverProperty.CREDENTIALS, credentials, opt_silent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getCredentials(): RequestCredentials {\r\n        return this.get(GeoserverProperty.CREDENTIALS);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    setAdvanced(advanced: GeoServerAdvanced = {}, opt_silent = false): void {\r\n        this.set(GeoserverProperty.ADVANCED, advanced, opt_silent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getAdvanced(): GeoServerAdvanced {\r\n        return this.get(GeoserverProperty.ADVANCED);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    hasTransaction(): boolean {\r\n        return this.get(GeoserverProperty.HASTRASNACTION);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    hasLockFeature(): boolean {\r\n        return this.get(GeoserverProperty.HASLOCKFEATURE);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getUseLockFeature(): boolean {\r\n        return this.get(GeoserverProperty.USELOCKFEATURE);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    setUseLockFeature(useLockFeature: boolean, opt_silent = false): void {\r\n        this.set(GeoserverProperty.USELOCKFEATURE, useLockFeature, opt_silent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    isLoaded(): boolean {\r\n        return this.get(GeoserverProperty.ISLOADED);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     */\r\n    getState() {\r\n        return this.state_;\r\n    }\r\n\r\n    /**\r\n     * Get the capabilities from the GeoServer and check\r\n     * all the available operations.\r\n     *\r\n     * @fires getcapabilities\r\n     * @public\r\n     */\r\n    async getAndUpdateCapabilities(): Promise<XMLDocument> {\r\n        try {\r\n            const params = new URLSearchParams({\r\n                service: 'wfs',\r\n                version: this.getAdvanced().getCapabilitiesVersion,\r\n                request: 'GetCapabilities',\r\n                exceptions: 'application/json'\r\n            });\r\n\r\n            const url_fetch = this.getUrl() + '?' + params.toString();\r\n\r\n            const response = await fetch(url_fetch, {\r\n                headers: this.getHeaders(),\r\n                credentials: this.getCredentials()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('');\r\n            }\r\n\r\n            const data = await response.text();\r\n            const capabilities = new window.DOMParser().parseFromString(\r\n                data,\r\n                'text/xml'\r\n            );\r\n\r\n            this.set(GeoserverProperty.CAPABILITIES, capabilities);\r\n\r\n            const parsedCapabilities = parser.read(data);\r\n\r\n            this.set(GeoserverProperty.PARSED_CAPABILITIES, parsedCapabilities);\r\n\r\n            this.state_ = capabilities ? 'ready' : 'error';\r\n\r\n            return capabilities;\r\n        } catch (err) {\r\n            console.error(err);\r\n            const msg =\r\n                typeof err === 'string' ? err : I18N.errors.capabilities;\r\n            showError(msg, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _checkGeoserverCapabilities() {\r\n        if (this.getAdvanced().getCapabilitiesVersion === '2.0.0') {\r\n            // Available operations in the geoserver\r\n            const operations: Array<any> =\r\n                this.getParsedCapabilities()?.OperationsMetadata?.Operation;\r\n\r\n            if (operations) {\r\n                operations.forEach((operation) => {\r\n                    if (operation.name === 'Transaction') {\r\n                        this.set(GeoserverProperty.HASTRASNACTION, true);\r\n                    } else if (operation.name === 'LockFeature') {\r\n                        this.set(GeoserverProperty.HASLOCKFEATURE, true);\r\n                    } else if (operation.name === 'DescribeFeatureType') {\r\n                        this.set(\r\n                            GeoserverProperty.HASDESCRIBEFEATURETYPE,\r\n                            true\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            const operations: HTMLCollectionOf<Element> =\r\n                this.getCapabilities().getElementsByTagName('ows:Operation');\r\n\r\n            Array.from(operations).forEach((operation) => {\r\n                if (operation.getAttribute('name') === 'Transaction') {\r\n                    this.set(GeoserverProperty.HASTRASNACTION, true);\r\n                } else if (operation.getAttribute('name') === 'LockFeature') {\r\n                    this.set(GeoserverProperty.HASLOCKFEATURE, true);\r\n                } else if (\r\n                    operation.getAttribute('name') === 'DescribeFeatureType'\r\n                ) {\r\n                    this.set(GeoserverProperty.HASDESCRIBEFEATURETYPE, true);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (!this.hasTransaction()) {\r\n            throw I18N.errors.wfst;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Make the WFS Transactions\r\n     *\r\n     * @param transactionType\r\n     * @param features\r\n     * @param layerName\r\n     * @private\r\n     */\r\n    async transact(\r\n        transactionType: TransactionType,\r\n        features: Array<Feature<Geometry>> | Feature<Geometry>,\r\n        layerName: string\r\n    ): Promise<TransactionResponse | false> {\r\n        features = (\r\n            Array.isArray(features) ? features : [features]\r\n        ) as Feature<Geometry>[];\r\n        const clonedFeatures = [];\r\n        const geoLayer = getStoredLayer(layerName);\r\n\r\n        for (const feature of features) {\r\n            let clone = this._cloneFeature(feature);\r\n            const cloneGeom = clone.getGeometry();\r\n\r\n            // Ugly fix to support GeometryCollection on GML\r\n            // See https://github.com/openlayers/openlayers/issues/4220\r\n            if (cloneGeom instanceof GeometryCollection) {\r\n                this._transformGeoemtryCollectionToGeometries(\r\n                    clone,\r\n                    cloneGeom as GeometryCollection\r\n                );\r\n            } else if (cloneGeom instanceof Circle) {\r\n                // Geoserver has no Support to Circles\r\n                this._transformCircleToPolygon(clone, cloneGeom as Circle);\r\n            }\r\n\r\n            // Filters\r\n            if (\r\n                'beforeTransactFeature' in geoLayer &&\r\n                typeof geoLayer.beforeTransactFeature === 'function'\r\n            ) {\r\n                clone = geoLayer.beforeTransactFeature(clone, transactionType);\r\n            }\r\n\r\n            if (clone) {\r\n                clonedFeatures.push(clone);\r\n            }\r\n        }\r\n\r\n        if (!clonedFeatures.length) {\r\n            showError(I18N.errors.noValidGeometry);\r\n            return false;\r\n        }\r\n\r\n        switch (transactionType) {\r\n            case TransactionType.Insert:\r\n                this._insertFeatures = [\r\n                    ...this._insertFeatures,\r\n                    ...clonedFeatures\r\n                ];\r\n                break;\r\n            case TransactionType.Update:\r\n                this._updateFeatures = [\r\n                    ...this._updateFeatures,\r\n                    ...clonedFeatures\r\n                ];\r\n                break;\r\n            case TransactionType.Delete:\r\n                this._deleteFeatures = [\r\n                    ...this._deleteFeatures,\r\n                    ...clonedFeatures\r\n                ];\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this._countRequests++;\r\n        const numberRequest = this._countRequests;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(async () => {\r\n                try {\r\n                    // Prevent fire multiples times\r\n                    if (numberRequest !== this._countRequests) {\r\n                        return;\r\n                    }\r\n\r\n                    let srs = getMap().getView().getProjection().getCode();\r\n\r\n                    // Force latitude/longitude order on transactions\r\n                    // EPSG:4326 is longitude/latitude (assumption) and is not managed correctly by GML3\r\n                    srs =\r\n                        srs === 'EPSG:4326'\r\n                            ? 'urn:x-ogc:def:crs:EPSG:4326'\r\n                            : srs;\r\n\r\n                    if (!geoLayer || !geoLayer.getDescribeFeatureType()) {\r\n                        throw new Error(\r\n                            `${I18N.errors.layerNotFound}: \"${layerName}\"`\r\n                        );\r\n                    }\r\n\r\n                    const describeFeatureType =\r\n                        geoLayer.getDescribeFeatureType()._parsed;\r\n\r\n                    const options = {\r\n                        featureNS: describeFeatureType.namespace,\r\n                        featureType: layerName,\r\n                        srsName: srs,\r\n                        featurePrefix: null,\r\n                        nativeElements: null,\r\n                        version: this.getAdvanced().wfsTransactionVersion\r\n                    };\r\n\r\n                    const transaction = this._formatWFS.writeTransaction(\r\n                        this._insertFeatures,\r\n                        this._updateFeatures,\r\n                        this._deleteFeatures,\r\n                        options\r\n                    );\r\n\r\n                    let payload = this._xs.serializeToString(transaction);\r\n                    const geomType = describeFeatureType.geomType;\r\n                    const geomField = describeFeatureType.geomField;\r\n\r\n                    // Ugly fix to support GeometryCollection on GML\r\n                    // See https://github.com/openlayers/openlayers/issues/4220\r\n                    if (geomType === GeometryType.GeometryCollection) {\r\n                        if (transactionType === TransactionType.Insert) {\r\n                            payload = payload.replace(\r\n                                /<geometry>/g,\r\n                                `<geometry><MultiGeometry xmlns=\"http://www.opengis.net/gml\" srsName=\"${srs}\"><geometryMember>`\r\n                            );\r\n                            payload = payload.replace(\r\n                                /<\\/geometry>/g,\r\n                                `</geometryMember></MultiGeometry></geometry>`\r\n                            );\r\n                        } else if (transactionType === TransactionType.Update) {\r\n                            const gmemberIn = `<MultiGeometry xmlns=\"http://www.opengis.net/gml\" srsName=\"${srs}\"><geometryMember>`;\r\n                            const gmemberOut = `</geometryMember></MultiGeometry>`;\r\n\r\n                            payload = payload.replace(\r\n                                /(.*)(<Name>geometry<\\/Name><Value>)(.*?)(<\\/Value>)(.*)/g,\r\n                                `$1$2${gmemberIn}$3${gmemberOut}$4$5`\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    // Fixes geometry name, weird bug with GML:\r\n                    // The property for the geometry column is always named \"geometry\"\r\n                    if (transactionType === TransactionType.Insert) {\r\n                        payload = payload.replace(\r\n                            /<(\\/?)\\bgeometry\\b>/g,\r\n                            `<$1${geomField}>`\r\n                        );\r\n                    } else {\r\n                        payload = payload.replace(\r\n                            /<Name>geometry<\\/Name>/g,\r\n                            `<Name>${geomField}</Name>`\r\n                        );\r\n                    }\r\n\r\n                    // This has to be te same used before\r\n                    if (\r\n                        this.hasLockFeature &&\r\n                        this.getUseLockFeature() &&\r\n                        transactionType !== TransactionType.Insert\r\n                    ) {\r\n                        payload = payload.replace(\r\n                            `</Transaction>`,\r\n                            `<LockId>${this._options.advanced.lockFeatureParams.lockId}</LockId></Transaction>`\r\n                        );\r\n                    }\r\n\r\n                    const headers = {\r\n                        'Content-Type': 'text/xml',\r\n                        ...this.getHeaders()\r\n                    };\r\n\r\n                    const response = await fetch(this.getUrl(), {\r\n                        method: 'POST',\r\n                        body: payload,\r\n                        headers: headers,\r\n                        credentials: this._options.credentials\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        throw new Error(\r\n                            I18N.errors.transaction + ' ' + response.status\r\n                        );\r\n                    }\r\n\r\n                    const responseStr = await response.text();\r\n\r\n                    const parseResponse =\r\n                        this._formatWFS.readTransactionResponse(responseStr);\r\n\r\n                    const wlayer = getStoredLayer(layerName);\r\n\r\n                    if (!Object.keys(parseResponse).length) {\r\n                        const findError = String(responseStr).match(\r\n                            /<ows:ExceptionText>([\\s\\S]*?)<\\/ows:ExceptionText>/\r\n                        );\r\n\r\n                        if (findError) {\r\n                            if (wlayer instanceof WmsLayer) {\r\n                                this._removeFeatures(\r\n                                    features as Feature<Geometry>[]\r\n                                );\r\n                            }\r\n                            // maybe remove tmp wms features here\r\n                            throw new Error(findError[1]);\r\n                        }\r\n                    }\r\n\r\n                    if (transactionType !== TransactionType.Delete) {\r\n                        this._removeFeatures(features as Feature<Geometry>[]);\r\n                    }\r\n\r\n                    wlayer.refresh();\r\n\r\n                    showLoading(false);\r\n\r\n                    this._insertFeatures = [];\r\n                    this._updateFeatures = [];\r\n                    this._deleteFeatures = [];\r\n\r\n                    this._countRequests = 0;\r\n\r\n                    resolve(parseResponse);\r\n                } catch (err) {\r\n                    showError(err.message, err);\r\n                    showLoading(false);\r\n                    this._countRequests = 0;\r\n                    reject();\r\n                }\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @privatwe\r\n     */\r\n    _removeFeatures(features: Feature<Geometry>[]) {\r\n        for (const feature of features as Array<Feature<Geometry>>) {\r\n            getEditLayer().getSource().removeFeature(feature);\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * @param feature\r\n     * @param geom\r\n     * @private\r\n     */\r\n    _transformCircleToPolygon(feature: Feature<Geometry>, geom: Circle) {\r\n        const geomConverted = fromCircle(geom);\r\n        feature.setGeometry(geomConverted);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param feature\r\n     * @private\r\n     * @param geom\r\n     */\r\n    _transformGeoemtryCollectionToGeometries(\r\n        feature: Feature<Geometry>,\r\n        geom: GeometryCollection\r\n    ) {\r\n        let geomConverted = geom.getGeometries()[0];\r\n\r\n        if (geomConverted instanceof Circle) {\r\n            geomConverted = fromCircle(geomConverted);\r\n        }\r\n\r\n        feature.setGeometry(geomConverted);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param feature\r\n     * @returns\r\n     * @private\r\n     */\r\n    _cloneFeature(feature: Feature<Geometry>): Feature<Geometry> {\r\n        removeFeatureFromEditList(feature);\r\n\r\n        const featureProperties = feature.getProperties();\r\n\r\n        delete featureProperties.boundedBy;\r\n        delete featureProperties._layerName_;\r\n\r\n        const clone = new Feature(featureProperties);\r\n        clone.setId(feature.getId());\r\n\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Lock a feature in the geoserver. Useful before editing a geometry,\r\n     * to avoid changes from multiples suers\r\n     *\r\n     * @param featureId\r\n     * @param layerName\r\n     * @param retry\r\n     * @public\r\n     */\r\n    async lockFeature(\r\n        featureId: string | number,\r\n        layerName: string,\r\n        retry = 0\r\n    ): Promise<string> {\r\n        const params = new URLSearchParams({\r\n            service: 'wfs',\r\n            version: this.getAdvanced().lockFeatureVersion,\r\n            request: 'LockFeature',\r\n            typeName: layerName,\r\n            expiry: String(this._options.advanced.lockFeatureParams.expiry),\r\n            LockId: this._options.advanced.lockFeatureParams.lockId,\r\n            releaseAction:\r\n                this._options.advanced.lockFeatureParams.releaseAction,\r\n            exceptions: 'application/json',\r\n            featureid: `${featureId}`\r\n        });\r\n\r\n        const url_fetch = this.getUrl() + '?' + params.toString();\r\n\r\n        try {\r\n            const response = await fetch(url_fetch, {\r\n                headers: this._options.headers,\r\n                credentials: this._options.credentials\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(I18N.errors.lockFeature);\r\n            }\r\n\r\n            const data = await response.text();\r\n\r\n            try {\r\n                // First, check if is a JSON (with errors)\r\n                const dataParsed = JSON.parse(data);\r\n\r\n                if ('exceptions' in dataParsed) {\r\n                    const error = new Error(parseError(dataParsed));\r\n\r\n                    const exceptions = dataParsed.exceptions;\r\n                    if (exceptions[0].code === 'CannotLockAllFeatures') {\r\n                        // Maybe the Feature is already blocked, ant thats trigger error, so, we try one locking more time again\r\n                        if (!retry) {\r\n                            this.lockFeature(featureId, layerName, 1);\r\n                        } else {\r\n                            throw error;\r\n                        }\r\n                    } else {\r\n                        throw error;\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                /*\r\n             \r\n                let dataDoc = (new window.DOMParser()).parseFromString(data, 'text/xml');\r\n             \r\n                let lockId = dataDoc.getElementsByTagName('wfs:LockId');\r\n             \r\n                let featuresLocked: HTMLCollectionOf<Element> = dataDoc.getElementsByTagName('ogc:FeatureId');\r\n             \r\n                for (let featureLocked of featuresLocked as any) {\r\n             \r\n                    console.log(featureLocked.getAttribute('fid'));\r\n             \r\n                }\r\n             \r\n                */\r\n            }\r\n\r\n            return data;\r\n        } catch (err) {\r\n            showError(err.message, err);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n * @public\r\n */\r\nexport interface GeoserverOptions {\r\n    /**\r\n     * Url for OWS services. This endpoint will recive the WFS, WFST and WMS requests\r\n     *\r\n     */\r\n    url: string;\r\n\r\n    /**\r\n     * Advanced options for geoserver requests\r\n     *\r\n     */\r\n    advanced?: GeoServerAdvanced;\r\n\r\n    /**\r\n     * Http headers for GeoServer requests\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Request/headers\r\n     *\r\n     */\r\n    headers?: HeadersInit;\r\n\r\n    /**\r\n     * Credentials for fetch requests\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials\r\n     *\r\n     * Default is 'same-origin'\r\n     */\r\n    credentials?: RequestCredentials;\r\n\r\n    /**\r\n     * Use LockFeatue request on GeoServer when selecting features. Prevents a feature from being edited\r\n     * through a persistent feature lock. This is not always supportedd by the GeoServer.\r\n     * See https://docs.geoserver.org/stable/en/user/services/wfs/reference.html\r\n     */\r\n    useLockFeature?: boolean;\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n *\r\n *  * Default values:\r\n * ```javascript\r\n * {\r\n *   getCapabilitiesVersion: '2.0.0',\r\n *   getFeatureVersion: '1.0.0',\r\n *   describeFeatureTypeVersion: '1.1.0',\r\n *   lockFeatureVersion: '1.1.0',\r\n *   wfsTransactionVersion: '1.1.0',\r\n *   projection: 'EPSG:3857',\r\n *   lockFeatureParams: {\r\n *     expiry: 5,\r\n *     lockId: 'Geoserver',\r\n *     releaseAction: 'SOME'\r\n *   }\r\n * }\r\n * @public\r\n */\r\nexport interface GeoServerAdvanced {\r\n    getCapabilitiesVersion?: string;\r\n    getFeatureVersion?: string;\r\n    lockFeatureVersion?: string;\r\n    describeFeatureTypeVersion?: string;\r\n    wfsTransactionVersion?: string;\r\n    projection?: ProjectionLike;\r\n    lockFeatureParams?: {\r\n        // 5 (minutes) by default\r\n        expiry?: number | string;\r\n\r\n        // 'Geoserver' by default\r\n        lockId?: string;\r\n\r\n        // 'SOME' by default\r\n        releaseAction?: string;\r\n    };\r\n}\r\n\r\nexport enum GeoserverProperty {\r\n    CAPABILITIES = 'capabilities',\r\n    PARSED_CAPABILITIES = 'parsedCapabilities',\r\n    URL = 'url',\r\n    HEADERS = 'headers',\r\n    CREDENTIALS = 'credentials',\r\n    ADVANCED = 'advanced',\r\n    HASTRASNACTION = 'hasTransaction',\r\n    HASLOCKFEATURE = 'hasLockFeature',\r\n    HASDESCRIBEFEATURETYPE = 'hasDescribeFeatureType',\r\n    USELOCKFEATURE = 'useLockFeature',\r\n    ISLOADED = 'isLoaded'\r\n}\r\n\r\nexport type GeoserverEventTypes =\r\n    | `change:${GeoserverProperty.CAPABILITIES}`\r\n    | `change:${GeoserverProperty.PARSED_CAPABILITIES}`\r\n    | `change:${GeoserverProperty.URL}`\r\n    | `change:${GeoserverProperty.HEADERS}`\r\n    | `change:${GeoserverProperty.CREDENTIALS}`\r\n    | `change:${GeoserverProperty.ADVANCED}`\r\n    | `change:${GeoserverProperty.HASTRASNACTION}`\r\n    | `change:${GeoserverProperty.HASLOCKFEATURE}`\r\n    | `change:${GeoserverProperty.HASDESCRIBEFEATURETYPE}`\r\n    | `change:${GeoserverProperty.USELOCKFEATURE}`\r\n    | `change:${GeoserverProperty.ISLOADED}`;\r\n","import { getCenter } from 'ol/extent.js';\r\nimport Geometry from 'ol/geom/Geometry.js';\r\nimport Feature from 'ol/Feature.js';\r\nimport Overlay from 'ol/Overlay.js';\r\nimport { Coordinate } from 'ol/coordinate.js';\r\n\r\n// Images\r\nimport editFieldsSvg from '../assets/images/editFields.svg';\r\nimport editGeomSvg from '../assets/images/editGeom.svg';\r\nimport { I18N } from './i18n';\r\n\r\nimport myPragma from '../myPragma';\r\n\r\nexport default class EditOverlay extends Overlay {\r\n    constructor(feature: Feature<Geometry>, coordinate: Coordinate = null) {\r\n        super({\r\n            id: feature.getId(),\r\n            position:\r\n                coordinate || getCenter(feature.getGeometry().getExtent()),\r\n            positioning: 'center-center',\r\n            offset: [0, -40],\r\n            stopEvent: true,\r\n            element: (\r\n                <div>\r\n                    <div\r\n                        className=\"ol-wfst--edit-button-cnt\"\r\n                        onClick={() => {\r\n                            this.dispatchEvent('editFields');\r\n                        }}\r\n                    >\r\n                        <button\r\n                            className=\"ol-wfst--edit-button\"\r\n                            type=\"button\"\r\n                            title={I18N.labels.editFields}\r\n                        >\r\n                            <img\r\n                                src={editFieldsSvg as string}\r\n                                alt={I18N.labels.editFields}\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                    <div\r\n                        className=\"ol-wfst--edit-button-cnt\"\r\n                        onClick={() => {\r\n                            this.dispatchEvent('editGeom');\r\n                        }}\r\n                    >\r\n                        <button\r\n                            class=\"ol-wfst--edit-button\"\r\n                            type=\"button\"\r\n                            title={I18N.labels.editGeom}\r\n                        >\r\n                            <img\r\n                                src={editGeomSvg as string}\r\n                                alt={I18N.labels.editGeom}\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n}\r\n","var img = \"data:image/svg+xml,%3csvg version='1.1' xmlns='http://www.w3.org/2000/svg' width='448' height='448' viewBox='0 0 448 448'%3e %3cpath d='M222 296l29-29-38-38-29 29v14h24v24h14zM332 116c-2.25-2.25-6-2-8.25 0.25l-87.5 87.5c-2.25 2.25-2.5 6-0.25 8.25s6 2 8.25-0.25l87.5-87.5c2.25-2.25 2.5-6 0.25-8.25zM352 264.5v47.5c0 39.75-32.25 72-72 72h-208c-39.75 0-72-32.25-72-72v-208c0-39.75 32.25-72 72-72h208c10 0 20 2 29.25 6.25 2.25 1 4 3.25 4.5 5.75 0.5 2.75-0.25 5.25-2.25 7.25l-12.25 12.25c-2.25 2.25-5.25 3-8 2-3.75-1-7.5-1.5-11.25-1.5h-208c-22 0-40 18-40 40v208c0 22 18 40 40 40h208c22 0 40-18 40-40v-31.5c0-2 0.75-4 2.25-5.5l16-16c2.5-2.5 5.75-3 8.75-1.75s5 4 5 7.25zM328 80l72 72-168 168h-72v-72zM439 113l-23 23-72-72 23-23c9.25-9.25 24.75-9.25 34 0l38 38c9.25 9.25 9.25 24.75 0 34z'%3e%3c/path%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg version='1.1' xmlns='http://www.w3.org/2000/svg' width='541' height='512' viewBox='0 0 541 512'%3e %3cpath fill='black' d='M103.306 228.483l129.493-125.249c-17.662-4.272-31.226-18.148-34.98-35.663l-0.055-0.307-129.852 125.248c17.812 4.15 31.53 18.061 35.339 35.662l0.056 0.308z'%3e%3c/path%3e %3cpath fill='black' d='M459.052 393.010c-13.486-8.329-22.346-23.018-22.373-39.779v-0.004c-0.053-0.817-0.082-1.772-0.082-2.733s0.030-1.916 0.089-2.863l-0.007 0.13-149.852 71.94c9.598 8.565 15.611 20.969 15.611 34.779 0 0.014 0 0.029 0 0.043v-0.002c-0.048 5.164-0.94 10.104-2.544 14.711l0.098-0.322z'%3e%3c/path%3e %3cpath fill='black' d='M290.207 57.553c-0.009 15.55-7.606 29.324-19.289 37.819l-0.135 0.093 118.054 46.69c-0.216-1.608-0.346-3.48-0.36-5.379v-0.017c0.033-16.948 9.077-31.778 22.596-39.953l0.209-0.118-122.298-48.056c0.659 2.633 1.098 5.693 1.221 8.834l0.002 0.087z'%3e%3c/path%3e %3cpath fill='black' d='M241.36 410.132l-138.629-160.067c-4.734 17.421-18.861 30.61-36.472 33.911l-0.29 0.045 143.881 166.255c1.668-18.735 14.197-34.162 31.183-40.044l0.327-0.099z'%3e%3c/path%3e %3cpath fill='black' d='M243.446 115.105c-31.785 0-57.553-25.767-57.553-57.553s25.767-57.553 57.553-57.553c31.785 0 57.552 25.767 57.552 57.553v0c0 31.786-25.767 57.553-57.553 57.553v0zM243.446 21.582c-19.866 0-35.97 16.105-35.97 35.97s16.105 35.97 35.97 35.97c19.866 0 35.97-16.105 35.97-35.97v0c0-19.866-16.104-35.97-35.97-35.97v0z'%3e%3c/path%3e %3cpath fill='black' d='M483.224 410.78c-31.786 0-57.553-25.767-57.553-57.553s25.767-57.553 57.553-57.553c31.786 0 57.552 25.767 57.552 57.553v0c0 31.786-25.767 57.553-57.553 57.553v0zM483.224 317.257c-19.866 0-35.97 16.104-35.97 35.97s16.105 35.97 35.97 35.97c19.866 0 35.97-16.105 35.97-35.97v0c0-19.866-16.105-35.97-35.97-35.97v0z'%3e%3c/path%3e %3cpath fill='black' d='M57.553 295.531c-31.785 0-57.553-25.767-57.553-57.553s25.767-57.553 57.553-57.553c31.785 0 57.553 25.767 57.553 57.553v0c0 31.786-25.767 57.553-57.553 57.553v0zM57.553 202.008c-19.866 0-35.97 16.105-35.97 35.97s16.105 35.97 35.97 35.97c19.866 0 35.97-16.105 35.97-35.97v0c-0.041-19.835-16.13-35.898-35.97-35.898 0 0 0 0 0 0v0z'%3e%3c/path%3e %3cpath fill='black' d='M256.036 512.072c-31.786 0-57.553-25.767-57.553-57.553s25.767-57.553 57.553-57.553c31.786 0 57.553 25.767 57.553 57.553v0c0 31.786-25.767 57.553-57.553 57.553v0zM256.036 418.55c-19.866 0-35.97 16.104-35.97 35.97s16.105 35.97 35.97 35.97c19.866 0 35.97-16.105 35.97-35.97v0c0-19.866-16.105-35.97-35.97-35.97v0z'%3e%3c/path%3e %3cpath fill='black' d='M435.24 194.239c-31.786 0-57.553-25.767-57.553-57.553s25.767-57.553 57.553-57.553c31.786 0 57.553 25.767 57.553 57.553v0c0 31.785-25.767 57.553-57.553 57.553v0zM435.24 100.716c-19.866 0-35.97 16.105-35.97 35.97s16.105 35.97 35.97 35.97c19.866 0 35.97-16.105 35.97-35.97v0c0-19.866-16.105-35.97-35.97-35.97v0z'%3e%3c/path%3e%3c/svg%3e\";\n  export default img;","// Ol\r\nimport Geometry from 'ol/geom/Geometry.js';\r\nimport CircleStyle from 'ol/style/Circle.js';\r\nimport Fill from 'ol/style/Fill.js';\r\nimport Stroke from 'ol/style/Stroke.js';\r\nimport Style from 'ol/style/Style.js';\r\nimport Control from 'ol/control/Control.js';\r\nimport Draw from 'ol/interaction/Draw.js';\r\nimport Modify from 'ol/interaction/Modify.js';\r\nimport Select from 'ol/interaction/Select.js';\r\nimport Snap from 'ol/interaction/Snap.js';\r\nimport MapBrowserEvent from 'ol/MapBrowserEvent.js';\r\nimport { EventsKey } from 'ol/events.js';\r\nimport Collection from 'ol/Collection.js';\r\nimport Feature from 'ol/Feature.js';\r\nimport Overlay from 'ol/Overlay.js';\r\nimport View from 'ol/View.js';\r\nimport VectorSource from 'ol/source/Vector.js';\r\nimport Map from 'ol/Map.js';\r\nimport BaseEvent from 'ol/events/Event.js';\r\nimport { LoadingStrategy } from 'ol/source/Vector.js';\r\nimport { FeatureLike } from 'ol/Feature.js';\r\nimport { Options as VectorLayerOptions } from 'ol/layer/BaseVector.js';\r\nimport { never, primaryAction } from 'ol/events/condition.js';\r\nimport {\r\n    unByKey,\r\n    CombinedOnSignature,\r\n    EventTypes,\r\n    OnSignature\r\n} from 'ol/Observable.js';\r\nimport { Coordinate } from 'ol/coordinate.js';\r\nimport { ObjectEvent } from 'ol/Object.js';\r\nimport { Types as ObjectEventTypes } from 'ol/ObjectEventType.js';\r\n\r\nimport { initModal, showError } from './modules/errors';\r\nimport { initLoading, showLoading } from './modules/loading';\r\nimport WfsLayer from './WfsLayer';\r\nimport WmsLayer from './WmsLayer';\r\nimport LayersControl, {\r\n    activateDrawButton,\r\n    activateModeButtons,\r\n    resetStateButtons\r\n} from './modules/LayersControl';\r\nimport Uploads from './modules/Uploads';\r\nimport {\r\n    addFeatureToEditedList,\r\n    getStoredMapLayers,\r\n    isFeatureEdited,\r\n    removeFeatureFromEditList,\r\n    setActiveLayerToInsertEls,\r\n    getActiveLayerToInsertEls,\r\n    activateMode,\r\n    getMode,\r\n    Modes,\r\n    setMap,\r\n    setMapLayers,\r\n    getStoredLayer\r\n} from './modules/state';\r\nimport { deepObjectAssign } from './modules/helpers';\r\nimport { getEditLayer } from './modules/editLayer';\r\nimport { GeometryType, TransactionType } from './@enums';\r\nimport {\r\n    I18n,\r\n    IGeoserverDescribeFeatureType,\r\n    WfsGeoserverVendor,\r\n    WmsGeoserverVendor\r\n} from './@types';\r\nimport * as i18n from './modules/i18n/index';\r\nimport { getDefaultOptions } from './defaults';\r\nimport EditControlChangesEl from './modules/EditControlChanges';\r\nimport styleFunction from './modules/styleFunction';\r\nimport { EditFieldsModal } from './modules/EditFieldsModal';\r\nimport Geoserver from './Geoserver';\r\nimport EditOverlay from './modules/EditOverlay';\r\nimport { BaseLayerProperty } from './modules/base/BaseLayer';\r\n\r\n// External\r\nimport Modal from 'modal-vanilla';\r\n\r\n// Style\r\nimport './assets/scss/-ol-wfst.bootstrap5.scss';\r\nimport './assets/scss/ol-wfst.scss';\r\n\r\nconst controlElement = document.createElement('div');\r\n\r\n/**\r\n * Tiny WFST-T client to insert (drawing/uploading), modify and delete\r\n * features on GeoServers using OpenLayers. Layers with these types\r\n * of geometries are supported: \"GeometryCollection\" (in this case, you can\r\n * choose the geometry type of each element to draw), \"Point\", \"MultiPoint\",\r\n * \"LineString\", \"MultiLineString\", \"Polygon\" and \"MultiPolygon\".\r\n *\r\n * @constructor\r\n * @fires modifystart\r\n * @fires modifyend\r\n * @fires drawstart\r\n * @fires drawend\r\n * @fires load\r\n * @fires describeFeatureType\r\n * @extends {ol/control/Control~Control}\r\n * @param options Wfst options, see [Wfst Options](#options) for more details.\r\n */\r\nexport default class Wfst extends Control {\r\n    protected _options: Options;\r\n    protected _i18n: I18n;\r\n\r\n    // Ol\r\n    protected _map: Map;\r\n    protected _view: View;\r\n    protected _viewport: HTMLElement;\r\n    protected _initialized = false;\r\n    protected _layersControl: LayersControl;\r\n    protected _overlay: Overlay;\r\n\r\n    // Interactions\r\n    protected _interactionWfsSelect: Select;\r\n    protected _interactionSelectModify: Select;\r\n    protected _collectionModify: Collection<any>;\r\n    protected _interactionModify: Modify;\r\n    protected _interactionSnap: Snap;\r\n    protected _interactionDraw: Draw;\r\n\r\n    // Obserbable keys\r\n    protected _keyClickWms: EventsKey | EventsKey[];\r\n    protected _keyRemove: EventsKey;\r\n    protected _keySelect: EventsKey;\r\n\r\n    // Controls\r\n    protected _controlApplyDiscardChanges: EditControlChangesEl;\r\n    protected _controlWidgetToolsDiv: HTMLElement;\r\n    protected _selectDraw: HTMLSelectElement;\r\n\r\n    // State\r\n    protected _currentZoom: number;\r\n    protected _lastZoom: number;\r\n\r\n    // Editing\r\n    protected _editFeature: Feature<Geometry>;\r\n    protected _editFeatureOriginal: Feature<Geometry>;\r\n\r\n    protected _uploads: Uploads;\r\n    protected _editFields: EditFieldsModal;\r\n\r\n    declare on: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<WfstEventTypes, WfstEvent, EventsKey> &\r\n        OnSignature<ObjectEventTypes, ObjectEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            WfstEventTypes | ObjectEventTypes | EventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare once: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<WfstEventTypes, WfstEvent, EventsKey> &\r\n        OnSignature<ObjectEventTypes, ObjectEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            WfstEventTypes | ObjectEventTypes | EventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare un: OnSignature<EventTypes, BaseEvent, void> &\r\n        OnSignature<WfstEventTypes, WfstEvent, EventsKey> &\r\n        OnSignature<ObjectEventTypes, ObjectEvent, void> &\r\n        CombinedOnSignature<\r\n            WfstEventTypes | ObjectEventTypes | EventTypes,\r\n            void\r\n        >;\r\n\r\n    constructor(options?: Options) {\r\n        super({\r\n            target: null,\r\n            element: controlElement,\r\n            render: () => {\r\n                if (!this._map) this._init();\r\n            }\r\n        });\r\n\r\n        i18n.setLang(options.language, options.i18n);\r\n\r\n        const defaultOptions = getDefaultOptions();\r\n\r\n        this._options = deepObjectAssign(defaultOptions, options);\r\n\r\n        // By default, the first layer is ready to accept new draws\r\n        setActiveLayerToInsertEls(this._options.layers[0]);\r\n\r\n        this._controlWidgetToolsDiv = controlElement;\r\n        this._controlWidgetToolsDiv.className = 'ol-wfst--tools-control';\r\n\r\n        this._uploads = new Uploads(this._options);\r\n\r\n        this._editFields = new EditFieldsModal(this._options.modal);\r\n    }\r\n\r\n    /**\r\n     * Get all the layers in the ol-wfst instance\r\n     * @public\r\n     */\r\n    getLayers(): Array<WfsLayer | WmsLayer> {\r\n        return Object.values(getStoredMapLayers());\r\n    }\r\n\r\n    /**\r\n     * Get a layer\r\n     * @public\r\n     */\r\n    getLayerByName(layerName = ''): WfsLayer | WmsLayer {\r\n        const layers = getStoredMapLayers();\r\n        if (layerName && layerName in layers) {\r\n            return layers[layerName];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Connect to the GeoServer and retrieve metadata about the service (GetCapabilities).\r\n     * Get each layer specs (DescribeFeatureType) and create the layers and map controls.\r\n     * @fires describeFeatureType\r\n     * @private\r\n     */\r\n    async _initMapAndLayers(): Promise<void> {\r\n        try {\r\n            const layers = this._options.layers;\r\n\r\n            if (layers.length) {\r\n                let layerRendered = 0;\r\n                let layersNumber = 0; // Only count visibles\r\n\r\n                layers.forEach((layer) => {\r\n                    if (layer.getVisible()) layersNumber++;\r\n\r\n                    layer.on('layerRendered', () => {\r\n                        layerRendered++;\r\n                        if (layerRendered >= layersNumber) {\r\n                            // run only once\r\n                            if (!this._initialized) {\r\n                                this.dispatchEvent('load');\r\n                                this._initialized = true;\r\n                            }\r\n                            showLoading(false);\r\n                        }\r\n                    });\r\n\r\n                    layer.on('change:describeFeatureType', () => {\r\n                        const domEl = this._layersControl.addLayerEl(layer);\r\n\r\n                        layer.on('change:isVisible', () => {\r\n                            const layerNotVisible =\r\n                                'ol-wfst--layer-not-visible';\r\n\r\n                            const visible = layer.isVisibleByZoom();\r\n                            if (visible)\r\n                                domEl.classList.remove(layerNotVisible);\r\n                            else domEl.classList.add(layerNotVisible);\r\n                        });\r\n\r\n                        layer.set(\r\n                            BaseLayerProperty.ISVISIBLE,\r\n                            this._currentZoom > layer.getMinZoom()\r\n                        );\r\n\r\n                        this.dispatchEvent(\r\n                            new WfstEvent({\r\n                                type: 'describeFeatureType',\r\n                                layer: layer,\r\n                                data: layer.getDescribeFeatureType()\r\n                            })\r\n                        );\r\n                    });\r\n\r\n                    layer._init();\r\n\r\n                    this._map.addLayer(layer);\r\n\r\n                    setMapLayers({\r\n                        [layer.get(BaseLayerProperty.NAME)]: layer\r\n                    });\r\n                });\r\n\r\n                this._createMapElements(\r\n                    this._options.showControl,\r\n                    this._options.active\r\n                );\r\n            }\r\n        } catch (err) {\r\n            showLoading(false);\r\n            showError(err.message, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _init(): void {\r\n        this._map = super.getMap();\r\n        this._view = this._map.getView();\r\n        this._viewport = this._map.getViewport();\r\n\r\n        setMap(this._map);\r\n\r\n        //@ts-expect-error\r\n        this._uploads.on('addedFeatures', ({ features }) => {\r\n            const layer = getActiveLayerToInsertEls();\r\n            layer.insertFeatures(features);\r\n        });\r\n\r\n        //@ts-expect-error\r\n        this._uploads.on('loadedFeatures', ({ features }) => {\r\n            this.activateEditMode();\r\n            const editLayerSource = getEditLayer().getSource();\r\n\r\n            editLayerSource.addFeatures(features);\r\n\r\n            this._view.fit(editLayerSource.getExtent(), {\r\n                size: this._map.getSize(),\r\n                maxZoom: 21,\r\n                padding: [100, 100, 100, 100]\r\n            });\r\n        });\r\n\r\n        // @ts-expect-error\r\n        this._editFields.on('save', ({ feature }) => {\r\n            // Force deselect to trigger handler\r\n            this._collectionModify.remove(feature);\r\n        });\r\n\r\n        // @ts-expect-error\r\n        this._editFields.dispose('delete', ({ feature }) => {\r\n            this._deleteFeature(feature, true);\r\n        });\r\n\r\n        this._addMapEvents();\r\n\r\n        initModal(this._options['modal']);\r\n\r\n        this._controlWidgetToolsDiv.append(initLoading());\r\n\r\n        this._initMapAndLayers();\r\n    }\r\n\r\n    /**\r\n     * Create the edit layer to allow modify elements, add interactions,\r\n     * map controls and keyboard handlers.\r\n     *\r\n     * @param showControl\r\n     * @param active\r\n     * @private\r\n     */\r\n    async _createMapElements(\r\n        showControl: boolean,\r\n        active: boolean\r\n    ): Promise<void> {\r\n        // VectorLayer to store features on editing and inserting\r\n        this._prepareEditLayer();\r\n\r\n        this._addInteractions();\r\n        this._addInteractionHandlers();\r\n\r\n        if (showControl) {\r\n            this._addMapControl();\r\n        }\r\n\r\n        // By default, init in edit mode\r\n        this.activateEditMode(active);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _addInteractions(): void {\r\n        /**\r\n         * Select the wfs feature already downloaded\r\n         * @private\r\n         */\r\n        const prepareWfsInteraction = () => {\r\n            this._collectionModify = new Collection();\r\n\r\n            // Interaction to select wfs layer elements\r\n            this._interactionWfsSelect = new Select({\r\n                hitTolerance: 10,\r\n                style: (feature: Feature<Geometry>) => styleFunction(feature),\r\n                toggleCondition: never, // Prevent add features to the current selection using shift\r\n                filter: (feature, layer) => {\r\n                    return (\r\n                        getMode() !== Modes.Edit &&\r\n                        layer &&\r\n                        layer instanceof WfsLayer &&\r\n                        layer === getActiveLayerToInsertEls()\r\n                    );\r\n                }\r\n            });\r\n\r\n            this._map.addInteraction(this._interactionWfsSelect);\r\n\r\n            this._interactionWfsSelect.on(\r\n                'select',\r\n                ({ selected, deselected, mapBrowserEvent }) => {\r\n                    const coordinate = mapBrowserEvent.coordinate;\r\n\r\n                    if (selected.length) {\r\n                        selected.forEach((feature) => {\r\n                            if (!isFeatureEdited(feature)) {\r\n                                // Remove the feature from the original layer\r\n                                const layer =\r\n                                    this._interactionWfsSelect.getLayer(\r\n                                        feature\r\n                                    );\r\n                                layer.getSource().removeFeature(feature);\r\n                                this._addFeatureToEditMode(\r\n                                    feature,\r\n                                    coordinate,\r\n                                    layer.get(BaseLayerProperty.NAME)\r\n                                );\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (deselected.length) {\r\n                        if (getMode() !== Modes.Edit) {\r\n                            deselected.forEach((feature) => {\r\n                                // Trigger deselect\r\n                                // This is necessary for those times where two features overlap.\r\n                                this._collectionModify.remove(feature);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        };\r\n\r\n        /**\r\n         * Call the geoserver to get the clicked feature\r\n         * @private\r\n         */\r\n        const prepareWmsInteraction = (): void => {\r\n            // Interaction to allow select features in the edit layer\r\n            this._interactionSelectModify = new Select({\r\n                style: (feature: Feature<Geometry>) => styleFunction(feature),\r\n                layers: [getEditLayer()],\r\n                toggleCondition: never, // Prevent add features to the current selection using shift\r\n                removeCondition: () => (getMode() === Modes.Edit ? true : false) // Prevent deselect on clicking outside the feature\r\n            });\r\n\r\n            this._map.addInteraction(this._interactionSelectModify);\r\n\r\n            this._collectionModify =\r\n                this._interactionSelectModify.getFeatures();\r\n\r\n            this._keyClickWms = this._map.on(\r\n                this._options.evtType,\r\n                async (evt: MapBrowserEvent<MouseEvent>) => {\r\n                    if (this._map.hasFeatureAtPixel(evt.pixel)) {\r\n                        return;\r\n                    }\r\n\r\n                    // Only get other features if editmode is disabled\r\n                    if (getMode() !== Modes.Edit) {\r\n                        const layer = getActiveLayerToInsertEls();\r\n\r\n                        // If layer is hidden or is a wfs, skip\r\n                        if (\r\n                            !layer.getVisible() ||\r\n                            !layer.isVisibleByZoom() ||\r\n                            layer instanceof WfsLayer\r\n                        ) {\r\n                            return;\r\n                        }\r\n\r\n                        const features =\r\n                            await layer._getFeaturesByClickEvent(evt);\r\n\r\n                        if (!features?.length) {\r\n                            return;\r\n                        }\r\n\r\n                        // For now, support is only for one feature at time\r\n                        this._addFeatureToEditMode(\r\n                            features[0],\r\n                            evt.coordinate,\r\n                            layer.get(BaseLayerProperty.NAME)\r\n                        );\r\n                    }\r\n                }\r\n            );\r\n        };\r\n\r\n        if (this._options.layers.find((layer) => layer instanceof WfsLayer)) {\r\n            prepareWfsInteraction();\r\n        }\r\n\r\n        if (this._options.layers.find((layer) => layer instanceof WmsLayer)) {\r\n            prepareWmsInteraction();\r\n        }\r\n\r\n        this._interactionModify = new Modify({\r\n            style: () => {\r\n                if (getMode() === Modes.Edit) {\r\n                    return new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 6,\r\n                            fill: new Fill({\r\n                                color: '#ff0000'\r\n                            }),\r\n                            stroke: new Stroke({\r\n                                width: 2,\r\n                                color: 'rgba(5, 5, 5, 0.9)'\r\n                            })\r\n                        })\r\n                    });\r\n                } else {\r\n                    return;\r\n                }\r\n            },\r\n            features: this._collectionModify,\r\n            condition: (evt) => {\r\n                return primaryAction(evt) && getMode() === Modes.Edit;\r\n            }\r\n        });\r\n\r\n        this._map.addInteraction(this._interactionModify);\r\n\r\n        this._interactionSnap = new Snap({\r\n            source: getEditLayer().getSource()\r\n        });\r\n        this._map.addInteraction(this._interactionSnap);\r\n    }\r\n\r\n    /**\r\n     * Layer to store temporary the elements to be edited\r\n     * @private\r\n     */\r\n    _prepareEditLayer(): void {\r\n        this._map.addLayer(getEditLayer());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _addMapEvents(): void {\r\n        /**\r\n         * @private\r\n         */\r\n        const keyboardEvents = (): void => {\r\n            document.addEventListener('keydown', ({ key }) => {\r\n                const inputFocus = document.querySelector('input:focus');\r\n                if (inputFocus) {\r\n                    return;\r\n                }\r\n                if (key === 'Delete') {\r\n                    const selectedFeatures = this._collectionModify;\r\n                    if (selectedFeatures) {\r\n                        selectedFeatures.forEach((feature) => {\r\n                            this._deleteFeature(feature, true);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        };\r\n\r\n        keyboardEvents();\r\n\r\n        this._map.on('moveend', (): void => {\r\n            this._currentZoom = this._view.getZoom();\r\n\r\n            if (this._currentZoom !== this._lastZoom) {\r\n                const layers = getStoredMapLayers();\r\n\r\n                Object.keys(layers).forEach((key) => {\r\n                    const layer = layers[key];\r\n                    if (this._currentZoom > layer.getMinZoom()) {\r\n                        // Show the layers\r\n                        if (!layer.get(BaseLayerProperty.ISVISIBLE)) {\r\n                            layer.set(BaseLayerProperty.ISVISIBLE, true);\r\n                        }\r\n                    } else {\r\n                        // Hide the layer\r\n                        if (layer.get(BaseLayerProperty.ISVISIBLE)) {\r\n                            layer.set(BaseLayerProperty.ISVISIBLE, false);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this._lastZoom = this._currentZoom;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add map handlers\r\n     * @private\r\n     */\r\n    _addInteractionHandlers(): void {\r\n        // When a feature is modified, add this to a list.\r\n        // This prevent events fired on select and deselect features that has no changes and should\r\n        // not be updated in the geoserver\r\n        this._interactionModify.on('modifyend', (evt) => {\r\n            const feature = evt.features.item(0);\r\n            addFeatureToEditedList(feature);\r\n            super.dispatchEvent(evt);\r\n        });\r\n\r\n        this._interactionModify.on('modifystart', (evt) => {\r\n            super.dispatchEvent(evt);\r\n        });\r\n\r\n        this._onDeselectFeatureEvent();\r\n        this._onRemoveFeatureEvent();\r\n    }\r\n\r\n    /**\r\n     * Add the widget on the map to allow change the tools and select active layers\r\n     * @private\r\n     */\r\n    _addMapControl(): void {\r\n        this._layersControl = new LayersControl(\r\n            this._options.showUpload ? this._uploads : null,\r\n            this._options.uploadFormats\r\n        );\r\n\r\n        // @ts-expect-error\r\n        this._layersControl.on('drawMode', () => {\r\n            if (getMode() === Modes.Draw) {\r\n                resetStateButtons();\r\n                this.activateEditMode();\r\n            } else {\r\n                const activeLayer = getActiveLayerToInsertEls();\r\n\r\n                if (!activeLayer.isVisibleByZoom()) {\r\n                    showError(i18n.I18N.errors.layerNotVisible);\r\n                } else {\r\n                    this.activateDrawMode(getActiveLayerToInsertEls());\r\n                }\r\n            }\r\n        });\r\n\r\n        // @ts-expect-error\r\n        this._layersControl.on('changeGeom', () => {\r\n            if (getMode() === Modes.Draw) {\r\n                this.activateDrawMode(getActiveLayerToInsertEls());\r\n            }\r\n        });\r\n\r\n        const controlEl = this._layersControl.render();\r\n\r\n        this._selectDraw = controlEl.querySelector(\r\n            '.wfst--tools-control--select-draw'\r\n        );\r\n\r\n        this._controlWidgetToolsDiv.append(controlEl);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _deselectEditFeature(feature: FeatureLike): void {\r\n        this._removeOverlayHelper(feature);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param feature\r\n     * @param layerName\r\n     * @private\r\n     */\r\n    _restoreFeatureToLayer(\r\n        feature: Feature<Geometry>,\r\n        layerName?: string\r\n    ): void {\r\n        layerName = layerName || feature.get('_layerName_');\r\n        const layer = getStoredMapLayers()[layerName];\r\n        (layer.getSource() as VectorSource<Geometry>).addFeature(feature);\r\n    }\r\n\r\n    /**\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _removeFeatureFromTmpLayer(feature: Feature<Geometry>): void {\r\n        // Remove element from the Layer\r\n        getEditLayer().getSource().removeFeature(feature);\r\n    }\r\n\r\n    /**\r\n     * Trigger on deselecting a feature from in the Edit layer\r\n     *\r\n     * @private\r\n     */\r\n    _onDeselectFeatureEvent(): void {\r\n        const checkIfFeatureIsChanged = (feature: Feature<Geometry>): void => {\r\n            const layerName = feature.get('_layerName_');\r\n\r\n            const layer = this._options.layers.find(\r\n                (layer) => layer.get(BaseLayerProperty.NAME) === layerName\r\n            );\r\n\r\n            if (layer instanceof WfsLayer) {\r\n                this._interactionWfsSelect.getFeatures().remove(feature);\r\n            }\r\n\r\n            if (isFeatureEdited(feature)) {\r\n                layer.transactFeatures(TransactionType.Update, feature);\r\n            } else {\r\n                // Si es wfs y el elemento no tuvo cambios, lo devolvemos a la layer original\r\n                if (layer instanceof WfsLayer) {\r\n                    this._restoreFeatureToLayer(feature, layerName);\r\n                }\r\n                this._removeFeatureFromTmpLayer(feature);\r\n            }\r\n        };\r\n\r\n        // This is fired when a feature is deselected and fires the transaction process\r\n        this._keySelect = this._collectionModify.on('remove', (evt) => {\r\n            const feature = evt.element;\r\n\r\n            this._deselectEditFeature(feature);\r\n\r\n            checkIfFeatureIsChanged(feature);\r\n\r\n            this._editModeOff();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Trigger on removing a feature from the Edit layer\r\n     *\r\n     * @private\r\n     */\r\n    _onRemoveFeatureEvent(): void {\r\n        // If a feature is removed from the edit layer\r\n        this._keyRemove = getEditLayer()\r\n            .getSource()\r\n            .on('removefeature', (evt) => {\r\n                const feature = evt.feature;\r\n\r\n                if (!feature.get('_delete_')) {\r\n                    return;\r\n                }\r\n\r\n                if (this._keySelect) {\r\n                    unByKey(this._keySelect);\r\n                }\r\n\r\n                const layerName = feature.get('_layerName_');\r\n\r\n                const ll = this.getLayerByName(layerName);\r\n\r\n                ll.transactFeatures(TransactionType.Delete, feature);\r\n\r\n                this._deselectEditFeature(feature);\r\n                this._editModeOff();\r\n\r\n                if (this._keySelect) {\r\n                    setTimeout(() => {\r\n                        this._onDeselectFeatureEvent();\r\n                    }, 150);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _editModeOn(feature: Feature<Geometry>): void {\r\n        this._editFeatureOriginal = feature.clone();\r\n\r\n        activateMode(Modes.Edit);\r\n\r\n        // To refresh the style\r\n        getEditLayer().getSource().changed();\r\n\r\n        this._removeOverlayHelper(feature);\r\n\r\n        this._controlApplyDiscardChanges = new EditControlChangesEl(feature);\r\n\r\n        this._controlApplyDiscardChanges.on('cancel', ({ feature }) => {\r\n            feature.setGeometry(this._editFeatureOriginal.getGeometry());\r\n            removeFeatureFromEditList(feature);\r\n            this._collectionModify.remove(feature);\r\n        });\r\n\r\n        this._controlApplyDiscardChanges.on('apply', ({ feature }) => {\r\n            showLoading();\r\n            this._collectionModify.remove(feature);\r\n        });\r\n\r\n        this._controlApplyDiscardChanges.on('delete', ({ feature }) => {\r\n            this._deleteFeature(feature, true);\r\n        });\r\n\r\n        this._map.addControl(this._controlApplyDiscardChanges);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _editModeOff(): void {\r\n        activateMode(null);\r\n        this._map.removeControl(this._controlApplyDiscardChanges);\r\n    }\r\n\r\n    /**\r\n     * Remove a feature from the edit Layer and from the Geoserver\r\n     *\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _deleteFeature(feature: Feature<Geometry>, confirm: boolean): void {\r\n        const deleteEl = () => {\r\n            const features = Array.isArray(feature) ? feature : [feature];\r\n            features.forEach((feature) => {\r\n                feature.set('_delete_', true, true);\r\n                getEditLayer().getSource().removeFeature(feature);\r\n            });\r\n            this._collectionModify.clear();\r\n\r\n            const layerName = feature.get('_layerName_');\r\n            const layer = this._options.layers.find(\r\n                (layer) => layer.get(BaseLayerProperty.NAME) === layerName\r\n            );\r\n\r\n            if (layer instanceof WfsLayer) {\r\n                this._interactionWfsSelect.getFeatures().remove(feature);\r\n            }\r\n        };\r\n\r\n        if (confirm) {\r\n            const confirmModal = Modal.confirm(i18n.I18N.labels.confirmDelete, {\r\n                ...this._options.modal\r\n            });\r\n\r\n            confirmModal.show().once('dismiss', function (modal, ev, button) {\r\n                if (button && button.value) {\r\n                    deleteEl();\r\n                }\r\n            });\r\n        } else {\r\n            deleteEl();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a feature to the Edit Layer to allow editing, and creates an Overlay Helper to show options\r\n     *\r\n     * @param feature\r\n     * @param coordinate\r\n     * @param layerName\r\n     * @private\r\n     */\r\n    _addFeatureToEditMode(\r\n        feature: Feature<Geometry>,\r\n        coordinate: Coordinate = null,\r\n        layerName = null\r\n    ): void {\r\n        // For now, only allow one element at time\r\n        // @TODO: allow edit multiples elements\r\n        if (this._collectionModify.getLength()) return;\r\n\r\n        if (layerName) {\r\n            // Store the layer information inside the feature\r\n            feature.set('_layerName_', layerName);\r\n        }\r\n\r\n        const props = feature ? feature.getProperties() : '';\r\n\r\n        if (props) {\r\n            if (feature.getGeometry()) {\r\n                getEditLayer().getSource().addFeature(feature);\r\n                this._collectionModify.push(feature);\r\n\r\n                const overlay = new EditOverlay(feature, coordinate);\r\n\r\n                // @ts-expect-error\r\n                overlay.on('editFields', () => {\r\n                    this._editFields.show(feature);\r\n                });\r\n\r\n                // @ts-expect-error\r\n                overlay.on('editGeom', () => {\r\n                    this._editModeOn(feature);\r\n                });\r\n\r\n                this._map.addOverlay(overlay);\r\n\r\n                const layer = getStoredLayer(layerName);\r\n                if (layer) {\r\n                    layer.maybeLockFeature(feature.getId());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Activate/deactivate the draw mode\r\n     *\r\n     * @param layer\r\n     * @public\r\n     */\r\n    activateDrawMode(layer: WfsLayer | WmsLayer | false): void {\r\n        /**\r\n         *\r\n         * @param layer\r\n         * @private\r\n         */\r\n        const addDrawInteraction = (layer: WfsLayer | WmsLayer): void => {\r\n            this.activateEditMode(false);\r\n\r\n            // If already exists, remove\r\n            if (this._interactionDraw) {\r\n                this._map.removeInteraction(this._interactionDraw);\r\n            }\r\n\r\n            const geomDrawType = this._selectDraw.value;\r\n\r\n            this._interactionDraw = new Draw({\r\n                source: getEditLayer().getSource(),\r\n                type: geomDrawType as GeometryType,\r\n                style: (feature: Feature<Geometry>) => styleFunction(feature),\r\n                stopClick: true // To prevent firing a map/wms click\r\n            });\r\n\r\n            this._map.addInteraction(this._interactionDraw);\r\n\r\n            this._interactionDraw.on('drawstart', (evt) => {\r\n                super.dispatchEvent(evt);\r\n            });\r\n\r\n            this._interactionDraw.on('drawend', (evt) => {\r\n                const feature: Feature<Geometry> = evt.feature;\r\n                layer.transactFeatures(TransactionType.Insert, feature);\r\n                super.dispatchEvent(evt);\r\n            });\r\n        };\r\n\r\n        if (!this._interactionDraw && !layer) {\r\n            return;\r\n        }\r\n\r\n        if (layer) {\r\n            // If layer is set to invisible, show warning\r\n            if (!layer.getVisible()) {\r\n                return;\r\n            }\r\n\r\n            activateDrawButton();\r\n\r\n            this._viewport.classList.add('draw-mode');\r\n\r\n            addDrawInteraction(layer);\r\n        } else {\r\n            this._map.removeInteraction(this._interactionDraw);\r\n            this._viewport.classList.remove('draw-mode');\r\n        }\r\n\r\n        activateMode(layer ? Modes.Draw : null);\r\n    }\r\n\r\n    /**\r\n     * Activate/desactivate the edit mode\r\n     *\r\n     * @param bool\r\n     * @public\r\n     */\r\n    activateEditMode(bool = true): void {\r\n        if (bool) {\r\n            activateModeButtons();\r\n            this.activateDrawMode(false);\r\n        } else {\r\n            // Deselct features\r\n            this._collectionModify.clear();\r\n        }\r\n\r\n        if (this._interactionSelectModify) {\r\n            this._interactionSelectModify.setActive(bool);\r\n        }\r\n\r\n        this._interactionModify.setActive(bool);\r\n\r\n        if (this._interactionWfsSelect)\r\n            this._interactionWfsSelect.setActive(bool);\r\n    }\r\n\r\n    /**\r\n     * Remove the overlay helper atttached to a specify feature\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _removeOverlayHelper(feature: FeatureLike): void {\r\n        const featureId = feature.getId();\r\n\r\n        if (!featureId) {\r\n            return;\r\n        }\r\n\r\n        const overlay = this._map.getOverlayById(featureId);\r\n\r\n        if (!overlay) {\r\n            return;\r\n        }\r\n\r\n        this._map.removeOverlay(overlay);\r\n    }\r\n}\r\n\r\n/**\r\n * **_[interface]_** - Wfst Options specified when creating a Wfst instance\r\n *\r\n * Default values:\r\n * ```javascript\r\n * {\r\n *  layers: null,\r\n *  evtType: 'singleclick',\r\n *  active: true,\r\n *  showControl: true,\r\n *  language: 'en',\r\n *  i18n: {...}, // according to language selection\r\n *  uploadFormats: '.geojson,.json,.kml',\r\n *  processUpload: null,\r\n * }\r\n * ```\r\n */\r\ninterface Options {\r\n    /**\r\n     * Layers to be loaded from the geoserver\r\n     */\r\n    layers?: Array<WfsLayer | WmsLayer>;\r\n\r\n    /**\r\n     * Init active\r\n     */\r\n    active?: boolean;\r\n\r\n    /**\r\n     * The click event to allow selection of Features to be edited\r\n     */\r\n    evtType?: 'singleclick' | 'dblclick';\r\n\r\n    /**\r\n     * Show/hide the control map\r\n     */\r\n    showControl?: boolean;\r\n\r\n    /**\r\n     * Modal configuration\r\n     */\r\n    modal?: {\r\n        animateClass?: string;\r\n        animateInClass?: string;\r\n        transition?: number;\r\n        backdropTransition?: number;\r\n        templates?: {\r\n            dialog?: string | HTMLElement;\r\n            headerClose?: string | HTMLElement;\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Language to be used\r\n     */\r\n    language?: 'es' | 'en' | 'zh';\r\n\r\n    /**\r\n     * Custom translations\r\n     */\r\n    i18n?: I18n;\r\n\r\n    /**\r\n     * Show/hide the upload button\r\n     */\r\n    showUpload?: boolean;\r\n\r\n    /**\r\n     * Accepted extension formats on upload\r\n     * Example: \".json,.geojson\"\r\n     */\r\n    uploadFormats?: string;\r\n\r\n    /**\r\n     * Triggered to allow implement custom functions or to parse other formats than default\r\n     * by filtering the extension. If this doesn't return features, the default function\r\n     * will be used to extract them.\r\n     */\r\n    processUpload?(file: File): Array<Feature<Geometry>>;\r\n}\r\n\r\n/**\r\n * **_[interface]_** - Parameters to create the layers and connect to the GeoServer\r\n *\r\n * You can use all the parameters supported by OpenLayers\r\n *\r\n *  Default values:\r\n * ```javascript\r\n * {\r\n *  name: null,\r\n *  geoserver: null,\r\n *  label: null, // `name` if not provided\r\n *  strategy: all,\r\n *  geoserverVendor: null\r\n * }\r\n * ```\r\n */\r\ninterface LayerOptions extends Omit<VectorLayerOptions<any>, 'source'> {\r\n    /**\r\n     * Layer name in the GeoServer\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * Geoserver Object\r\n     */\r\n    geoserver: Geoserver;\r\n\r\n    /**\r\n     * Label to be displayed in the widget control\r\n     */\r\n    label?: string;\r\n\r\n    /**\r\n     * Available geoserver options\r\n     */\r\n    geoserverVendor?: WfsGeoserverVendor | WmsGeoserverVendor;\r\n\r\n    /**\r\n     * Strategy function for loading features.\r\n     * Only for WFS\r\n     * By default `all` strategy is used\r\n     */\r\n    strategy?: LoadingStrategy;\r\n\r\n    /**\r\n     * Triggered before inserting new features to the Geoserver.\r\n     * Use this to insert custom properties, modify the feature, etc.\r\n     */\r\n    beforeTransactFeature?(\r\n        feature: Feature<Geometry>,\r\n        transaction: TransactionType\r\n    ): Feature<Geometry>;\r\n}\r\nclass WfstEvent extends BaseEvent {\r\n    public data: IGeoserverDescribeFeatureType;\r\n    public layer: WfsLayer | WmsLayer;\r\n\r\n    constructor(options: {\r\n        type: WfstEventTypes;\r\n        layer: WfsLayer | WmsLayer;\r\n        data: IGeoserverDescribeFeatureType;\r\n    }) {\r\n        super(options.type);\r\n        this.layer = options.layer;\r\n        this.data = options.data;\r\n    }\r\n}\r\n\r\ntype WfstEventTypes = 'describeFeatureType';\r\n\r\nexport {\r\n    Options,\r\n    WfstEventTypes,\r\n    WfstEvent,\r\n    I18n,\r\n    LayerOptions,\r\n    Geoserver,\r\n    WmsLayer,\r\n    WfsLayer\r\n};\r\n","import { I18N } from './modules/i18n';\r\nimport { Options } from './ol-wfst';\r\n\r\nexport const DEFAULT_LANGUAGE = 'en';\r\n\r\nexport const getDefaultOptions = (): Options => {\r\n    return {\r\n        layers: null,\r\n        evtType: 'singleclick',\r\n        active: true,\r\n        showControl: true,\r\n        language: DEFAULT_LANGUAGE,\r\n        uploadFormats: '.geojson,.json,.kml',\r\n        processUpload: null,\r\n        modal: {\r\n            animateClass: 'fade',\r\n            animateInClass: 'show',\r\n            transition: 300,\r\n            backdropTransition: 150,\r\n            templates: {\r\n                dialog: '<div class=\"modal-dialog modal-dialog-centered\"></div>',\r\n                headerClose: `<button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"${I18N.labels.close}\"><span aria-hidden=\"true\">×</span></button>`\r\n            }\r\n        }\r\n    };\r\n};\r\n","import Wfst from './ol-wfst';\r\nimport WfsLayer from './WfsLayer';\r\nimport WmsLayer from './WmsLayer';\r\nimport Geoserver from './Geoserver';\r\n\r\nconst utils = {\r\n    WfsLayer,\r\n    WmsLayer,\r\n    Geoserver\r\n};\r\n\r\nObject.assign(Wfst, utils);\r\nexport default Wfst;\r\n"],"names":["_factory","_defaults","Object","freeze","el","animate","animateClass","animateInClass","appendTo","backdrop","keyboard","title","header","content","footer","buttons","headerClose","construct","transition","backdropTransition","_buttons","deepFreeze","obj","k","Array","isArray","forEach","v","dialog","text","value","attr","class","alert","confirm","_templates","container","body","data","prop","prefix","elData","dataAttr","getAttribute","build","html","all","nodeName","replace","document","createElement","innerHTML","childNodes","getPath","node","nodes","parentNode","push","Modal","EventEmitter","templates","this","_baseTemplates","assign","_baseButtons","options","_baseOptions","version","message","_options","question","constructor","super","id","Math","random","toString","_html","_events","_visible","_pointerInContent","querySelector","_scrollbarWidth","inner","width","outerWidth","outer","style","visibility","appendChild","offsetWidth","overflow","removeChild","calcScrollbarWidth","Error","_render","_mapDom","o","t","classList","add","_setHeader","_setContent","_setFooter","contains","outerHTML","ineerHTML","children","length","button","setAttribute","j","_setEvents","keydownHandler","_handleKeydownEvent","bind","addEventListener","mousedownHandler","_handleMousedownEvent","clickHandler","_handleClickEvent","resizeHandler","_handleResizeEvent","window","e","target","every","tagName","emit","hide","which","_resize","show","_checkScrollbar","_setScrollbar","display","scrollTop","once","setTimeout","_backdrop","toggle","modalIsOverflowing","scrollHeight","documentElement","clientHeight","paddingLeft","bodyIsOverflowing","paddingRight","contCList","remove","_removeEvents","originalBodyPad","removeEventListener","clientWidth","innerWidth","basePadding","parseInt","isError","Set","parseError","geoserverResponse","exceptions","map","join","showError","msg","originalError","layerName","has","err_msg","al","on","delete","en","labels","select","addElement","editElement","save","cancel","apply","upload","editMode","confirmDelete","geomTypeNotSupported","editFields","editGeom","selectDrawType","uploadToLayer","uploadFeatures","validFeatures","invalidFeatures","loading","toggleVisibility","close","errors","capabilities","wfst","layer","layerNotFound","layerNotVisible","noValidGeometry","geoserver","badFormat","badFile","lockFeature","transaction","getFeatures","langs","es","zh","I18N","loadingDiv","showLoading","bool","copyProps","dest","src","exclude","props","getOwnPropertyDescriptors","defineProperties","protoChain","currentChain","proto","getPrototypeOf","hardMixProtos","ingredients","_a","base","objs","commonProto","protoChains","protos","pop","potentialCommonProto","nearestCommonProto","prototype","mixedProto","create","visitedProtos","i","newProto","indexOf","unique","arr","filter","mixins","Map","getMixinsForClass","clazz","get","mergeObjectsOfDecorators","o1","o2","_b","allKeys","getOwnPropertyNames","mergedObject","key","mergePropertyAndMethodDecorators","d1","d2","_c","_d","property","method","decorators","deepDecoratorSearch","classes","decoratorsForClassChain","allClasses","frontier","size","newClasses","c","newClass","findAllConstituentClasses","reduce","_e","_f","static","instance","mergeDecorators","Mixin","constructors","prototypes","MixedClass","args","setPrototypeOf","DecoratedMixedClass","classDecorators","decorator","result","applyPropAndMethodDecorators","mixedClass","constituents","set","propAndMethodDecorators","propDecorators","methodDecorators","getOwnPropertyDescriptor","GeometryType","TransactionType","layerToInsertElements","mode","Modes","activateMode","m","getMode","editedFeatures","mapLayers","getMap","setActiveLayerToInsertEls","getActiveLayerToInsertEls","getStoredMapLayers","getStoredLayer","addFeatureToEditedList","feature","String","getId","removeFeatureFromEditList","isFeatureEdited","BaseLayer","Layer","_init","getGeoserver","isLoaded","getAndUpdateDescribeFeatureType","async","BaseLayerProperty","NAME","layerLabel","LABEL","params","URLSearchParams","service","getAdvanced","describeFeatureTypeVersion","request","typeName","outputFormat","url_fetch","getUrl","response","fetch","headers","getHeaders","credentials","getCredentials","ok","json","targetNamespace","properties","featureTypes","geom","find","type","_parsed","namespace","geomType","localType","geomField","name","DESCRIBEFEATURETYPE","err","console","error","isVisibleByZoom","getView","getZoom","getMinZoom","transactFeatures","features","transact","insertFeatures","Insert","maybeLockFeature","featureId","getUseLockFeature","hasLockFeature","GEOSERVER","getDescribeFeatureType","WfsSource","VectorSource","format","GeoJSON","loader","extent","resolution","projection","success","failure","strategy","bbox","extentGeoServer","transformExtent","getCode","geoServerAdvanced","urlParams","geoserverUrl","getFormat","readFeatures","featureProjection","dataProjection","addFeatures","removeLoadedExtent","SERVICE","REQUEST","OUTPUTFORMAT","EXCEPTIONS","getFeatureVersion","WfsLayer","label","minZoom","_loadingCount","_loadedCount","beforeTransactFeature","source","geoserverVendor","dispatchEvent","setSource","geoserverOptions","keys","param","refresh","getSource","setCustomParam","paramName","TileState","WmsSource","TileWMS","url","serverType","TILED","LAYERS","tileLoadFunction","tile","blob","parsedError","Promise","resolve","reader","FileReader","onloadend","JSON","parse","readAsText","getImage","URL","createObjectURL","setState","WmsLayer","_getFullResGeometryById","featuresId","queryParams","VERSION","INFO_FORMAT","TYPENAME","MAXFEATURES","SRSNAME","getProjection","FEATUREID","getUrls","status","_parseFeaturesFromResponse","_formatGeoJSON","_getFeaturesByClickEvent","evt","coordinate","view","buffer","getResolution","BUFFER","FEATURE_COUNT","f","fullResList","getParams","Date","getMilliseconds","updateParams","attrs","elem","DocumentFragment","entries","undefined","startsWith","toLowerCase","substr","child","append","nodeType","resetStateButtons","activeBtn","LayersControl","Observable","uploads","uploadFormats","_uploads","_uploadFormats","addLayerEl","checked","input","myPragma","className","onChange","_layerChangeHandler","layerDom","getVisible","onClick","_visibilityClickHandler","htmlFor","Event","_changeStateSelect","geomDrawTypeSelected","setSelectState","from","selectDraw","option","selected","disabled","includes","drawType","geomLayer","GeometryCollection","LineString","LinearRing","Circle","Polygon","parentDiv","currentTarget","closest","dataset","setVisible","render","accept","process","selectedValue","Point","MultiPoint","MultiLineString","MultiPolygon","editLayer","VectorLayer","zIndex","getEditLayer","Uploads","_processUpload","processUpload","_formatWFS","WFS","_formatKml","KML","extractStyles","showPointNames","_xs","XMLSerializer","file","files","extension","split","string","_fileReader","invalidFeaturesCount","validFeaturesCount","featuresToInsert","_checkGeometry","_fixGeometry","VectorSourceEvent","_initModal","reject","fileData","geomTypeLayer","getGeometry","getType","coords","getCoordinates","setGeometry","geomTypeFeature","modal","event","action","clear","deepObjectAssign","sources","s_val","t_val","EditControlChangesEl","Control","element","styleFunction","getVertexs","geometry","getGeometries","coordinates","flatCoordinates","flat","Edit","Style","image","CircleStyle","radius","fill","Fill","color","Draw","stroke","Stroke","EditFieldsModal","_modal","querySelectorAll","field","_feature","changed","getProperties","dataSchema","NAMESPACE_URIS","PARSERS","makeStructureNS","ServiceIdentification","makeObjectPropertySetter","objectStack","pushParseAndPop","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","FeatureTypeList","FEATURE_TYPE_LIST_PARSERS","Filter_Capabilities","FILTER_CAPABILITIES_PARSERS","Title","readString","Abstract","Keywords","readKeywordList","ServiceType","ServiceTypeVersion","Fees","AccessConstraints","ProviderName","ServiceContact","SERVICE_CONTACT_PARSERS","Operation","makeObjectPropertyPusher","operation","OPERATION_PARSERS","readOperation","Constraint","readNamedConstraint","IndividualName","PositionName","ContactInfo","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","ADDRESS_PARSERS","Voice","Facsimile","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","FeatureType","makeArrayPusher","FEATURE_TYPE_PARSERS","Name","DefaultCRS","WGS84BoundingBox","WGS84_BOUNDINGBOX_PARSERS","MetadataURL","readHref","DCP","DCP_PARSERS","Parameter","parameter","PARAMETER_PARSERS","readParameter","AllowedValues","readValueList","CONSTRAINT_PARSERS","NoValues","DefaultValue","HTTP_PARSERS","Get","Post","LowerCorner","readStringCoords","UpperCorner","HTTP","KEYWORDLIST_PARSERS","Keyword","VALUELIST_PARSERS","Value","Conformance","CONFORMANCE_PARSERS","Id_Capabilities","ID_CAPABILITIES_PARSERS","Scalar_Capabilities","SCALAR_CAPABILITIES_PARSERS","Spatial_Capabilities","SPATIAL_CAPABILITIES_PARSERS","Temporal_Capabilities","TEMPORAL_CAPABILITIES_PARSERS","Functions","FUNCTIONS_PARSERS","ResourceIdentifier","LogicalOperators","LOGICAL_OPERATORS_PARSERS","ComparisonOperators","COMPARISON_OPERATORS_PARSERS","GeometryOperands","GEOMETRY_OPERANDS_PARSERS","SpatialOperators","SPATIAL_OPERATORS_PARSERS","TemporalOperands","TEMPORAL_OPERANDS_PARSERS","TemporalOperators","TEMPORAL_OPERATORS_PARSERS","Function","func","FUNCTION_PARSERS","readFunction","Returns","Arguments","ARGUMENTS_PARSERS","Argument","argument","ARGUMENT_PARSERS","readArgument","Type","LogicalOperator","readNamedOnly","ComparisonOperator","GeometryOperand","SpatialOperator","TemporalOperand","TemporalOperator","constraint","readConstraint","getAllTextContent","Number","parser","XML","readFromNode","trim","wfsCapabilityObject","GeoserverProperty","EditOverlay","Overlay","position","getCenter","getExtent","positioning","offset","stopEvent","alt","controlElement","Wfst","_map","_initialized","lang","customI18n","i18n.setLang","language","i18n","defaultOptions","layers","evtType","active","showControl","_controlWidgetToolsDiv","_editFields","getLayers","values","getLayerByName","_initMapAndLayers","layerRendered","layersNumber","domEl","_layersControl","ISVISIBLE","_currentZoom","WfstEvent","addLayer","setMapLayers","_createMapElements","opts","_view","_viewport","getViewport","activateEditMode","editLayerSource","fit","getSize","maxZoom","padding","_collectionModify","dispose","_deleteFeature","_addMapEvents","_prepareEditLayer","_addInteractions","_addInteractionHandlers","_addMapControl","prepareWfsInteraction","Collection","_interactionWfsSelect","Select","hitTolerance","toggleCondition","never","addInteraction","deselected","mapBrowserEvent","getLayer","removeFeature","_addFeatureToEditMode","prepareWmsInteraction","_interactionSelectModify","removeCondition","_keyClickWms","hasFeatureAtPixel","pixel","_interactionModify","Modify","condition","primaryAction","_interactionSnap","Snap","selectedFeatures","keyboardEvents","_lastZoom","item","_onDeselectFeatureEvent","_onRemoveFeatureEvent","showUpload","activateDrawMode","i18n.I18N","controlEl","_selectDraw","_deselectEditFeature","_removeOverlayHelper","_restoreFeatureToLayer","addFeature","_removeFeatureFromTmpLayer","checkIfFeatureIsChanged","Update","_keySelect","_editModeOff","_keyRemove","unByKey","Delete","_editModeOn","_editFeatureOriginal","clone","_controlApplyDiscardChanges","addControl","removeControl","deleteEl","ev","getLength","overlay","addOverlay","addDrawInteraction","_interactionDraw","removeInteraction","geomDrawType","stopClick","btn","activateDrawButton","activateModeButtons","setActive","getOverlayById","removeOverlay","BaseEvent","utils","Geoserver","BaseObject","defaults","advanced","getCapabilitiesVersion","lockFeatureVersion","wfsTransactionVersion","lockFeatureParams","expiry","lockId","releaseAction","useLockFeature","setAdvanced","setHeaders","setCredentials","setUrl","setUseLockFeature","_countRequests","_insertFeatures","_updateFeatures","_deleteFeatures","getAndUpdateCapabilities","_checkGeoserverCapabilities","getCapabilities","CAPABILITIES","getParsedCapabilities","PARSED_CAPABILITIES","opt_silent","HEADERS","CREDENTIALS","ADVANCED","hasTransaction","HASTRASNACTION","HASLOCKFEATURE","USELOCKFEATURE","ISLOADED","getState","state_","DOMParser","parseFromString","parsedCapabilities","read","operations","HASDESCRIBEFEATURETYPE","getElementsByTagName","transactionType","clonedFeatures","geoLayer","_cloneFeature","cloneGeom","_transformGeoemtryCollectionToGeometries","_transformCircleToPolygon","numberRequest","srs","describeFeatureType","featureNS","featureType","srsName","featurePrefix","nativeElements","writeTransaction","payload","serializeToString","gmemberIn","gmemberOut","responseStr","parseResponse","readTransactionResponse","wlayer","findError","match","_removeFeatures","geomConverted","fromCircle","featureProperties","boundedBy","_layerName_","Feature","setId","retry","LockId","featureid","dataParsed","code"],"mappings":"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","x_google_ignoreList":[0,7,13,28]}