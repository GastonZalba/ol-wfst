{"version":3,"file":"ol-wfst.min.js","sources":["../node_modules/modal-vanilla/lib/modal.js","../src/modules/errors.ts","../src/modules/i18n/en.ts","../src/modules/i18n/index.ts","../src/modules/i18n/es.ts","../src/modules/i18n/zh.ts","../src/modules/loading.ts","../node_modules/ts-mixer/dist/esm/index.js","../src/@enums.ts","../src/modules/state.ts","../src/modules/base/BaseLayer.ts","../src/modules/base/WfsSource.ts","../src/WfsLayer.ts","../node_modules/ol/TileState.js","../src/modules/base/WmsSource.ts","../src/WmsLayer.ts","../node_modules/ol/events/Event.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Target.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/util.js","../node_modules/ol/Object.js","../node_modules/ol/dom.js","../node_modules/ol/MapEventType.js","../node_modules/ol/Overlay.js","../node_modules/ol/extent.js","../src/myPragma.ts","../src/modules/LayersControl.tsx","../src/assets/images/visibilityOn.svg","../src/assets/images/visibilityOff.svg","../src/assets/images/upload.svg","../src/assets/images/draw.svg","../src/modules/editLayer.ts","../src/modules/Uploads.ts","../src/modules/helpers.ts","../src/modules/EditControlChanges.tsx","../src/modules/styleFunction.ts","../src/modules/EditFieldsModal.ts","../src/Geoserver.ts","../src/modules/EditOverlay.tsx","../src/assets/images/editFields.svg","../src/assets/images/editGeom.svg","../src/ol-wfst.ts","../src/defaults.ts","../src/index-umd.js"],"sourcesContent":["/**\n * Vanilla JS Modal compatible with Bootstrap\n * modal-vanilla 0.12.0 <https://github.com/KaneCohen/modal-vanilla>\n * Copyright 2020 Kane Cohen <https://github.com/KaneCohen>\n * Available under BSD-3-Clause license\n */\nimport EventEmitter from 'events';\n\nlet _factory = null;\n\nconst _defaults = Object.freeze({\n  el: null,               // Existing DOM element that will be 'Modal-ized'.\n  animate: true,          // Show Modal using animation.\n  animateClass: 'fade',   //\n  animateInClass: 'show', //\n  appendTo: 'body',       // DOM element to which constructed Modal will be appended.\n  backdrop: true,         // Boolean or 'static', Show Modal backdrop blocking content.\n  keyboard: true,         // Close modal on esc key.\n  title: false,           // Content of the title in the constructed dialog.\n  header: true,           // Show header content.\n  content: false,         // Either string or an HTML element.\n  footer: true,           // Footer content. By default will use buttons.\n  buttons: null,          //\n  headerClose: true,      // Show close button in the header.\n  construct: false,       // Creates new HTML with a given content.\n  transition: 300,        //\n  backdropTransition: 150 //\n});\n\nconst _buttons = deepFreeze({\n  dialog: [\n    {text: 'Cancel',\n      value: false,\n      attr: {\n        'class': 'btn btn-default',\n        'data-dismiss': 'modal'\n      }\n    },\n    {text: 'OK',\n      value: true,\n      attr: {\n        'class': 'btn btn-primary',\n        'data-dismiss': 'modal'\n      }\n    }\n  ],\n  alert: [\n    {text: 'OK',\n      attr: {\n        'class': 'btn btn-primary',\n        'data-dismiss': 'modal'\n      }\n    }\n  ],\n  confirm: [\n    {text: 'Cancel',\n      value: false,\n      attr: {\n        'class': 'btn btn-default',\n        'data-dismiss': 'modal'\n      }\n    },\n    {text: 'OK',\n      value: true,\n      attr: {\n        'class': 'btn btn-primary',\n        'data-dismiss': 'modal'\n      }\n    }\n  ]\n});\n\nconst _templates = {\n  container: '<div class=\"modal\"></div>',\n  dialog: '<div class=\"modal-dialog\"></div>',\n  content: '<div class=\"modal-content\"></div>',\n  header: '<div class=\"modal-header\"></div>',\n  headerClose: '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>',\n  body: '<div class=\"modal-body\"></div>',\n  footer: '<div class=\"modal-footer\"></div>',\n  backdrop: '<div class=\"modal-backdrop\"></div>'\n};\n\nfunction deepFreeze(obj) {\n  for (let k in obj) {\n    if (Array.isArray(obj[k])) {\n      obj[k].forEach(v => {\n        deepFreeze(v);\n      });\n    } else if (obj[k] !== null && typeof obj[k] === 'object') {\n      Object.freeze(obj[k]);\n    }\n  }\n  return Object.freeze(obj);\n}\n\nfunction guid() {\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16) +\n    (((1 + Math.random()) * 0x10000) | 0).toString(16);\n}\n\nfunction data(el, prop, value) {\n let prefix = 'data';\n let elData = el[prefix] || {};\n if (typeof value === 'undefined') {\n   if (el[prefix] && el[prefix][prop]) {\n     return el[prefix][prop];\n   } else {\n     var dataAttr = el.getAttribute(`${prefix}-${prop}`);\n     if (typeof dataAttr !== 'undefined') {\n       return dataAttr;\n     }\n     return null;\n   }\n } else {\n   elData[prop] = value;\n   el[prefix] = elData;\n   return el;\n }\n}\n\nfunction build(html, all) {\n  if (html.nodeName) return html;\n  html = html.replace(/(\\t|\\n$)/g, '');\n\n  if (!_factory) {\n    _factory = document.createElement('div');\n  }\n\n  _factory.innerHTML = '';\n  _factory.innerHTML = html;\n  if (all === true) {\n    return _factory.childNodes;\n  } else {\n    return _factory.childNodes[0];\n  }\n}\n\nfunction calcScrollbarWidth() {\n  let inner;\n  let width;\n  let outerWidth;\n  let outer = document.createElement('div');\n  Object.assign(outer.style, {\n    visibility: 'hidden',\n    width: '100px'\n  });\n  document.body.appendChild(outer);\n\n  outerWidth = outer.offsetWidth;\n  outer.style.overflow = 'scroll';\n\n  inner = document.createElement('div');\n  inner.style.width = '100%';\n  outer.appendChild(inner);\n\n  width = outerWidth - inner.offsetWidth;\n  document.body.removeChild(outer);\n\n  return width;\n}\n\nfunction getPath(node) {\n  let nodes = [node];\n  while (node.parentNode) {\n    node = node.parentNode;\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nclass Modal extends EventEmitter {\n  static set templates(templates) {\n    this._baseTemplates = templates;\n  }\n\n  static get templates() {\n    return Object.assign({}, _templates, Modal._baseTemplates || {});\n  }\n\n  static set buttons(buttons) {\n    this._baseButtons = buttons;\n  }\n\n  static get buttons() {\n    return Object.assign({}, _buttons, Modal._baseButtons || {});\n  }\n\n  static set options(options) {\n    this._baseOptions = options;\n  }\n\n  static get options() {\n    return Object.assign({}, _defaults, Modal._baseOptions || {});\n  }\n\n  static get version() {\n    return '0.12.0';\n  }\n\n  static alert(message, _options = {}) {\n    let options = Object.assign({},\n      _defaults,\n      {\n        title:  message,\n        content: false,\n        construct: true,\n        headerClose: false,\n        buttons: Modal.buttons.alert\n      },\n      _options\n    );\n\n    return new Modal(options);\n  }\n\n  static confirm(question, _options = {}) {\n    let options = Object.assign({},\n      _defaults,\n      {\n        title:  question,\n        content: false,\n        construct: true,\n        headerClose: false,\n        buttons: Modal.buttons.confirm\n      },\n      _options\n    );\n\n    return new Modal(options);\n  }\n\n  constructor(options = {}) {\n    super();\n\n    this.id = guid();\n    this.el = null;\n    this._html = {};\n    this._events = {};\n    this._visible = false;\n    this._pointerInContent = false;\n    this._options = Object.assign({}, Modal.options, options);\n    this._templates = Object.assign({}, Modal.templates, options.templates || {});\n    this._html.appendTo = document.querySelector(this._options.appendTo);\n    this._scrollbarWidth = calcScrollbarWidth();\n\n    if (this._options.buttons === null) {\n      this._options.buttons = Modal.buttons.dialog;\n    }\n\n    if (this._options.el) {\n      let el = this._options.el;\n      if (typeof this._options.el == 'string') {\n        el = document.querySelector(this._options.el);\n        if (! el) {\n          throw new Error(`Selector: DOM Element ${this._options.el} not found.`);\n        }\n      }\n      data(el, 'modal', this);\n      this.el = el;\n    } else {\n      this._options.construct = true;\n    }\n\n    if (this._options.construct) {\n      this._render();\n    } else {\n      this._mapDom();\n    }\n  }\n\n  _render() {\n    let html = this._html;\n    let o = this._options;\n    let t = this._templates;\n    let animate = o.animate ? o.animateClass : false;\n\n    html.container = build(t.container);\n    html.dialog = build(t.dialog);\n    html.content = build(t.content);\n    html.header = build(t.header);\n    html.headerClose = build(t.headerClose);\n    html.body = build(t.body);\n    html.footer = build(t.footer);\n    if (animate) html.container.classList.add(animate);\n\n    this._setHeader();\n    this._setContent();\n    this._setFooter();\n\n    this.el = html.container;\n\n    html.dialog.appendChild(html.content);\n    html.container.appendChild(html.dialog);\n\n    return this;\n  }\n\n  _mapDom() {\n    let html = this._html;\n    let o = this._options;\n\n    if (this.el.classList.contains(o.animateClass)) {\n      o.animate = true;\n    }\n\n    html.container = this.el;\n    html.dialog = this.el.querySelector('.modal-dialog');\n    html.content = this.el.querySelector('.modal-content');\n    html.header = this.el.querySelector('.modal-header');\n    html.headerClose = this.el.querySelector('.modal-header .close');\n    html.body = this.el.querySelector('.modal-body');\n    html.footer = this.el.querySelector('.modal-footer');\n\n    this._setHeader();\n    this._setContent();\n    this._setFooter();\n\n    return this;\n  }\n\n  _setHeader() {\n    let html = this._html;\n    let o = this._options;\n\n    if (o.header && html.header) {\n      if (o.title.nodeName) {\n        html.header.innerHTML = o.title.outerHTML;\n      } else if (typeof o.title === 'string') {\n        html.header.innerHTML = `<h4 class=\"modal-title\">${o.title}</h4>`;\n      }\n      // Add header close button only to constructed modals.\n      if (this.el === null && html.headerClose && o.headerClose) {\n        html.header.appendChild(html.headerClose);\n      }\n      if (o.construct) {\n        html.content.appendChild(html.header);\n      }\n    }\n  }\n\n  _setContent() {\n    let html = this._html;\n    let o = this._options;\n\n    if (o.content && html.body) {\n      if (typeof o.content === 'string') {\n        html.body.innerHTML = o.content;\n      } else {\n        html.body.innerHTML = o.content.outerHTML;\n      }\n      if (o.construct) {\n        html.content.appendChild(html.body);\n      }\n    }\n  }\n\n  _setFooter() {\n    let html = this._html;\n    let o = this._options;\n\n    if (o.footer && html.footer) {\n      if (o.footer.nodeName) {\n        html.footer.ineerHTML = o.footer.outerHTML;\n      } else if (typeof o.footer === 'string') {\n        html.footer.innerHTML = o.footer;\n      } else if (! html.footer.children.length) {\n        o.buttons.forEach((button) => {\n          let el = document.createElement('button');\n          data(el, 'button', button);\n          el.innerHTML = button.text;\n          el.setAttribute('type', 'button');\n          for (let j in button.attr) {\n            el.setAttribute(j, button.attr[j]);\n          }\n          html.footer.appendChild(el);\n        });\n      }\n      if (o.construct) {\n        html.content.appendChild(html.footer);\n      }\n    }\n\n  }\n\n  _setEvents() {\n    let o = this._options;\n    let html = this._html;\n\n    this._events.keydownHandler = this._handleKeydownEvent.bind(this);\n    document.body.addEventListener('keydown',\n      this._events.keydownHandler\n    );\n\n    this._events.mousedownHandler = this._handleMousedownEvent.bind(this);\n    html.container.addEventListener('mousedown',\n      this._events.mousedownHandler\n    );\n\n    this._events.clickHandler = this._handleClickEvent.bind(this);\n    html.container.addEventListener('click',\n      this._events.clickHandler\n    );\n\n    this._events.resizeHandler = this._handleResizeEvent.bind(this);\n    window.addEventListener('resize',\n      this._events.resizeHandler\n    );\n  }\n\n  _handleMousedownEvent(e) {\n    this._pointerInContent = false;\n    let path = getPath(e.target);\n    path.every(node => {\n      if (node.classList && node.classList.contains('modal-content')) {\n        this._pointerInContent = true;\n        return false;\n      }\n      return true;\n    });\n  }\n\n  _handleClickEvent(e) {\n    let path = getPath(e.target);\n    path.every(node => {\n      if (node.tagName === 'HTML') {\n        return false;\n      }\n      if (this._options.backdrop !== true && node.classList.contains('modal')) {\n        return false;\n      }\n      if (node.classList.contains('modal-content')) {\n        return false;\n      }\n      if (node.getAttribute('data-dismiss') === 'modal') {\n        this.emit('dismiss', this, e, data(e.target, 'button'));\n        this.hide();\n        return false;\n      }\n\n      if (!this._pointerInContent && node.classList.contains('modal')) {\n        this.emit('dismiss', this, e, null);\n        this.hide();\n        return false;\n      }\n      return true;\n    });\n\n    this._pointerInContent = false;\n  }\n\n  _handleKeydownEvent(e) {\n    if (e.which === 27 && this._options.keyboard) {\n      this.emit('dismiss', this, e, null);\n      this.hide();\n    }\n  }\n\n  _handleResizeEvent(e) {\n    this._resize();\n  }\n\n  show() {\n    let o = this._options;\n    let html = this._html;\n    this.emit('show', this);\n\n    this._checkScrollbar();\n    this._setScrollbar();\n    document.body.classList.add('modal-open');\n\n    if (o.construct) {\n      html.appendTo.appendChild(html.container);\n    }\n\n    html.container.style.display = 'block';\n    html.container.scrollTop = 0;\n\n    if (o.backdrop !== false) {\n      this.once('showBackdrop', () => {\n        this._setEvents();\n\n        if (o.animate) html.container.offsetWidth; // Force reflow\n\n        html.container.classList.add(o.animateInClass);\n\n        setTimeout(() => {\n          this._visible = true;\n          this.emit('shown', this);\n        }, o.transition);\n      });\n      this._backdrop();\n    } else {\n      this._setEvents();\n\n      if (o.animate) html.container.offsetWidth; // Force reflow\n\n      html.container.classList.add(o.animateInClass);\n\n      setTimeout(() => {\n        this._visible = true;\n        this.emit('shown', this);\n      }, o.transition);\n    }\n    this._resize();\n\n    return this;\n  }\n\n  toggle() {\n    if (this._visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  _resize() {\n    var modalIsOverflowing =\n      this._html.container.scrollHeight > document.documentElement.clientHeight;\n\n    this._html.container.style.paddingLeft =\n      ! this.bodyIsOverflowing && modalIsOverflowing ? this._scrollbarWidth + 'px' : '';\n\n    this._html.container.style.paddingRight =\n      this.bodyIsOverflowing && ! modalIsOverflowing ? this._scrollbarWidth + 'px' : '';\n  }\n\n  _backdrop() {\n    let html = this._html;\n    let t = this._templates;\n    let o = this._options;\n    let animate = o.animate ? o.animateClass : false;\n\n    html.backdrop = build(t.backdrop);\n    if (animate) html.backdrop.classList.add(animate);\n    html.appendTo.appendChild(html.backdrop);\n\n    if (animate) html.backdrop.offsetWidth;\n\n    html.backdrop.classList.add(o.animateInClass);\n\n    setTimeout(() => {\n      this.emit('showBackdrop', this);\n    }, this._options.backdropTransition);\n  }\n\n  hide() {\n    let html = this._html;\n    let o = this._options;\n    let contCList = html.container.classList;\n    this.emit('hide', this);\n\n    contCList.remove(o.animateInClass);\n\n    if (o.backdrop) {\n      let backCList = html.backdrop.classList;\n      backCList.remove(o.animateInClass);\n    }\n\n    this._removeEvents();\n\n    setTimeout(() => {\n      document.body.classList.remove('modal-open');\n      document.body.style.paddingRight = this.originalBodyPad;\n    }, o.backdropTransition);\n\n    setTimeout(() => {\n      if (o.backdrop) {\n        html.backdrop.parentNode.removeChild(html.backdrop);\n      }\n      html.container.style.display = 'none';\n\n      if (o.construct) {\n        html.container.parentNode.removeChild(html.container);\n      }\n\n      this._visible = false;\n      this.emit('hidden', this);\n    }, o.transition);\n\n    return this;\n  }\n\n  _removeEvents() {\n    if (this._events.keydownHandler) {\n      document.body.removeEventListener('keydown',\n        this._events.keydownHandler\n      );\n    }\n\n    this._html.container.removeEventListener('mousedown',\n      this._events.mousedownHandler\n    );\n\n    this._html.container.removeEventListener('click',\n      this._events.clickHandler\n    );\n\n    window.removeEventListener('resize',\n      this._events.resizeHandler\n    );\n  }\n\n  _checkScrollbar() {\n    this.bodyIsOverflowing = document.body.clientWidth < window.innerWidth;\n  }\n\n  _setScrollbar() {\n    this.originalBodyPad = document.body.style.paddingRight || '';\n    if (this.bodyIsOverflowing) {\n      let basePadding = parseInt(this.originalBodyPad || 0, 10);\n      document.body.style.paddingRight = basePadding + this._scrollbarWidth + 'px';\n    }\n  }\n}\n\nexport default Modal;\n","// External\r\nimport Modal from 'modal-vanilla';\r\n\r\nimport { Options } from '../ol-wfst';\r\nimport { ExceptionGeoserver, IGeoserverDescribeFeatureType } from '../@types';\r\nlet options = {};\r\n\r\n// Store layerNames that has errors\r\nconst isError = new Set();\r\n\r\nexport const initModal = (opts: Options['modal']) => {\r\n    options = opts;\r\n};\r\n\r\nexport const parseError = (\r\n    geoserverResponse: IGeoserverDescribeFeatureType\r\n) => {\r\n    if ('exceptions' in geoserverResponse) {\r\n        return (geoserverResponse.exceptions as ExceptionGeoserver[])\r\n            .map((e) => e.text)\r\n            .join(',');\r\n    } else {\r\n        return '';\r\n    }\r\n};\r\n\r\n/**\r\n * Show modal with errors\r\n *\r\n * @param msg\r\n * @private\r\n */\r\nexport const showError = (\r\n    msg: string,\r\n    originalError: Error = null,\r\n    layerName = ''\r\n): void => {\r\n    // Prevent multiples modals error in the same layer\r\n    if (isError.has(layerName)) {\r\n        return;\r\n    }\r\n\r\n    isError.add(layerName);\r\n\r\n    let err_msg = `<b>Error: ${msg}</b>`;\r\n    if (originalError && originalError.message !== msg) {\r\n        err_msg += `. ${originalError.message}`;\r\n    }\r\n\r\n    const al = Modal.alert(err_msg, options);\r\n\r\n    al.show();\r\n\r\n    al.on('hidden', () => {\r\n        isError.delete(layerName);\r\n    });\r\n};\r\n","import { I18n } from '../../ol-wfst';\r\n\r\nexport const en: I18n = {\r\n    labels: {\r\n        select: 'Select',\r\n        addElement: 'Toggle Draw mode',\r\n        editElement: 'Edit feature',\r\n        save: 'Save',\r\n        delete: 'Delete',\r\n        cancel: 'Cancel',\r\n        apply: 'Apply changes',\r\n        upload: 'Upload',\r\n        editMode: 'Edit Mode',\r\n        confirmDelete: 'Are you sure to delete the feature?',\r\n        geomTypeNotSupported: 'Geometry not supported by layer',\r\n        editFields: 'Edit fields',\r\n        editGeom: 'Edit geometry',\r\n        selectDrawType: 'Geometry type to draw',\r\n        uploadToLayer: 'Upload file to selected layer',\r\n        uploadFeatures: 'Uploaded features to layer',\r\n        validFeatures: 'Valid geometries',\r\n        invalidFeatures: 'Invalid',\r\n        loading: 'Loading...',\r\n        toggleVisibility: 'Toggle layer visibility',\r\n        close: 'Close'\r\n    },\r\n    errors: {\r\n        capabilities: 'GeoServer Capabilities could not be downloaded.',\r\n        wfst: 'The GeoServer does not support Transactions',\r\n        layer: 'Could not get data from layer',\r\n        layerNotFound: 'Layer not found',\r\n        layerNotVisible: 'Layer is not visible',\r\n        noValidGeometry: 'No valid geometries found to add to this layer',\r\n        geoserver: 'Failed to get data from GeoServer',\r\n        badFormat: 'Unsupported format',\r\n        badFile: 'Error reading items from file',\r\n        lockFeature: 'Could not lock items on the GeoServer',\r\n        transaction: 'Error when doing Transaction with GeoServer',\r\n        getFeatures: 'Error getting elements from GeoServer'\r\n    }\r\n};\r\n","import { I18n } from '../../@types';\r\nexport * from './es';\r\nexport * from './en';\r\nexport * from './zh';\r\n\r\nimport { es } from './es';\r\nimport { en } from './en';\r\nimport { zh } from './zh';\r\n\r\nconst langs = {\r\n    es,\r\n    en,\r\n    zh\r\n};\r\n\r\n// Set default Language\r\nexport let I18N: I18n = en;\r\n\r\nexport const setLang = (lang = 'en', customI18n: I18n = null): void => {\r\n    // Check if language exists\r\n    if (lang in langs) {\r\n        I18N = langs[lang];\r\n    }\r\n\r\n    // Check if customs translations are provided\r\n    if (customI18n) {\r\n        I18N = { ...I18N, ...customI18n };\r\n    }\r\n};\r\n\r\n/**\r\n * /**\r\n * For translations thas has a variable \"{}\"\" to be replaced inside\r\n * @param string\r\n * @param args\r\n * @returns\r\n */\r\nexport const I18N_ = (string: string, ...args: any): string => {\r\n    let text = I18N[string];\r\n\r\n    if (!text) {\r\n        console.error('Translation not found', string);\r\n        text = string;\r\n    }\r\n\r\n    if (args.length) {\r\n        args.forEach((arg) => {\r\n            text = text.replace(/{}/, arg);\r\n        });\r\n    }\r\n\r\n    return text;\r\n};\r\n","import { I18n } from '../../ol-wfst';\r\n\r\nexport const es: I18n = {\r\n    labels: {\r\n        select: 'Seleccionar',\r\n        addElement: 'Modo dibujo',\r\n        editElement: 'Editar elemento',\r\n        save: 'Guardar',\r\n        delete: 'Eliminar',\r\n        cancel: 'Cancelar',\r\n        apply: 'Aplicar cambios',\r\n        upload: 'Subir',\r\n        editMode: 'Modo Edición',\r\n        confirmDelete: '¿Estás seguro de borrar el elemento?',\r\n        geomTypeNotSupported: 'Geometría no compatible con la capa',\r\n        editFields: 'Editar campos',\r\n        editGeom: 'Editar geometría',\r\n        selectDrawType: 'Tipo de geometría para dibujar',\r\n        uploadToLayer: 'Subir archivo a la capa seleccionada',\r\n        uploadFeatures: 'Subida de elementos a la capa',\r\n        validFeatures: 'Válidas',\r\n        invalidFeatures: 'Invalidas',\r\n        loading: 'Cargando...',\r\n        toggleVisibility: 'Cambiar visibilidad de la capa',\r\n        close: 'Cerrar'\r\n    },\r\n    errors: {\r\n        capabilities: 'No se pudieron obtener las Capabilidades del GeoServer',\r\n        wfst: 'El GeoServer no tiene soporte a Transacciones',\r\n        layer: 'No se pudieron obtener datos de la capa',\r\n        layerNotFound: 'Capa no encontrada',\r\n        layerNotVisible: 'La capa no está visible',\r\n        noValidGeometry:\r\n            'No se encontraron geometrías válidas para agregar a esta capa',\r\n        geoserver: 'No se pudieron obtener datos desde el GeoServer',\r\n        badFormat: 'Formato no soportado',\r\n        badFile: 'Error al leer elementos del archivo',\r\n        lockFeature: 'No se pudieron bloquear elementos en el GeoServer',\r\n        transaction: 'Error al hacer transacción con el GeoServer',\r\n        getFeatures: 'Error al obtener elemento desde el GeoServer'\r\n    }\r\n};\r\n","import { I18n } from '../../ol-wfst';\r\n\r\nexport const zh: I18n = {\r\n    labels: {\r\n        select: '选择',\r\n        addElement: '切换绘图类型',\r\n        editElement: '编辑元素',\r\n        save: '保存',\r\n        delete: '删除',\r\n        cancel: '取消',\r\n        apply: '确认并应用改变',\r\n        upload: '上传',\r\n        editMode: '编辑模式',\r\n        confirmDelete: '确认删除元素?',\r\n        geomTypeNotSupported: '图层不支持该几何',\r\n        editFields: '编辑区域',\r\n        editGeom: '编辑几何',\r\n        selectDrawType: '几何类型',\r\n        uploadToLayer: '通过文件上传图层',\r\n        uploadFeatures: '上传元素到图层',\r\n        validFeatures: '合法的几何类型',\r\n        invalidFeatures: '不合法',\r\n        loading: '加载中...',\r\n        toggleVisibility: '切换图层透明度',\r\n        close: '关闭'\r\n    },\r\n    errors: {\r\n        capabilities: '无法加载GeoServer服务所支持的能力.',\r\n        wfst: 'GeoServer不支持事务',\r\n        layer: '无法从图层获得数据',\r\n        layerNotFound: 'Layer not found',\r\n        layerNotVisible: 'Layer is not visible',\r\n        noValidGeometry: '不支持的几何类型无法加载到图层',\r\n        geoserver: '无法从GeoServer获取数据',\r\n        badFormat: '不支持的格式',\r\n        badFile: '读取文件数据出错',\r\n        lockFeature: '无法锁定GeoServer上的元素.',\r\n        transaction: 'GeoServer处理事务出错.',\r\n        getFeatures: '从GeoServer获取元素出错.'\r\n    }\r\n};\r\n","import { I18N } from './i18n';\r\n\r\nlet loadingDiv: HTMLDivElement;\r\n\r\nexport const initLoading = (): HTMLDivElement => {\r\n    loadingDiv = document.createElement('div');\r\n    loadingDiv.className = 'ol-wfst--tools-control--loading';\r\n    loadingDiv.innerHTML = I18N.labels.loading;\r\n    return loadingDiv;\r\n};\r\n\r\nexport const showLoading = (bool: boolean = true) => {\r\n    if (bool) {\r\n        loadingDiv.classList.add('ol-wfst--tools-control--loading-show');\r\n    } else {\r\n        loadingDiv.classList.remove('ol-wfst--tools-control--loading-show');\r\n    }\r\n};\r\n","/**\n * Utility function that works like `Object.apply`, but copies getters and setters properly as well.  Additionally gives\n * the option to exclude properties by name.\n */\nconst copyProps = (dest, src, exclude = []) => {\n    const props = Object.getOwnPropertyDescriptors(src);\n    for (let prop of exclude)\n        delete props[prop];\n    Object.defineProperties(dest, props);\n};\n/**\n * Returns the full chain of prototypes up until Object.prototype given a starting object.  The order of prototypes will\n * be closest to farthest in the chain.\n */\nconst protoChain = (obj, currentChain = [obj]) => {\n    const proto = Object.getPrototypeOf(obj);\n    if (proto === null)\n        return currentChain;\n    return protoChain(proto, [...currentChain, proto]);\n};\n/**\n * Identifies the nearest ancestor common to all the given objects in their prototype chains.  For most unrelated\n * objects, this function should return Object.prototype.\n */\nconst nearestCommonProto = (...objs) => {\n    if (objs.length === 0)\n        return undefined;\n    let commonProto = undefined;\n    const protoChains = objs.map(obj => protoChain(obj));\n    while (protoChains.every(protoChain => protoChain.length > 0)) {\n        const protos = protoChains.map(protoChain => protoChain.pop());\n        const potentialCommonProto = protos[0];\n        if (protos.every(proto => proto === potentialCommonProto))\n            commonProto = potentialCommonProto;\n        else\n            break;\n    }\n    return commonProto;\n};\n/**\n * Creates a new prototype object that is a mixture of the given prototypes.  The mixing is achieved by first\n * identifying the nearest common ancestor and using it as the prototype for a new object.  Then all properties/methods\n * downstream of this prototype (ONLY downstream) are copied into the new object.\n *\n * The resulting prototype is more performant than softMixProtos(...), as well as ES5 compatible.  However, it's not as\n * flexible as updates to the source prototypes aren't captured by the mixed result.  See softMixProtos for why you may\n * want to use that instead.\n */\nconst hardMixProtos = (ingredients, constructor, exclude = []) => {\n    var _a;\n    const base = (_a = nearestCommonProto(...ingredients)) !== null && _a !== void 0 ? _a : Object.prototype;\n    const mixedProto = Object.create(base);\n    // Keeps track of prototypes we've already visited to avoid copying the same properties multiple times.  We init the\n    // list with the proto chain below the nearest common ancestor because we don't want any of those methods mixed in\n    // when they will already be accessible via prototype access.\n    const visitedProtos = protoChain(base);\n    for (let prototype of ingredients) {\n        let protos = protoChain(prototype);\n        // Apply the prototype chain in reverse order so that old methods don't override newer ones.\n        for (let i = protos.length - 1; i >= 0; i--) {\n            let newProto = protos[i];\n            if (visitedProtos.indexOf(newProto) === -1) {\n                copyProps(mixedProto, newProto, ['constructor', ...exclude]);\n                visitedProtos.push(newProto);\n            }\n        }\n    }\n    mixedProto.constructor = constructor;\n    return mixedProto;\n};\nconst unique = (arr) => arr.filter((e, i) => arr.indexOf(e) == i);\n\n/**\n * Finds the ingredient with the given prop, searching in reverse order and breadth-first if searching ingredient\n * prototypes is required.\n */\nconst getIngredientWithProp = (prop, ingredients) => {\n    const protoChains = ingredients.map(ingredient => protoChain(ingredient));\n    // since we search breadth-first, we need to keep track of our depth in the prototype chains\n    let protoDepth = 0;\n    // not all prototype chains are the same depth, so this remains true as long as at least one of the ingredients'\n    // prototype chains has an object at this depth\n    let protosAreLeftToSearch = true;\n    while (protosAreLeftToSearch) {\n        // with the start of each horizontal slice, we assume this is the one that's deeper than any of the proto chains\n        protosAreLeftToSearch = false;\n        // scan through the ingredients right to left\n        for (let i = ingredients.length - 1; i >= 0; i--) {\n            const searchTarget = protoChains[i][protoDepth];\n            if (searchTarget !== undefined && searchTarget !== null) {\n                // if we find something, this is proof that this horizontal slice potentially more objects to search\n                protosAreLeftToSearch = true;\n                // eureka, we found it\n                if (Object.getOwnPropertyDescriptor(searchTarget, prop) != undefined) {\n                    return protoChains[i][0];\n                }\n            }\n        }\n        protoDepth++;\n    }\n    return undefined;\n};\n/**\n * \"Mixes\" ingredients by wrapping them in a Proxy.  The optional prototype argument allows the mixed object to sit\n * downstream of an existing prototype chain.  Note that \"properties\" cannot be added, deleted, or modified.\n */\nconst proxyMix = (ingredients, prototype = Object.prototype) => new Proxy({}, {\n    getPrototypeOf() {\n        return prototype;\n    },\n    setPrototypeOf() {\n        throw Error('Cannot set prototype of Proxies created by ts-mixer');\n    },\n    getOwnPropertyDescriptor(_, prop) {\n        return Object.getOwnPropertyDescriptor(getIngredientWithProp(prop, ingredients) || {}, prop);\n    },\n    defineProperty() {\n        throw new Error('Cannot define new properties on Proxies created by ts-mixer');\n    },\n    has(_, prop) {\n        return getIngredientWithProp(prop, ingredients) !== undefined || prototype[prop] !== undefined;\n    },\n    get(_, prop) {\n        return (getIngredientWithProp(prop, ingredients) || prototype)[prop];\n    },\n    set(_, prop, val) {\n        const ingredientWithProp = getIngredientWithProp(prop, ingredients);\n        if (ingredientWithProp === undefined)\n            throw new Error('Cannot set new properties on Proxies created by ts-mixer');\n        ingredientWithProp[prop] = val;\n        return true;\n    },\n    deleteProperty() {\n        throw new Error('Cannot delete properties on Proxies created by ts-mixer');\n    },\n    ownKeys() {\n        return ingredients\n            .map(Object.getOwnPropertyNames)\n            .reduce((prev, curr) => curr.concat(prev.filter(key => curr.indexOf(key) < 0)));\n    },\n});\n/**\n * Creates a new proxy-prototype object that is a \"soft\" mixture of the given prototypes.  The mixing is achieved by\n * proxying all property access to the ingredients.  This is not ES5 compatible and less performant.  However, any\n * changes made to the source prototypes will be reflected in the proxy-prototype, which may be desirable.\n */\nconst softMixProtos = (ingredients, constructor) => proxyMix([...ingredients, { constructor }]);\n\nconst settings = {\n    initFunction: null,\n    staticsStrategy: 'copy',\n    prototypeStrategy: 'copy',\n    decoratorInheritance: 'deep',\n};\n\n// Keeps track of constituent classes for every mixin class created by ts-mixer.\nconst mixins = new Map();\nconst getMixinsForClass = (clazz) => mixins.get(clazz);\nconst registerMixins = (mixedClass, constituents) => mixins.set(mixedClass, constituents);\nconst hasMixin = (instance, mixin) => {\n    if (instance instanceof mixin)\n        return true;\n    const constructor = instance.constructor;\n    const visited = new Set();\n    let frontier = new Set();\n    frontier.add(constructor);\n    while (frontier.size > 0) {\n        // check if the frontier has the mixin we're looking for.  if not, we can say we visited every item in the frontier\n        if (frontier.has(mixin))\n            return true;\n        frontier.forEach(item => visited.add(item));\n        // build a new frontier based on the associated mixin classes and prototype chains of each frontier item\n        const newFrontier = new Set();\n        frontier.forEach(item => {\n            var _a;\n            const itemConstituents = (_a = mixins.get(item)) !== null && _a !== void 0 ? _a : protoChain(item.prototype).map(proto => proto.constructor).filter(item => item !== null);\n            if (itemConstituents)\n                itemConstituents.forEach(constituent => {\n                    if (!visited.has(constituent) && !frontier.has(constituent))\n                        newFrontier.add(constituent);\n                });\n        });\n        // we have a new frontier, now search again\n        frontier = newFrontier;\n    }\n    // if we get here, we couldn't find the mixin anywhere in the prototype chain or associated mixin classes\n    return false;\n};\n\nconst mergeObjectsOfDecorators = (o1, o2) => {\n    var _a, _b;\n    const allKeys = unique([...Object.getOwnPropertyNames(o1), ...Object.getOwnPropertyNames(o2)]);\n    const mergedObject = {};\n    for (let key of allKeys)\n        mergedObject[key] = unique([...((_a = o1 === null || o1 === void 0 ? void 0 : o1[key]) !== null && _a !== void 0 ? _a : []), ...((_b = o2 === null || o2 === void 0 ? void 0 : o2[key]) !== null && _b !== void 0 ? _b : [])]);\n    return mergedObject;\n};\nconst mergePropertyAndMethodDecorators = (d1, d2) => {\n    var _a, _b, _c, _d;\n    return ({\n        property: mergeObjectsOfDecorators((_a = d1 === null || d1 === void 0 ? void 0 : d1.property) !== null && _a !== void 0 ? _a : {}, (_b = d2 === null || d2 === void 0 ? void 0 : d2.property) !== null && _b !== void 0 ? _b : {}),\n        method: mergeObjectsOfDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.method) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.method) !== null && _d !== void 0 ? _d : {}),\n    });\n};\nconst mergeDecorators = (d1, d2) => {\n    var _a, _b, _c, _d, _e, _f;\n    return ({\n        class: unique([...(_a = d1 === null || d1 === void 0 ? void 0 : d1.class) !== null && _a !== void 0 ? _a : [], ...(_b = d2 === null || d2 === void 0 ? void 0 : d2.class) !== null && _b !== void 0 ? _b : []]),\n        static: mergePropertyAndMethodDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.static) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.static) !== null && _d !== void 0 ? _d : {}),\n        instance: mergePropertyAndMethodDecorators((_e = d1 === null || d1 === void 0 ? void 0 : d1.instance) !== null && _e !== void 0 ? _e : {}, (_f = d2 === null || d2 === void 0 ? void 0 : d2.instance) !== null && _f !== void 0 ? _f : {}),\n    });\n};\nconst decorators = new Map();\nconst findAllConstituentClasses = (...classes) => {\n    var _a;\n    const allClasses = new Set();\n    const frontier = new Set([...classes]);\n    while (frontier.size > 0) {\n        for (let clazz of frontier) {\n            const protoChainClasses = protoChain(clazz.prototype).map(proto => proto.constructor);\n            const mixinClasses = (_a = getMixinsForClass(clazz)) !== null && _a !== void 0 ? _a : [];\n            const potentiallyNewClasses = [...protoChainClasses, ...mixinClasses];\n            const newClasses = potentiallyNewClasses.filter(c => !allClasses.has(c));\n            for (let newClass of newClasses)\n                frontier.add(newClass);\n            allClasses.add(clazz);\n            frontier.delete(clazz);\n        }\n    }\n    return [...allClasses];\n};\nconst deepDecoratorSearch = (...classes) => {\n    const decoratorsForClassChain = findAllConstituentClasses(...classes)\n        .map(clazz => decorators.get(clazz))\n        .filter(decorators => !!decorators);\n    if (decoratorsForClassChain.length == 0)\n        return {};\n    if (decoratorsForClassChain.length == 1)\n        return decoratorsForClassChain[0];\n    return decoratorsForClassChain.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst directDecoratorSearch = (...classes) => {\n    const classDecorators = classes.map(clazz => getDecoratorsForClass(clazz));\n    if (classDecorators.length === 0)\n        return {};\n    if (classDecorators.length === 1)\n        return classDecorators[0];\n    return classDecorators.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst getDecoratorsForClass = (clazz) => {\n    let decoratorsForClass = decorators.get(clazz);\n    if (!decoratorsForClass) {\n        decoratorsForClass = {};\n        decorators.set(clazz, decoratorsForClass);\n    }\n    return decoratorsForClass;\n};\nconst decorateClass = (decorator) => ((clazz) => {\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    let classDecorators = decoratorsForClass.class;\n    if (!classDecorators) {\n        classDecorators = [];\n        decoratorsForClass.class = classDecorators;\n    }\n    classDecorators.push(decorator);\n    return decorator(clazz);\n});\nconst decorateMember = (decorator) => ((object, key, ...otherArgs) => {\n    var _a, _b, _c;\n    const decoratorTargetType = typeof object === 'function' ? 'static' : 'instance';\n    const decoratorType = typeof object[key] === 'function' ? 'method' : 'property';\n    const clazz = decoratorTargetType === 'static' ? object : object.constructor;\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    const decoratorsForTargetType = (_a = decoratorsForClass === null || decoratorsForClass === void 0 ? void 0 : decoratorsForClass[decoratorTargetType]) !== null && _a !== void 0 ? _a : {};\n    decoratorsForClass[decoratorTargetType] = decoratorsForTargetType;\n    let decoratorsForType = (_b = decoratorsForTargetType === null || decoratorsForTargetType === void 0 ? void 0 : decoratorsForTargetType[decoratorType]) !== null && _b !== void 0 ? _b : {};\n    decoratorsForTargetType[decoratorType] = decoratorsForType;\n    let decoratorsForKey = (_c = decoratorsForType === null || decoratorsForType === void 0 ? void 0 : decoratorsForType[key]) !== null && _c !== void 0 ? _c : [];\n    decoratorsForType[key] = decoratorsForKey;\n    // @ts-ignore: array is type `A[] | B[]` and item is type `A | B`, so technically a type error, but it's fine\n    decoratorsForKey.push(decorator);\n    // @ts-ignore\n    return decorator(object, key, ...otherArgs);\n});\nconst decorate = (decorator) => ((...args) => {\n    if (args.length === 1)\n        return decorateClass(decorator)(args[0]);\n    return decorateMember(decorator)(...args);\n});\n\nfunction Mixin(...constructors) {\n    var _a, _b, _c;\n    const prototypes = constructors.map(constructor => constructor.prototype);\n    // Here we gather up the init functions of the ingredient prototypes, combine them into one init function, and\n    // attach it to the mixed class prototype.  The reason we do this is because we want the init functions to mix\n    // similarly to constructors -- not methods, which simply override each other.\n    const initFunctionName = settings.initFunction;\n    if (initFunctionName !== null) {\n        const initFunctions = prototypes\n            .map(proto => proto[initFunctionName])\n            .filter(func => typeof func === 'function');\n        const combinedInitFunction = function (...args) {\n            for (let initFunction of initFunctions)\n                initFunction.apply(this, args);\n        };\n        const extraProto = { [initFunctionName]: combinedInitFunction };\n        prototypes.push(extraProto);\n    }\n    function MixedClass(...args) {\n        for (const constructor of constructors)\n            // @ts-ignore: potentially abstract class\n            copyProps(this, new constructor(...args));\n        if (initFunctionName !== null && typeof this[initFunctionName] === 'function')\n            this[initFunctionName].apply(this, args);\n    }\n    MixedClass.prototype = settings.prototypeStrategy === 'copy'\n        ? hardMixProtos(prototypes, MixedClass)\n        : softMixProtos(prototypes, MixedClass);\n    Object.setPrototypeOf(MixedClass, settings.staticsStrategy === 'copy'\n        ? hardMixProtos(constructors, null, ['prototype'])\n        : proxyMix(constructors, Function.prototype));\n    let DecoratedMixedClass = MixedClass;\n    if (settings.decoratorInheritance !== 'none') {\n        const classDecorators = settings.decoratorInheritance === 'deep'\n            ? deepDecoratorSearch(...constructors)\n            : directDecoratorSearch(...constructors);\n        for (let decorator of (_a = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.class) !== null && _a !== void 0 ? _a : []) {\n            const result = decorator(DecoratedMixedClass);\n            if (result) {\n                DecoratedMixedClass = result;\n            }\n        }\n        applyPropAndMethodDecorators((_b = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.static) !== null && _b !== void 0 ? _b : {}, DecoratedMixedClass);\n        applyPropAndMethodDecorators((_c = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.instance) !== null && _c !== void 0 ? _c : {}, DecoratedMixedClass.prototype);\n    }\n    registerMixins(DecoratedMixedClass, constructors);\n    return DecoratedMixedClass;\n}\nconst applyPropAndMethodDecorators = (propAndMethodDecorators, target) => {\n    const propDecorators = propAndMethodDecorators.property;\n    const methodDecorators = propAndMethodDecorators.method;\n    if (propDecorators)\n        for (let key in propDecorators)\n            for (let decorator of propDecorators[key])\n                decorator(target, key);\n    if (methodDecorators)\n        for (let key in methodDecorators)\n            for (let decorator of methodDecorators[key])\n                decorator(target, key, Object.getOwnPropertyDescriptor(target, key));\n};\n/**\n * A decorator version of the `Mixin` function.  You'll want to use this instead of `Mixin` for mixing generic classes.\n */\nconst mix = (...ingredients) => decoratedClass => {\n    // @ts-ignore\n    const mixedClass = Mixin(...ingredients.concat([decoratedClass]));\n    Object.defineProperty(mixedClass, 'name', {\n        value: decoratedClass.name,\n        writable: false,\n    });\n    return mixedClass;\n};\n\nexport { Mixin, decorate, hasMixin, mix, settings };\n","export enum GeometryType {\r\n    Point = 'Point',\r\n    LineString = 'LineString',\r\n    LinearRing = 'LinearRing',\r\n    Polygon = 'Polygon',\r\n    MultiPoint = 'MultiPoint',\r\n    MultiLineString = 'MultiLineString',\r\n    MultiPolygon = 'MultiPolygon',\r\n    GeometryCollection = 'GeometryCollection',\r\n    Circle = 'Circle'\r\n}\r\n\r\nexport enum TransactionType {\r\n    Insert = 'insert',\r\n    Delete = 'delete',\r\n    Update = 'update'\r\n}\r\n","import Map from 'ol/Map';\r\nimport { FeatureLike } from 'ol/Feature';\r\n\r\nimport WfsLayer from '../WfsLayer';\r\nimport WmsLayer from '../WmsLayer';\r\nimport { IWfstLayersList } from '../@types';\r\n\r\nlet map: Map;\r\nlet layerToInsertElements: WfsLayer | WmsLayer = null;\r\nlet mode = null;\r\n\r\nexport enum Modes {\r\n    Edit = 'EDIT',\r\n    Draw = 'DRAW'\r\n}\r\n\r\nexport function activateMode(m: Modes = null) {\r\n    mode = m;\r\n}\r\n\r\nexport function getMode() {\r\n    return mode;\r\n}\r\n\r\nconst editedFeatures: Set<string> = new Set();\r\nconst mapLayers: IWfstLayersList = {};\r\n\r\nexport function setMap(m: Map) {\r\n    map = m;\r\n}\r\n\r\nexport function getMap(): Map {\r\n    return map;\r\n}\r\n\r\nexport function setActiveLayerToInsertEls(layer: WmsLayer | WfsLayer) {\r\n    layerToInsertElements = layer;\r\n}\r\n\r\nexport function getActiveLayerToInsertEls(): WmsLayer | WfsLayer {\r\n    return layerToInsertElements;\r\n}\r\n\r\nexport function setMapLayers(data) {\r\n    Object.assign(mapLayers, data);\r\n}\r\n\r\nexport function getStoredMapLayers(): IWfstLayersList {\r\n    return mapLayers;\r\n}\r\n\r\nexport function getStoredLayer(layerName: string): WfsLayer | WmsLayer {\r\n    return getStoredMapLayers()[layerName];\r\n}\r\n\r\nexport function addFeatureToEditedList(feature: FeatureLike): void {\r\n    editedFeatures.add(String(feature.getId()));\r\n}\r\n\r\nexport function removeFeatureFromEditList(feature: FeatureLike): void {\r\n    editedFeatures.delete(String(feature.getId()));\r\n}\r\n\r\nexport function isFeatureEdited(feature: FeatureLike): boolean {\r\n    return editedFeatures.has(String(feature.getId()));\r\n}\r\n","import { Feature } from 'ol';\r\nimport { Geometry } from 'ol/geom';\r\nimport { TransactionResponse } from 'ol/format/WFS';\r\nimport Layer from 'ol/layer/Base';\r\n\r\nimport Geoserver from '../../Geoserver';\r\nimport { IGeoserverDescribeFeatureType } from '../../@types';\r\nimport { GeometryType, TransactionType } from '../../@enums';\r\nimport { I18N } from '../i18n';\r\nimport { getMap } from '../state';\r\nimport { showError } from '../errors';\r\nimport { parseError } from '../errors';\r\n\r\n/**\r\n * Base class from which all layer types are derived.\r\n */\r\nexport default class BaseLayer extends Layer {\r\n    /**\r\n     * @private\r\n     */\r\n    _init(): void {\r\n        const geoserver = this.getGeoserver() as Geoserver;\r\n\r\n        if (geoserver.isLoaded()) {\r\n            this.getAndUpdateDescribeFeatureType();\r\n        } else {\r\n            geoserver.on('change:capabilities', async () => {\r\n                this.getAndUpdateDescribeFeatureType();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Request and store data layers obtained by DescribeFeatureType\r\n     *\r\n     * @public\r\n     */\r\n    async getAndUpdateDescribeFeatureType(): Promise<void> {\r\n        const layerName = this.get(BaseLayerProperty.NAME);\r\n        const layerLabel = this.get(BaseLayerProperty.LABEL);\r\n\r\n        try {\r\n            const geoserver = this.getGeoserver() as Geoserver;\r\n\r\n            const params = new URLSearchParams({\r\n                service: 'wfs',\r\n                version: geoserver.getAdvanced().describeFeatureTypeVersion,\r\n                request: 'DescribeFeatureType',\r\n                typeName: layerName,\r\n                outputFormat: 'application/json',\r\n                exceptions: 'application/json'\r\n            });\r\n\r\n            const url_fetch = geoserver.getUrl() + '?' + params.toString();\r\n\r\n            const response = await fetch(url_fetch, {\r\n                headers: geoserver.getHeaders(),\r\n                credentials: geoserver.getCredentials()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('');\r\n            }\r\n\r\n            const data: IGeoserverDescribeFeatureType = await response.json();\r\n\r\n            if (!data) {\r\n                throw new Error('');\r\n            }\r\n\r\n            if (data.exceptions) {\r\n                throw new Error(parseError(data));\r\n            }\r\n\r\n            const targetNamespace = data.targetNamespace;\r\n            const properties = data.featureTypes[0].properties;\r\n\r\n            // Find the geometry field\r\n            const geom = properties.find((el) => el.type.indexOf('gml:') >= 0);\r\n\r\n            data._parsed = {\r\n                namespace: targetNamespace,\r\n                properties: properties,\r\n                geomType: geom.localType as GeometryType,\r\n                geomField: geom.name\r\n            };\r\n\r\n            this.set(BaseLayerProperty.DESCRIBEFEATURETYPE, data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            showError(`${I18N.errors.layer} \"${layerLabel}\"`, err, layerName);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns\r\n     */\r\n    isVisibleByZoom(): boolean {\r\n        return getMap().getView().getZoom() > this.getMinZoom();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param mode\r\n     * @param features\r\n     * @public\r\n     */\r\n    async transactFeatures(\r\n        mode: TransactionType,\r\n        features: Array<Feature<Geometry>> | Feature<Geometry>\r\n    ): Promise<TransactionResponse | false> {\r\n        const geoserver = this.getGeoserver() as Geoserver;\r\n        return geoserver.transact(\r\n            mode,\r\n            features,\r\n            this.get(BaseLayerProperty.NAME)\r\n        );\r\n    }\r\n\r\n    async insertFeatures(\r\n        features: Array<Feature<Geometry>> | Feature<Geometry>\r\n    ): Promise<TransactionResponse | false> {\r\n        return this.transactFeatures(TransactionType.Insert, features);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @param featureId\r\n     * @returns\r\n     */\r\n    async maybeLockFeature(featureId: string | number): Promise<string> {\r\n        const geoserver = this.getGeoserver() as Geoserver;\r\n\r\n        if (geoserver.getUseLockFeature() && geoserver.hasLockFeature()) {\r\n            return await geoserver.lockFeature(\r\n                featureId,\r\n                this.get(BaseLayerProperty.NAME)\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getGeoserver(): Geoserver {\r\n        return this.get(BaseLayerProperty.GEOSERVER);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getDescribeFeatureType(): IGeoserverDescribeFeatureType {\r\n        return this.get(BaseLayerProperty.DESCRIBEFEATURETYPE);\r\n    }\r\n}\r\n\r\nexport enum BaseLayerProperty {\r\n    NAME = 'name',\r\n    LABEL = 'label',\r\n    DESCRIBEFEATURETYPE = 'describeFeatureType',\r\n    ISVISIBLE = 'isVisible',\r\n    GEOSERVER = 'geoserver'\r\n}\r\n\r\nexport type BaseLayerEventTypes =\r\n    | 'layerRendered'\r\n    | `change:${BaseLayerProperty.DESCRIBEFEATURETYPE}`\r\n    | `change:${BaseLayerProperty.ISVISIBLE}`;\r\n","import Feature from 'ol/Feature';\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\nimport Geometry from 'ol/geom/Geometry';\r\nimport VectorSource, { Options as VSOptions } from 'ol/source/Vector';\r\nimport { transformExtent } from 'ol/proj';\r\nimport { bbox } from 'ol/loadingstrategy';\r\n\r\nimport { WfsGeoserverVendor } from '../../@types';\r\nimport { parseError, showError } from '../errors';\r\nimport { I18N } from '../i18n';\r\nimport { GeoServerAdvanced } from '../../Geoserver';\r\n\r\n/**\r\n * Layer source to retrieve WFS features from geoservers\r\n * https://docs.geoserver.org/stable/en/user/services/wfs/reference.html\r\n *\r\n * @extends {ol/source/Vector~VectorSource}\r\n * @param options\r\n */\r\nexport default class WfsSource extends VectorSource {\r\n    public urlParams = new URLSearchParams({\r\n        SERVICE: 'wfs',\r\n        REQUEST: 'GetFeature',\r\n        OUTPUTFORMAT: 'application/json',\r\n        EXCEPTIONS: 'application/json'\r\n    });\r\n\r\n    constructor(options: WfsSourceOptions) {\r\n        super({\r\n            ...options,\r\n            format: new GeoJSON(),\r\n            loader: async (\r\n                extent,\r\n                resolution,\r\n                projection,\r\n                success,\r\n                failure\r\n            ) => {\r\n                try {\r\n                    // If bbox, add extent to the request\r\n                    if (options.strategy == bbox) {\r\n                        const extentGeoServer = transformExtent(\r\n                            extent,\r\n                            projection.getCode(),\r\n                            options.geoServerAdvanced.projection\r\n                        );\r\n                        // https://docs.geoserver.org/stable/en/user/services/wfs/reference.html\r\n                        // request features using a bounding box with CRS maybe different from featureTypes native CRS\r\n                        this.urlParams.set(\r\n                            'bbox',\r\n                            extentGeoServer.toString() +\r\n                                `,${options.geoServerAdvanced.projection}`\r\n                        );\r\n                    }\r\n\r\n                    const url_fetch =\r\n                        options.geoserverUrl + '?' + this.urlParams.toString();\r\n\r\n                    const response = await fetch(url_fetch, {\r\n                        headers: options.headers,\r\n                        credentials: options.credentials\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        throw new Error('');\r\n                    }\r\n\r\n                    const data = await response.json();\r\n\r\n                    if (data.exceptions) {\r\n                        throw new Error(parseError(data));\r\n                    }\r\n\r\n                    const features = this.getFormat().readFeatures(data, {\r\n                        featureProjection: projection.getCode(),\r\n                        dataProjection: options.geoServerAdvanced.projection\r\n                    });\r\n\r\n                    features.forEach((feature: Feature<Geometry>) => {\r\n                        feature.set(\r\n                            '_layerName_',\r\n                            options.name,\r\n                            /* silent = */ true\r\n                        );\r\n                    });\r\n\r\n                    this.addFeatures(features as Feature<Geometry>[]);\r\n\r\n                    success(features as Feature<Geometry>[]);\r\n                } catch (err) {\r\n                    this.removeLoadedExtent(extent);\r\n\r\n                    showError(I18N.errors.geoserver, err, options.name);\r\n\r\n                    failure();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.urlParams.set(\r\n            'version',\r\n            options.geoServerAdvanced.getFeatureVersion\r\n        );\r\n\r\n        this.urlParams.set('typename', options.name);\r\n\r\n        this.urlParams.set(\r\n            'srsName',\r\n            options.geoServerAdvanced.projection.toString()\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * **_[interface]_** - Parameters to create a WfsSource\r\n *\r\n * @public\r\n */\r\nexport interface WfsSourceOptions extends VSOptions {\r\n    /**\r\n     * Layer name in the GeoServer\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * Url for OWS services. This endpoint will recive the WFS, WFST and WMS requests\r\n     */\r\n    geoserverUrl: string;\r\n\r\n    /**\r\n     * Advanced options for geoserver requests\r\n     */\r\n    geoServerAdvanced?: GeoServerAdvanced;\r\n\r\n    /**\r\n     *\r\n     */\r\n    geoserverVendor?: WfsGeoserverVendor;\r\n\r\n    /**\r\n     * Url headers for GeoServer requests. You can use it to add Authorization credentials\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Request/headers\r\n     */\r\n    headers?: HeadersInit;\r\n\r\n    /**\r\n     * Credentials for fetch requests\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials\r\n     */\r\n    credentials?: RequestCredentials;\r\n}\r\n","import Feature from 'ol/Feature';\r\nimport Geometry from 'ol/geom/Geometry';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport BaseEvent from 'ol/events/Event';\r\nimport { CombinedOnSignature, EventTypes, OnSignature } from 'ol/Observable';\r\nimport { EventsKey } from 'ol/events';\r\nimport { LayerRenderEventTypes } from 'ol/render/EventType';\r\nimport { BaseLayerObjectEventTypes } from 'ol/layer/Base';\r\nimport { ObjectEvent } from 'ol/Object';\r\nimport RenderEvent from 'ol/render/Event';\r\n\r\nimport { Mixin } from 'ts-mixer';\r\n\r\nimport BaseLayer, { BaseLayerEventTypes } from './modules/base/BaseLayer';\r\nimport WfsSource from './modules/base/WfsSource';\r\nimport { LayerOptions } from './ol-wfst';\r\nimport { showLoading } from './modules/loading';\r\nimport { TransactionType } from './@enums';\r\nimport { WfsGeoserverVendor } from './@types';\r\n\r\n/**\r\n * Layer to retrieve WFS features from geoservers\r\n * https://docs.geoserver.org/stable/en/user/services/wfs/reference.html\r\n *\r\n * @fires layerRendered\r\n * @extends {ol/layer/Vector~VectorLayer}\r\n * @param options\r\n */\r\nexport default class WfsLayer extends Mixin(BaseLayer, VectorLayer<WfsSource>) {\r\n    private _loadingCount = 0;\r\n    private _loadedCount = 0;\r\n\r\n    public beforeTransactFeature: (\r\n        feature: Feature<Geometry>,\r\n        transaction: TransactionType\r\n    ) => Feature<Geometry>;\r\n\r\n    declare on: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'change:source'\r\n            | 'sourceready',\r\n            ObjectEvent,\r\n            EventsKey\r\n        > &\r\n        OnSignature<LayerRenderEventTypes, RenderEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            | EventTypes\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'change:source'\r\n            | 'sourceready'\r\n            | LayerRenderEventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare once: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'change:source'\r\n            | 'sourceready',\r\n            ObjectEvent,\r\n            EventsKey\r\n        > &\r\n        OnSignature<LayerRenderEventTypes, RenderEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            | EventTypes\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'change:source'\r\n            | 'sourceready'\r\n            | LayerRenderEventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare un: OnSignature<EventTypes, BaseEvent, void> &\r\n        OnSignature<\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'change:source'\r\n            | 'sourceready',\r\n            ObjectEvent,\r\n            void\r\n        > &\r\n        OnSignature<LayerRenderEventTypes, RenderEvent, void> &\r\n        CombinedOnSignature<\r\n            | EventTypes\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'change:source'\r\n            | 'sourceready'\r\n            | LayerRenderEventTypes,\r\n            void\r\n        >;\r\n\r\n    constructor(options: LayerOptions) {\r\n        super({\r\n            name: options.name,\r\n            label: options.label || options.name,\r\n            minZoom: options.minZoom,\r\n            ...options\r\n        });\r\n\r\n        if (options.beforeTransactFeature) {\r\n            this.beforeTransactFeature = options.beforeTransactFeature;\r\n        }\r\n\r\n        const geoserver = options.geoserver;\r\n\r\n        const source = new WfsSource({\r\n            name: options.name,\r\n            geoserverUrl: geoserver.getUrl(),\r\n            geoServerAdvanced: geoserver.getAdvanced(),\r\n            ...(options.strategy && { strategy: options.strategy }),\r\n            geoserverVendor: options.geoserverVendor\r\n        });\r\n\r\n        this._loadingCount = 0;\r\n        this._loadedCount = 0;\r\n\r\n        source.on('featuresloadstart', () => {\r\n            this._loadingCount++;\r\n            if (this._loadingCount === 1 && this.isVisibleByZoom()) {\r\n                showLoading();\r\n            }\r\n        });\r\n\r\n        source.on(['featuresloadend', 'featuresloaderror'], () => {\r\n            this._loadedCount++;\r\n            if (this._loadingCount === this._loadedCount) {\r\n                this._loadingCount = 0;\r\n                this._loadedCount = 0;\r\n                setTimeout(() => {\r\n                    this.dispatchEvent('layerRendered');\r\n                }, 300);\r\n            }\r\n        });\r\n\r\n        this.setSource(source);\r\n\r\n        const geoserverOptions = options.geoserverVendor as WfsGeoserverVendor;\r\n\r\n        Object.keys(geoserverOptions).forEach((param) => {\r\n            source.urlParams.set(param, geoserverOptions[param]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    refresh() {\r\n        const source = this.getSource();\r\n        // Refrescamos el wms\r\n        source.refresh();\r\n    }\r\n\r\n    /**\r\n     * Use this to update Geoserver Wms Vendors (https://docs.geoserver.org/latest/en/user/services/wms/vendor.html)\r\n     * and other arguements (https://docs.geoserver.org/stable/en/user/services/wms/reference.html#getmap)\r\n     * in all the getMap requests.\r\n     *\r\n     * Example: you can use this to change the style of the WMS, add a custom sld, set a cql_filter, etc.\r\n     *\r\n     * @public\r\n     * @param paramName\r\n     * @param value Use `undefined` or `null` to remove the param\r\n     * @param refresh\r\n     */\r\n    setCustomParam(\r\n        paramName: string,\r\n        value: string = null,\r\n        refresh = true\r\n    ): URLSearchParams {\r\n        const source = this.getSource();\r\n\r\n        if (value === undefined || value === null) {\r\n            source.urlParams.delete(paramName);\r\n        } else {\r\n            source.urlParams.set(paramName, value);\r\n        }\r\n\r\n        if (refresh) {\r\n            this.refresh();\r\n        }\r\n\r\n        return source.urlParams;\r\n    }\r\n}\r\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","import TileWMS, { Options as TSOptions } from 'ol/source/TileWMS';\r\nimport TileState from 'ol/TileState';\r\nimport { ImageTile } from 'ol';\r\nimport { ObjectEvent } from 'ol/Object';\r\n\r\nimport { WmsGeoserverVendor } from '../../@types';\r\nimport { parseError, showError } from '../errors';\r\nimport { I18N } from '../i18n';\r\nimport { GeoServerAdvanced } from '../../Geoserver';\r\n\r\n/**\r\n * Layer source to retrieve WMS information from geoservers\r\n * https://docs.geoserver.org/stable/en/user/services/wms/reference.html\r\n *\r\n * @extends {ol/source/TieWMS~TileWMS}\r\n * @param options\r\n */\r\nexport default class WmsSource extends TileWMS {\r\n    constructor(options: WmsSourceOptions) {\r\n        super({\r\n            url: options.geoserverUrl,\r\n            serverType: 'geoserver',\r\n            params: {\r\n                SERVICE: 'wms',\r\n                TILED: true,\r\n                LAYERS: options.name,\r\n                EXCEPTIONS: 'application/json',\r\n                ...(options.geoserverVendor && options.geoserverVendor)\r\n            },\r\n            tileLoadFunction: async (tile, src) => {\r\n                const blobToJson = (blob: Blob): any => {\r\n                    return new Promise((resolve) => {\r\n                        const reader = new FileReader();\r\n                        reader.onloadend = () =>\r\n                            resolve(JSON.parse(reader.result as string));\r\n                        reader.readAsText(blob);\r\n                    });\r\n                };\r\n\r\n                try {\r\n                    const response = await fetch(src, {\r\n                        headers: options.headers,\r\n                        credentials: options.credentials\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        throw new Error('');\r\n                    }\r\n\r\n                    let data = await response.blob();\r\n\r\n                    // Check if the response has an error\r\n                    if (data.type == 'application/json') {\r\n                        const parsedError = await blobToJson(data);\r\n                        throw new Error(parseError(parsedError));\r\n                    }\r\n\r\n                    ((tile as ImageTile).getImage() as HTMLImageElement).src =\r\n                        URL.createObjectURL(data);\r\n\r\n                    tile.setState(TileState.LOADED);\r\n                } catch (err) {\r\n                    showError(I18N.errors.geoserver, err, options.name);\r\n                    tile.setState(TileState.ERROR);\r\n                }\r\n            },\r\n            ...options\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * **_[interface]_** - Parameters to create a WmsSource\r\n *\r\n * @public\r\n */\r\nexport interface WmsSourceOptions extends Omit<TSOptions, 'params'> {\r\n    /**\r\n     * Layer name in the GeoServer\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * Url for OWS services. This endpoint will recive the WFS, WFST and WMS requests\r\n     */\r\n    geoserverUrl: string;\r\n\r\n    /**\r\n     * Advanced options for geoserver requests\r\n     */\r\n    geoServerAdvanced?: GeoServerAdvanced;\r\n\r\n    /**\r\n     *\r\n     */\r\n    geoserverVendor?: WmsGeoserverVendor;\r\n\r\n    /**\r\n     * Url headers for GeoServer requests. You can use it to add Authorization credentials\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Request/headers\r\n     */\r\n    headers?: HeadersInit;\r\n\r\n    /**\r\n     * Credentials for fetch requests\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials\r\n     */\r\n    credentials?: RequestCredentials;\r\n}\r\n","import { MapBrowserEvent } from 'ol';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport Geometry from 'ol/geom/Geometry';\r\nimport Feature from 'ol/Feature';\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\nimport BaseEvent from 'ol/events/Event';\r\nimport { CombinedOnSignature, EventTypes, OnSignature } from 'ol/Observable';\r\nimport { EventsKey } from 'ol/events';\r\nimport { LayerRenderEventTypes } from 'ol/render/EventType';\r\nimport { BaseLayerObjectEventTypes } from 'ol/layer/Base';\r\nimport { ObjectEvent } from 'ol/Object';\r\nimport RenderEvent from 'ol/render/Event';\r\n\r\nimport WmsSource from './modules/base/WmsSource';\r\nimport BaseLayer, { BaseLayerEventTypes } from './modules/base/BaseLayer';\r\nimport { LayerOptions } from './ol-wfst';\r\nimport { showLoading } from './modules/loading';\r\nimport { TransactionType } from './@enums';\r\nimport { showError } from './modules/errors';\r\nimport { I18N } from './modules/i18n';\r\nimport { getMap } from './modules/state';\r\nimport { Mixin } from 'ts-mixer';\r\nimport { WmsGeoserverVendor } from './@types';\r\n\r\n/**\r\n * Layer to retrieve WMS information from geoservers\r\n * https://docs.geoserver.org/stable/en/user/services/wms/reference.html\r\n *\r\n * @fires layerRendered\r\n * @extends {ol/layer/Tile~TileLayer}\r\n * @param options\r\n */\r\nexport default class WmsLayer extends Mixin(BaseLayer, TileLayer<WmsSource>) {\r\n    private _loadingCount = 0;\r\n    private _loadedCount = 0;\r\n\r\n    public beforeTransactFeature: (\r\n        feature: Feature<Geometry>,\r\n        transaction: TransactionType\r\n    ) => Feature<Geometry>;\r\n\r\n    // Formats\r\n    private _formatGeoJSON: GeoJSON;\r\n\r\n    declare on: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'sourceready'\r\n            | 'change:source'\r\n            | 'change:preload'\r\n            | 'change:useInterimTilesOnError',\r\n            ObjectEvent,\r\n            EventsKey\r\n        > &\r\n        OnSignature<LayerRenderEventTypes, RenderEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            | EventTypes\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'sourceready'\r\n            | 'change:source'\r\n            | 'change:preload'\r\n            | 'change:useInterimTilesOnError'\r\n            | LayerRenderEventTypes,\r\n            EventsKey\r\n        >;\r\n    declare once: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'sourceready'\r\n            | 'change:source'\r\n            | 'change:preload'\r\n            | 'change:useInterimTilesOnError',\r\n            ObjectEvent,\r\n            EventsKey\r\n        > &\r\n        OnSignature<LayerRenderEventTypes, RenderEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            | EventTypes\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'sourceready'\r\n            | 'change:source'\r\n            | 'change:preload'\r\n            | 'change:useInterimTilesOnError'\r\n            | LayerRenderEventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare un: OnSignature<EventTypes, BaseEvent, void> &\r\n        OnSignature<\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'sourceready'\r\n            | 'change:source'\r\n            | 'change:preload'\r\n            | 'change:useInterimTilesOnError',\r\n            ObjectEvent,\r\n            void\r\n        > &\r\n        OnSignature<LayerRenderEventTypes, RenderEvent, void> &\r\n        CombinedOnSignature<\r\n            | EventTypes\r\n            | BaseLayerEventTypes\r\n            | BaseLayerObjectEventTypes\r\n            | 'sourceready'\r\n            | 'change:source'\r\n            | 'change:preload'\r\n            | 'change:useInterimTilesOnError'\r\n            | LayerRenderEventTypes,\r\n            void\r\n        >;\r\n\r\n    constructor(options: LayerOptions) {\r\n        super({\r\n            name: options.name,\r\n            label: options.label || options.name,\r\n            minZoom: options.minZoom,\r\n            ...options\r\n        });\r\n\r\n        if (options.beforeTransactFeature) {\r\n            this.beforeTransactFeature = options.beforeTransactFeature;\r\n        }\r\n\r\n        this._formatGeoJSON = new GeoJSON();\r\n\r\n        const geoserver = options.geoserver;\r\n\r\n        const source = new WmsSource({\r\n            name: options.name,\r\n            geoserverUrl: geoserver.getUrl(),\r\n            geoServerAdvanced: geoserver.getAdvanced(),\r\n            geoserverVendor: options.geoserverVendor as WmsGeoserverVendor\r\n        });\r\n\r\n        this._loadingCount = 0;\r\n        this._loadedCount = 0;\r\n\r\n        source.on('tileloadstart', () => {\r\n            this._loadingCount++;\r\n            if (this._loadingCount === 1 && this.isVisibleByZoom()) {\r\n                showLoading();\r\n            }\r\n        });\r\n\r\n        source.on(['tileloadend', 'tileloaderror'], () => {\r\n            this._loadedCount++;\r\n            if (this._loadingCount === this._loadedCount) {\r\n                this._loadingCount = 0;\r\n                this._loadedCount = 0;\r\n                setTimeout(() => {\r\n                    this.dispatchEvent('layerRendered');\r\n                }, 300);\r\n            }\r\n        });\r\n\r\n        this.setSource(source);\r\n    }\r\n\r\n    /**\r\n     * Get the features on the click area\r\n     * @param evt\r\n     * @returns\r\n     * @private\r\n     */\r\n    async _getFeaturesByClickEvent(\r\n        evt: MapBrowserEvent<UIEvent>\r\n    ): Promise<Feature<Geometry>[]> {\r\n        const coordinate = evt.coordinate;\r\n\r\n        const view = getMap().getView();\r\n\r\n        // Si la vista es lejana, disminumos el buffer\r\n        // Si es cercana, lo aumentamos, por ejemplo, para podeer clickear los vectores\r\n        // y mejorar la sensibilidad en IOS\r\n        const buffer = view.getZoom() > 10 ? 10 : 5;\r\n\r\n        const source = this.getSource();\r\n\r\n        // Fallback to support a bad name\r\n        // https://openlayers.org/en/v5.3.0/apidoc/module-ol_source_ImageWMS-ImageWMS.html#getGetFeatureInfoUrl\r\n        const fallbackOl5 =\r\n            'getFeatureInfoUrl' in source\r\n                ? 'getFeatureInfoUrl'\r\n                : 'getGetFeatureInfoUrl';\r\n\r\n        const url = source[fallbackOl5](\r\n            coordinate,\r\n            view.getResolution(),\r\n            view.getProjection().getCode(),\r\n            {\r\n                INFO_FORMAT: 'application/json',\r\n                BUFFER: buffer, // Buffer es el \"hit tolerance\" para capas ráster\r\n                FEATURE_COUNT: 1,\r\n                EXCEPTIONS: 'application/json'\r\n            }\r\n        );\r\n\r\n        const geoserver = this.getGeoserver();\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                headers: geoserver.getHeaders(),\r\n                credentials: geoserver.getCredentials()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\r\n                    `${I18N.errors.getFeatures} ${response.status}`\r\n                );\r\n            }\r\n\r\n            const data = await response.json();\r\n            const features = this._formatGeoJSON.readFeatures(data);\r\n\r\n            return features;\r\n        } catch (err) {\r\n            showError(err.message, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    refresh() {\r\n        const source = this.getSource();\r\n\r\n        // Refrescamos el wms\r\n        source.refresh();\r\n\r\n        // Force refresh the tiles\r\n        const params = source.getParams();\r\n        params.t = new Date().getMilliseconds();\r\n        source.updateParams(params);\r\n    }\r\n\r\n    /**\r\n     * Use this to update Geoserver Wfs Vendors (https://docs.geoserver.org/latest/en/user/services/wfs/vendor.html)\r\n     * and other arguements (https://docs.geoserver.org/stable/en/user/services/wfs/reference.html)\r\n     * in all the getFeature requests.\r\n     *\r\n     * Example: you can use this to set a cql_filter, limit the numbers of features, etc.\r\n     *\r\n     * @public\r\n     * @param paramName\r\n     * @param value\r\n     * @param refresh\r\n     */\r\n    setCustomParam(\r\n        paramName: string,\r\n        value: string = null,\r\n        refresh = true\r\n    ): URLSearchParams {\r\n        const source = this.getSource();\r\n\r\n        source.updateParams({\r\n            [paramName]: value\r\n        });\r\n\r\n        if (refresh) {\r\n            this.refresh();\r\n        }\r\n\r\n        return source.getParams();\r\n    }\r\n}\r\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.3.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","export default function createElement(tagName, attrs = {}, ...children) {\r\n    if (typeof tagName === 'function') return tagName(attrs, children);\r\n\r\n    const elem =\r\n        tagName === null\r\n            ? new DocumentFragment()\r\n            : document.createElement(tagName);\r\n\r\n    Object.entries(attrs || {}).forEach(([name, value]) => {\r\n        if (\r\n            typeof value !== undefined &&\r\n            value !== null &&\r\n            value !== undefined\r\n        ) {\r\n            if (name.startsWith('on') && name.toLowerCase() in window)\r\n                elem.addEventListener(name.toLowerCase().substr(2), value);\r\n            else {\r\n                if (name === 'className')\r\n                    elem.setAttribute('class', value.toString());\r\n                else if (name === 'htmlFor')\r\n                    elem.setAttribute('for', value.toString());\r\n                else elem.setAttribute(name, value.toString());\r\n            }\r\n        }\r\n    });\r\n\r\n    for (const child of children) {\r\n        if (!child) continue;\r\n        if (Array.isArray(child)) elem.append(...child);\r\n        else {\r\n            if (child.nodeType === undefined) elem.innerHTML += child;\r\n            else elem.appendChild(child);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n","import { Observable } from 'ol';\r\nimport { SelectEvent } from 'ol/interaction/Select';\r\n\r\nimport { Options, WfsLayer, WmsLayer } from '../ol-wfst';\r\nimport myPragma from '../myPragma';\r\n\r\nimport uploadSvg from '../assets/images/upload.svg';\r\nimport drawSvg from '../assets/images/draw.svg';\r\nimport visibilityOn from '../assets/images/visibilityOn.svg';\r\nimport visibilityOff from '../assets/images/visibilityOff.svg';\r\n\r\nimport { GeometryType } from '../@enums';\r\nimport {\r\n    getActiveLayerToInsertEls,\r\n    getStoredMapLayers,\r\n    setActiveLayerToInsertEls\r\n} from './state';\r\nimport { I18N } from './i18n';\r\nimport Uploads from './Uploads';\r\nimport { BaseLayerProperty } from './base/BaseLayer';\r\n\r\n/**\r\n * Removes in the DOM the class of the tools\r\n * @private\r\n */\r\nexport const resetStateButtons = (): void => {\r\n    const activeBtn = document.querySelector(\r\n        '.ol-wfst--tools-control-btn.wfst--active'\r\n    );\r\n    if (activeBtn) {\r\n        activeBtn.classList.remove('wfst--active');\r\n    }\r\n};\r\n\r\nexport const activateModeButtons = () => {\r\n    const btn = document.querySelector('.ol-wfst--tools-control-btn-edit');\r\n    if (btn) {\r\n        btn.classList.add('wfst--active');\r\n    }\r\n};\r\n\r\nexport const activateDrawButton = () => {\r\n    const btn = document.querySelector('.ol-wfst--tools-control-btn-draw');\r\n    if (btn) {\r\n        btn.classList.add('wfst--active');\r\n    }\r\n};\r\n\r\nexport const visibleLayer = (bool = true) => {\r\n    const btn = document.querySelector('.ol-wfst--tools-control-btn-draw');\r\n    if (btn) {\r\n        btn.classList.add('wfst--active');\r\n    }\r\n};\r\n\r\nexport default class LayersControl extends Observable {\r\n    protected _uploads: Uploads;\r\n    protected _uploadFormats: Options['uploadFormats'];\r\n\r\n    constructor(uploads: Uploads, uploadFormats: Options['uploadFormats']) {\r\n        super();\r\n\r\n        this._uploads = uploads;\r\n        this._uploadFormats = uploadFormats;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param layer\r\n     * @public\r\n     */\r\n    addLayerEl(layer: WfsLayer | WmsLayer) {\r\n        const container = document.querySelector(\r\n            '.wfst--tools-control--select-layers'\r\n        );\r\n\r\n        const layerName = layer.get(BaseLayerProperty.NAME) as string;\r\n        const checked =\r\n            layer === getActiveLayerToInsertEls() ? { checked: 'checked' } : {};\r\n\r\n        const input = (\r\n            <input\r\n                value={layerName}\r\n                id={`wfst--${layerName}`}\r\n                type=\"radio\"\r\n                className=\"ol-wfst--tools-control-input\"\r\n                name=\"wfst--select-layer\"\r\n                {...checked}\r\n                onchange={(evt) => this._layerChangeHandler(evt, layer)}\r\n            />\r\n        );\r\n\r\n        const layerDom = (\r\n            <div\r\n                className={`wfst--layer-control \r\n                            ${layer.getVisible() ? 'ol-wfst--visible-on' : ''}\r\n                            ${\r\n                                layer === getActiveLayerToInsertEls()\r\n                                    ? 'ol-wfst--selected-on'\r\n                                    : ''\r\n                            }`}\r\n                data-layer={layerName}\r\n            >\r\n                <div className=\"ol-wfst--tools-control-visible\">\r\n                    <span\r\n                        className=\"ol-wfst--tools-control-visible-btn ol-wfst--visible-btn-on\"\r\n                        title={I18N.labels.toggleVisibility}\r\n                        onclick={(evt) => this._visibilityClickHandler(evt)}\r\n                    >\r\n                        <img src={visibilityOn} />\r\n                    </span>\r\n                    <span\r\n                        className=\"ol-wfst--tools-control-visible-btn ol-wfst--visible-btn-off\"\r\n                        title={I18N.labels.toggleVisibility}\r\n                        onclick={(evt) => this._visibilityClickHandler(evt)}\r\n                    >\r\n                        <img src={visibilityOff} />\r\n                    </span>\r\n                </div>\r\n                <label htmlFor={`wfst--${layerName}`}>\r\n                    {input}\r\n                    <span\r\n                        title={layer.getDescribeFeatureType()._parsed.geomType}\r\n                    >\r\n                        {layer.get(BaseLayerProperty.LABEL)}\r\n                    </span>\r\n                </label>\r\n            </div>\r\n        );\r\n\r\n        container.appendChild(layerDom);\r\n\r\n        if (layer === getActiveLayerToInsertEls()) {\r\n            input.dispatchEvent(new Event('change'));\r\n        }\r\n\r\n        return layerDom;\r\n    }\r\n\r\n    /**\r\n     * Update geom Types availibles to select for this layer\r\n     *\r\n     * @param layerName\r\n     * @param geomDrawTypeSelected\r\n     * @private\r\n     */\r\n    _changeStateSelect(\r\n        layer: WmsLayer | WfsLayer,\r\n        geomDrawTypeSelected: GeometryType = null\r\n    ): GeometryType {\r\n        /**\r\n         * Set the geometry type in the select according to the geometry of\r\n         * the layer in the geoserver and disable what does not correspond.\r\n         *\r\n         * @param value\r\n         * @param options\r\n         * @private\r\n         */\r\n        const setSelectState = (\r\n            value: GeometryType,\r\n            options: Array<string> | 'all'\r\n        ): void => {\r\n            Array.from(selectDraw.options).forEach(\r\n                (option: HTMLOptionElement) => {\r\n                    option.selected = option.value === value ? true : false;\r\n                    option.disabled =\r\n                        options === 'all'\r\n                            ? false\r\n                            : options.includes(option.value)\r\n                            ? false\r\n                            : true;\r\n                    option.title = option.disabled\r\n                        ? I18N.labels.geomTypeNotSupported\r\n                        : '';\r\n                }\r\n            );\r\n        };\r\n\r\n        const selectDraw = document.querySelector(\r\n            '.wfst--tools-control--select-draw'\r\n        ) as HTMLSelectElement;\r\n\r\n        let drawType: GeometryType;\r\n\r\n        if (selectDraw) {\r\n            const geomLayer = layer.getDescribeFeatureType()._parsed.geomType;\r\n\r\n            if (geomDrawTypeSelected) {\r\n                drawType = selectDraw.value as GeometryType;\r\n            } else {\r\n                if (geomLayer === GeometryType.GeometryCollection) {\r\n                    drawType = GeometryType.LineString; // Default drawing type for GeometryCollection\r\n                    setSelectState(drawType, 'all');\r\n                } else if (geomLayer === GeometryType.LinearRing) {\r\n                    drawType = GeometryType.LineString; // Default drawing type for GeometryCollection\r\n                    setSelectState(drawType, [\r\n                        GeometryType.Circle,\r\n                        GeometryType.LinearRing,\r\n                        GeometryType.Polygon\r\n                    ]);\r\n                    selectDraw.value = drawType;\r\n                } else {\r\n                    drawType = geomLayer;\r\n                    setSelectState(drawType, [geomLayer]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return drawType;\r\n    }\r\n\r\n    _visibilityClickHandler(evt) {\r\n        const btn = evt.currentTarget;\r\n        const parentDiv = btn.closest('.wfst--layer-control') as HTMLElement;\r\n        const layerName = parentDiv.dataset['layer'];\r\n        parentDiv.classList.toggle('ol-wfst--visible-on');\r\n        const layer = getStoredMapLayers()[layerName];\r\n        if (parentDiv.classList.contains('ol-wfst--visible-on')) {\r\n            layer.setVisible(true);\r\n        } else {\r\n            layer.setVisible(false);\r\n        }\r\n    }\r\n\r\n    _layerChangeHandler(evt, layer) {\r\n        const radioInput = evt.currentTarget;\r\n        const parentDiv = radioInput.closest(\r\n            '.wfst--layer-control'\r\n        ) as HTMLElement;\r\n\r\n        // Deselect DOM previous layer\r\n        const selected = document.querySelector('.ol-wfst--selected-on');\r\n\r\n        if (selected) selected.classList.remove('ol-wfst--selected-on');\r\n\r\n        // Select this layer\r\n        parentDiv.classList.add('ol-wfst--selected-on');\r\n        setActiveLayerToInsertEls(layer);\r\n        this._changeStateSelect(layer);\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        return (\r\n            <>\r\n                <div className=\"wfst--tools-control--head\">\r\n                    {this._uploads && (\r\n                        <div>\r\n                            <input\r\n                                id=\"ol-wfst--upload\"\r\n                                type=\"file\"\r\n                                accept={this._uploadFormats}\r\n                                onchange={(evt: InputEvent) =>\r\n                                    this._uploads.process(evt)\r\n                                }\r\n                            />\r\n                            <label\r\n                                className=\"ol-wfst--tools-control-btn ol-wfst--tools-control-btn-upload\"\r\n                                htmlFor=\"ol-wfst--upload\"\r\n                                title={I18N.labels.uploadToLayer}\r\n                            >\r\n                                <img src={uploadSvg} />\r\n                            </label>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"ol-wfst--tools-control-draw-cnt\">\r\n                        <button\r\n                            className=\"ol-wfst--tools-control-btn ol-wfst--tools-control-btn-draw\"\r\n                            type=\"button\"\r\n                            title={I18N.labels.addElement}\r\n                            onclick={() => {\r\n                                this.dispatchEvent('drawMode');\r\n                            }}\r\n                        >\r\n                            <img src={drawSvg} />\r\n                        </button>\r\n                        <select\r\n                            title={I18N.labels.selectDrawType}\r\n                            className=\"wfst--tools-control--select-draw\"\r\n                            onchange={(evt: SelectEvent) => {\r\n                                const selectedValue = evt.target\r\n                                    .value as GeometryType;\r\n                                this._changeStateSelect(\r\n                                    getActiveLayerToInsertEls(),\r\n                                    selectedValue\r\n                                );\r\n                                this.dispatchEvent('changeGeom');\r\n                            }}\r\n                        >\r\n                            {[\r\n                                GeometryType.Point,\r\n                                GeometryType.MultiPoint,\r\n                                GeometryType.LineString,\r\n                                GeometryType.MultiLineString,\r\n                                GeometryType.Polygon,\r\n                                GeometryType.MultiPolygon,\r\n                                GeometryType.Circle\r\n                            ].map((type) => {\r\n                                // Show all options, but enable only the accepted ones\r\n                                return <option value={type}>{type}</option>;\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"wfst--tools-control--select-layers\"></div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","var img = \"data:image/svg+xml,%3csvg version='1.1' xmlns='http://www.w3.org/2000/svg' width='768' height='768' viewBox='0 0 768 768'%3e%3cpath d='M384 288q39 0 67.5 28.5t28.5 67.5-28.5 67.5-67.5 28.5-67.5-28.5-28.5-67.5 28.5-67.5 67.5-28.5zM384 544.5q66 0 113.25-47.25t47.25-113.25-47.25-113.25-113.25-47.25-113.25 47.25-47.25 113.25 47.25 113.25 113.25 47.25zM384 144q118.5 0 214.5 66t138 174q-42 108-138 174t-214.5 66-214.5-66-138-174q42-108 138-174t214.5-66z'%3e%3c/path%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg version='1.1' xmlns='http://www.w3.org/2000/svg' width='768' height='768' viewBox='0 0 768 768'%3e%3cpath d='M379.5 288h4.5q39 0 67.5 28.5t28.5 67.5v6zM241.5 313.5q-18 36-18 70.5 0 66 47.25 113.25t113.25 47.25q34.5 0 70.5-18l-49.5-49.5q-12 3-21 3-39 0-67.5-28.5t-28.5-67.5q0-9 3-21zM64.5 136.5l40.5-40.5 567 567-40.5 40.5q-7.5-7.5-47.25-46.5t-60.75-60q-64.5 27-139.5 27-118.5 0-214.5-66t-138-174q16.5-39 51.75-86.25t68.25-72.75q-18-18-50.25-51t-36.75-37.5zM384 223.5q-30 0-58.5 12l-69-69q58.5-22.5 127.5-22.5 118.5 0 213.75 66t137.25 174q-36 88.5-109.5 151.5l-93-93q12-28.5 12-58.5 0-66-47.25-113.25t-113.25-47.25z'%3e%3c/path%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg version='1.1' xmlns='http://www.w3.org/2000/svg' width='512' height='512' viewBox='0 0 512 512'%3e%3cpath d='M240 352h-240v128h480v-128h-240zM448 416h-64v-32h64v32zM112 160l128-128 128 128h-80v160h-96v-160z'%3e%3c/path%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg version='1.1' xmlns='http://www.w3.org/2000/svg' width='768' height='768' viewBox='0 0 768 768'%3e %3cpath d='M663 225l-58.5 58.5-120-120 58.5-58.5q9-9 22.5-9t22.5 9l75 75q9 9 9 22.5t-9 22.5zM96 552l354-354 120 120-354 354h-120v-120z'%3e%3c/path%3e%3c/svg%3e\";\n  export default img;","import VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\n\r\nlet editLayer = new VectorLayer({\r\n    source: new VectorSource(),\r\n    zIndex: 100\r\n});\r\n\r\nexport const getEditLayer = (): VectorLayer<VectorSource> => {\r\n    return editLayer;\r\n};\r\n","// Ol\r\nimport {\r\n    Geometry,\r\n    LineString,\r\n    MultiLineString,\r\n    MultiPoint,\r\n    MultiPolygon,\r\n    Point,\r\n    Polygon\r\n} from 'ol/geom';\r\nimport { Feature, Observable } from 'ol';\r\nimport { GeoJSON, KML, WFS } from 'ol/format';\r\n\r\n// External\r\nimport Modal from 'modal-vanilla';\r\n\r\nimport { Options } from '../ol-wfst';\r\nimport { showError } from './errors';\r\nimport { resetStateButtons } from './LayersControl';\r\nimport { getEditLayer } from './editLayer';\r\nimport { getActiveLayerToInsertEls, getMap } from './state';\r\nimport { GeometryType } from '../@enums';\r\nimport { I18N } from './i18n';\r\nimport { VectorSourceEvent } from 'ol/source/Vector';\r\nimport { BaseLayerProperty } from './base/BaseLayer';\r\n\r\nexport default class Uploads extends Observable {\r\n    protected _options: Options;\r\n\r\n    // Formats\r\n    protected _formatWFS: WFS;\r\n    protected _formatGeoJSON: GeoJSON;\r\n    protected _formatKml: KML;\r\n    protected _xs: XMLSerializer;\r\n\r\n    protected _processUpload: Options['processUpload'];\r\n\r\n    constructor(options: Options) {\r\n        super();\r\n\r\n        this._options = options;\r\n\r\n        this._processUpload = options.processUpload;\r\n\r\n        // Formats\r\n        this._formatWFS = new WFS();\r\n\r\n        this._formatGeoJSON = new GeoJSON();\r\n        this._formatKml = new KML({\r\n            extractStyles: false,\r\n            showPointNames: false\r\n        });\r\n        this._xs = new XMLSerializer();\r\n    }\r\n\r\n    /**\r\n     * Parse and check geometry of uploaded files\r\n     *\r\n     * @param evt\r\n     * @public\r\n     */\r\n    async process(evt: Event): Promise<void> {\r\n        const map = getMap();\r\n        const view = map.getView();\r\n\r\n        const file = (evt.target as HTMLInputElement).files[0];\r\n\r\n        let features: Array<Feature<Geometry>>;\r\n\r\n        if (!file) {\r\n            return;\r\n        }\r\n\r\n        const extension = file.name.split('.').pop().toLowerCase();\r\n\r\n        try {\r\n            // If the user uses a custom fucntion...\r\n            if (this._processUpload) {\r\n                features = this._processUpload(file);\r\n            }\r\n\r\n            // If the user functions return features, we dont process anything more\r\n            if (!features) {\r\n                const string = await this._fileReader(file);\r\n\r\n                if (extension === 'geojson' || extension === 'json') {\r\n                    features = this._formatGeoJSON.readFeatures(string, {\r\n                        featureProjection: view.getProjection().getCode()\r\n                    });\r\n                } else if (extension === 'kml') {\r\n                    features = this._formatKml.readFeatures(string, {\r\n                        featureProjection: view.getProjection().getCode()\r\n                    });\r\n                } else {\r\n                    showError(I18N.errors.badFormat);\r\n                }\r\n            }\r\n\r\n            let invalidFeaturesCount = 0;\r\n            let validFeaturesCount = 0;\r\n\r\n            const featuresToInsert: Array<Feature<Geometry>> = [];\r\n\r\n            for (let feature of features) {\r\n                // If the geometry doesn't correspond to the layer, try to fixit.\r\n                // If we can't, don't use it\r\n                if (!this._checkGeometry(feature)) {\r\n                    feature = this._fixGeometry(feature);\r\n                }\r\n\r\n                if (feature) {\r\n                    featuresToInsert.push(feature);\r\n                    validFeaturesCount++;\r\n                } else {\r\n                    invalidFeaturesCount++;\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (!validFeaturesCount) {\r\n                showError(I18N.errors.noValidGeometry);\r\n            } else {\r\n                resetStateButtons();\r\n\r\n                this.dispatchEvent(\r\n                    new VectorSourceEvent(\r\n                        'loadedFeatures',\r\n                        null,\r\n                        featuresToInsert\r\n                    )\r\n                );\r\n\r\n                const content = `\r\n            ${I18N.labels.validFeatures}: ${validFeaturesCount}<br>\r\n            ${\r\n                invalidFeaturesCount\r\n                    ? `${I18N.labels.invalidFeatures}: ${invalidFeaturesCount}`\r\n                    : ''\r\n            }`;\r\n\r\n                this._initModal(content, featuresToInsert);\r\n            }\r\n\r\n            // Reset the input to allow another onChange trigger\r\n            (evt.target as HTMLInputElement).value = null;\r\n        } catch (err) {\r\n            showError(I18N.errors.badFile, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Read data file\r\n     * @param file\r\n     * @public\r\n     */\r\n    async _fileReader(file: File): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n\r\n            reader.addEventListener('load', async (e) => {\r\n                const fileData = e.target.result;\r\n                resolve(fileData as string);\r\n            });\r\n\r\n            reader.addEventListener('error', (err) => {\r\n                console.error('Error' + err);\r\n                reject();\r\n            });\r\n            reader.readAsText(file);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Attemp to change the geometry feature to the layer\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _fixGeometry(feature: Feature<Geometry>): Feature<Geometry> {\r\n        // Geometry of the layer\r\n        const geomTypeLayer =\r\n            getActiveLayerToInsertEls().getDescribeFeatureType()._parsed\r\n                .geomType;\r\n        const geomTypeFeature = feature.getGeometry().getType();\r\n        let geom: Geometry;\r\n\r\n        switch (geomTypeFeature) {\r\n            case GeometryType.Point: {\r\n                if (geomTypeLayer === GeometryType.MultiPoint) {\r\n                    const coords = (\r\n                        feature.getGeometry() as Point\r\n                    ).getCoordinates();\r\n                    geom = new MultiPoint([coords]);\r\n                }\r\n                break;\r\n            }\r\n\r\n            case GeometryType.LineString:\r\n                if (geomTypeLayer === GeometryType.MultiLineString) {\r\n                    const coords = (\r\n                        feature.getGeometry() as LineString\r\n                    ).getCoordinates();\r\n                    geom = new MultiLineString([coords]);\r\n                }\r\n                break;\r\n\r\n            case GeometryType.Polygon:\r\n                if (geomTypeLayer === GeometryType.MultiPolygon) {\r\n                    const coords = (\r\n                        feature.getGeometry() as Polygon\r\n                    ).getCoordinates();\r\n                    geom = new MultiPolygon([coords]);\r\n                }\r\n                break;\r\n            default:\r\n                geom = null;\r\n        }\r\n\r\n        if (!geom) {\r\n            return null;\r\n        }\r\n\r\n        feature.setGeometry(geom);\r\n        return feature;\r\n    }\r\n\r\n    /**\r\n     * Check if the feature has the same geometry as the target layer\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _checkGeometry(feature: Feature<Geometry>): boolean {\r\n        // Geometry of the layer\r\n        const geomTypeLayer =\r\n            getActiveLayerToInsertEls().getDescribeFeatureType()._parsed\r\n                .geomType;\r\n        const geomTypeFeature = feature.getGeometry().getType();\r\n\r\n        // This geom accepts every type of geometry\r\n        if (geomTypeLayer === GeometryType.GeometryCollection) {\r\n            return true;\r\n        }\r\n\r\n        return geomTypeFeature === geomTypeLayer;\r\n    }\r\n\r\n    /**\r\n     * Confirm modal before transact to the GeoServer the features in the file\r\n     *\r\n     * @param content\r\n     * @param featuresToInsert\r\n     * @private\r\n     */\r\n    _initModal(\r\n        content: string,\r\n        featuresToInsert: Array<Feature<Geometry>>\r\n    ): void {\r\n        const footer = `\r\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" data-dismiss=\"modal\">\r\n            ${I18N.labels.cancel}\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" data-action=\"save\" data-dismiss=\"modal\">\r\n            ${I18N.labels.upload}\r\n        </button>\r\n    `;\r\n\r\n        const modal = new Modal({\r\n            ...this._options.modal,\r\n            header: true,\r\n            headerClose: false,\r\n            title:\r\n                I18N.labels.uploadFeatures +\r\n                ' ' +\r\n                getActiveLayerToInsertEls().get(BaseLayerProperty.NAME),\r\n            content: content,\r\n            backdrop: 'static', // Prevent close on click outside the modal\r\n            footer: footer\r\n        }).show();\r\n\r\n        modal.on('dismiss', (modal, event) => {\r\n            // On saving changes\r\n            if (event.target.dataset.action === 'save') {\r\n                this.dispatchEvent(\r\n                    new VectorSourceEvent(\r\n                        'addedFeatures',\r\n                        null,\r\n                        featuresToInsert\r\n                    )\r\n                );\r\n            } else {\r\n                // On cancel button\r\n                getEditLayer().getSource().clear();\r\n            }\r\n        });\r\n    }\r\n}\r\n","/**\r\n * @param target\r\n * @param sources\r\n * @returns\r\n */\r\nexport const deepObjectAssign = (target, ...sources) => {\r\n    sources.forEach((source) => {\r\n        Object.keys(source).forEach((key) => {\r\n            const s_val = source[key];\r\n            const t_val = target[key];\r\n            target[key] =\r\n                t_val &&\r\n                s_val &&\r\n                typeof t_val === 'object' &&\r\n                typeof s_val === 'object' &&\r\n                !Array.isArray(t_val) // Don't merge arrays\r\n                    ? deepObjectAssign(t_val, s_val)\r\n                    : s_val;\r\n        });\r\n    });\r\n    return target;\r\n};\r\n","import { Feature } from 'ol';\r\nimport { Geometry } from 'ol/geom';\r\nimport { Control } from 'ol/control';\r\nimport { VectorSourceEvent } from 'ol/source/Vector';\r\nimport { CombinedOnSignature, EventTypes, OnSignature } from 'ol/Observable';\r\nimport BaseEvent from 'ol/events/Event';\r\nimport { EventsKey } from 'ol/events';\r\nimport { ObjectEvent } from 'ol/Object';\r\nimport { Types as ObjectEventTypes } from 'ol/ObjectEventType';\r\n\r\nimport myPragma from '../myPragma';\r\nimport { I18N } from './i18n';\r\n\r\ntype ChangesEventTypes = 'cancel' | 'apply' | 'delete';\r\n\r\nexport default class EditControlChangesEl extends Control {\r\n    declare on: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<ChangesEventTypes, VectorSourceEvent, EventsKey> &\r\n        OnSignature<ObjectEventTypes, ObjectEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            ChangesEventTypes | ObjectEventTypes | EventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare once: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<ChangesEventTypes, VectorSourceEvent, EventsKey> &\r\n        OnSignature<ObjectEventTypes, ObjectEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            ChangesEventTypes | ObjectEventTypes | EventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare un: OnSignature<EventTypes, BaseEvent, void> &\r\n        OnSignature<ChangesEventTypes, VectorSourceEvent, EventsKey> &\r\n        OnSignature<ObjectEventTypes, ObjectEvent, void> &\r\n        CombinedOnSignature<\r\n            ChangesEventTypes | ObjectEventTypes | EventTypes,\r\n            void\r\n        >;\r\n\r\n    constructor(feature: Feature<Geometry>) {\r\n        super({\r\n            element: (\r\n                <div className=\"ol-wfst--changes-control\">\r\n                    <div className=\"ol-wfst--changes-control-el\">\r\n                        <div className=\"ol-wfst--changes-control-id\">\r\n                            <b>{I18N.labels.editMode}</b> -{' '}\r\n                            <i>{String(feature.getId())}</i>\r\n                        </div>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-sm btn-secondary\"\r\n                            onclick={() => {\r\n                                this.dispatchEvent(\r\n                                    new VectorSourceEvent('cancel', feature)\r\n                                );\r\n                            }}\r\n                        >\r\n                            {I18N.labels.cancel}\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-sm btn-primary\"\r\n                            onclick={() => {\r\n                                this.dispatchEvent(\r\n                                    new VectorSourceEvent('apply', feature)\r\n                                );\r\n                            }}\r\n                        >\r\n                            {I18N.labels.apply}\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-sm btn-danger-outline\"\r\n                            onclick={() => {\r\n                                this.dispatchEvent(\r\n                                    new VectorSourceEvent('delete', feature)\r\n                                );\r\n                            }}\r\n                        >\r\n                            {I18N.labels.delete}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n}\r\n","// Ol\r\nimport {\r\n    Geometry,\r\n    GeometryCollection,\r\n    LineString,\r\n    MultiLineString,\r\n    MultiPoint,\r\n    MultiPolygon,\r\n    Polygon\r\n} from 'ol/geom';\r\nimport { Circle as CircleStyle, Fill, Stroke, Style } from 'ol/style';\r\nimport { Feature } from 'ol';\r\nimport { FeatureLike } from 'ol/Feature';\r\nimport { Coordinate } from 'ol/coordinate';\r\n\r\nimport { GeometryType } from '../@enums';\r\nimport { getMode, Modes } from './state';\r\n\r\n/**\r\n * Master style that handles two modes on the Edit Layer:\r\n * - one is the basic, showing only the vertices\r\n * - and the other when modify is active, showing bigger vertices\r\n *\r\n * @param feature\r\n * @private\r\n */\r\nexport default function styleFunction(\r\n    feature: Feature<Geometry>\r\n): Array<Style> {\r\n    const getVertexs = (feature: FeatureLike) => {\r\n        let geometry = feature.getGeometry();\r\n\r\n        if (geometry instanceof GeometryCollection) {\r\n            geometry = geometry.getGeometries()[0];\r\n        }\r\n\r\n        const coordinates = (geometry as LineString).getCoordinates();\r\n        let flatCoordinates: Coordinate[] | number[] = null;\r\n\r\n        if (\r\n            geometry instanceof Polygon ||\r\n            geometry instanceof MultiLineString\r\n        ) {\r\n            flatCoordinates = coordinates.flat(1);\r\n        } else if (geometry instanceof MultiPolygon) {\r\n            flatCoordinates = coordinates.flat(2);\r\n        } else {\r\n            flatCoordinates = coordinates;\r\n        }\r\n\r\n        if (!flatCoordinates || !flatCoordinates.length) {\r\n            return;\r\n        }\r\n\r\n        return new MultiPoint(flatCoordinates as Coordinate[]);\r\n    };\r\n\r\n    let geometry = feature.getGeometry();\r\n    let type = geometry.getType();\r\n\r\n    if (geometry instanceof GeometryCollection) {\r\n        geometry = geometry.getGeometries()[0];\r\n        type = geometry.getType();\r\n    }\r\n\r\n    switch (type) {\r\n        case GeometryType.Point:\r\n        case GeometryType.MultiPoint:\r\n            if (getMode() === Modes.Edit) {\r\n                return [\r\n                    new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 6,\r\n                            fill: new Fill({\r\n                                color: '#000000'\r\n                            })\r\n                        })\r\n                    }),\r\n                    new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 4,\r\n                            fill: new Fill({\r\n                                color: '#ff0000'\r\n                            })\r\n                        })\r\n                    })\r\n                ];\r\n            } else {\r\n                return [\r\n                    new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 5,\r\n                            fill: new Fill({\r\n                                color: '#ff0000'\r\n                            })\r\n                        })\r\n                    }),\r\n                    new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 2,\r\n                            fill: new Fill({\r\n                                color: '#000000'\r\n                            })\r\n                        })\r\n                    })\r\n                ];\r\n            }\r\n        default:\r\n            // If editing mode is active, show bigger vertex\r\n            if (getMode() == Modes.Draw || getMode() == Modes.Edit) {\r\n                return [\r\n                    new Style({\r\n                        stroke: new Stroke({\r\n                            color: 'rgba( 255, 0, 0, 1)',\r\n                            width: 4\r\n                        }),\r\n                        fill: new Fill({\r\n                            color: 'rgba(255, 0, 0, 0.7)'\r\n                        })\r\n                    }),\r\n                    new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 4,\r\n                            fill: new Fill({\r\n                                color: '#ff0000'\r\n                            }),\r\n                            stroke: new Stroke({\r\n                                width: 2,\r\n                                color: 'rgba(5, 5, 5, 0.9)'\r\n                            })\r\n                        }),\r\n                        geometry: (feature) => getVertexs(feature)\r\n                    }),\r\n                    new Style({\r\n                        stroke: new Stroke({\r\n                            color: 'rgba(255, 255, 255, 0.7)',\r\n                            width: 2\r\n                        })\r\n                    })\r\n                ];\r\n            } else {\r\n                return [\r\n                    new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 2,\r\n                            fill: new Fill({\r\n                                color: '#000000'\r\n                            })\r\n                        }),\r\n                        geometry: (feature) => getVertexs(feature)\r\n                    }),\r\n                    new Style({\r\n                        stroke: new Stroke({\r\n                            color: '#ff0000',\r\n                            width: 4\r\n                        }),\r\n                        fill: new Fill({\r\n                            color: 'rgba(255, 0, 0, 0.7)'\r\n                        })\r\n                    })\r\n                ];\r\n            }\r\n    }\r\n}\r\n","// Ol\r\nimport { Feature, Observable } from 'ol';\r\nimport { Geometry } from 'ol/geom';\r\n\r\n// External\r\nimport Modal from 'modal-vanilla';\r\n\r\nimport { addFeatureToEditedList, getStoredLayer } from './state';\r\nimport { Options } from '../ol-wfst';\r\nimport { I18N } from './i18n';\r\nimport { VectorSourceEvent } from 'ol/source/Vector';\r\n\r\n/**\r\n * Shows a fields form in a modal window to allow changes in the properties of the feature.\r\n *\r\n * @param feature\r\n * @private\r\n */\r\nexport class EditFieldsModal extends Observable {\r\n    protected _options: Options['modal'];\r\n    protected _modal: Modal;\r\n    protected _feature: Feature;\r\n\r\n    constructor(options: Options['modal']) {\r\n        super();\r\n\r\n        this._options = options;\r\n\r\n        const footer = `\r\n            <button type=\"button\" class=\"btn btn-sm btn-link btn-third\" data-action=\"delete\" data-dismiss=\"modal\">\r\n                ${I18N.labels.delete}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" data-dismiss=\"modal\">\r\n                ${I18N.labels.cancel}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-sm btn-primary\" data-action=\"save\" data-dismiss=\"modal\">\r\n                ${I18N.labels.save}\r\n            </button>\r\n        `;\r\n\r\n        this._modal = new Modal({\r\n            ...this._options,\r\n            header: true,\r\n            headerClose: true,\r\n            title: '',\r\n            content: '<div></div>',\r\n            footer: footer\r\n        });\r\n\r\n        this._modal.on('dismiss', (modal, event) => {\r\n            // On saving changes\r\n            if (event.target.dataset.action === 'save') {\r\n                const inputs = modal.el.querySelectorAll('input');\r\n\r\n                inputs.forEach((el: HTMLInputElement) => {\r\n                    const value = el.value;\r\n                    const field = el.name;\r\n                    this._feature.set(field, value, /*isSilent = */ true);\r\n                });\r\n\r\n                this._feature.changed();\r\n\r\n                addFeatureToEditedList(this._feature);\r\n\r\n                this.dispatchEvent(\r\n                    new VectorSourceEvent('save', this._feature)\r\n                );\r\n            } else if (event.target.dataset.action === 'delete') {\r\n                this.dispatchEvent(\r\n                    new VectorSourceEvent('delete', this._feature)\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    show(feature: Feature<Geometry>) {\r\n        this._feature = feature;\r\n\r\n        const title = `${I18N.labels.editElement} ${feature.getId()} `;\r\n\r\n        const properties = feature.getProperties();\r\n        const layerName = feature.get('_layerName_');\r\n\r\n        // Data schema from the geoserver\r\n        const layer = getStoredLayer(layerName);\r\n        const dataSchema = layer.getDescribeFeatureType()._parsed.properties;\r\n\r\n        let content = '<form autocomplete=\"false\">';\r\n        Object.keys(properties).forEach((key) => {\r\n            // If the feature field exists in the geoserver and is not added by openlayers\r\n            const field = dataSchema.find((data) => data.name === key);\r\n\r\n            if (field) {\r\n                const typeXsd = field.type;\r\n                let type;\r\n\r\n                switch (typeXsd) {\r\n                    case 'xsd:string':\r\n                        type = 'text';\r\n                        break;\r\n                    case 'xsd:number':\r\n                    case 'xsd:int':\r\n                        type = 'number';\r\n                        break;\r\n                    case 'xsd:date-time':\r\n                        type = 'datetime';\r\n                        break;\r\n                    default:\r\n                        type = 'text';\r\n                }\r\n\r\n                if (type) {\r\n                    content += `\r\n                <div class=\"ol-wfst--input-field-container\">\r\n                    <label class=\"ol-wfst--input-field-label\" for=\"${key}\">${key}</label>\r\n                    <input placeholder=\"NULL\" class=\"ol-wfst--input-field-input\" type=\"${type}\" name=\"${key}\" value=\"${\r\n                        properties[key] || ''\r\n                    }\">\r\n                </div>`;\r\n                }\r\n            }\r\n        });\r\n\r\n        content += '</form>';\r\n\r\n        this._modal._html.body.innerHTML = content;\r\n        this._modal._html.header.innerHTML = title;\r\n        this._modal.show();\r\n    }\r\n}\r\n","// Ol\r\nimport BaseObject, { ObjectEvent } from 'ol/Object';\r\nimport { Types as ObjectEventTypes } from 'ol/ObjectEventType';\r\n\r\nimport { ProjectionLike } from 'ol/proj';\r\nimport Circle from 'ol/geom/Circle';\r\nimport Geometry from 'ol/geom/Geometry';\r\nimport GeometryCollection from 'ol/geom/GeometryCollection';\r\nimport Feature from 'ol/Feature';\r\n\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\nimport KML from 'ol/format/KML';\r\nimport WFS from 'ol/format/WFS';\r\n\r\nimport { State } from 'ol/source/Source';\r\nimport { fromCircle } from 'ol/geom/Polygon';\r\nimport BaseEvent from 'ol/events/Event';\r\nimport { CombinedOnSignature, EventTypes, OnSignature } from 'ol/Observable';\r\nimport { EventsKey } from 'ol/events';\r\nimport { TransactionResponse } from 'ol/format/WFS';\r\n\r\nimport { showLoading } from './modules/loading';\r\nimport { parseError, showError } from './modules/errors';\r\nimport {\r\n    getMap,\r\n    getStoredLayer,\r\n    removeFeatureFromEditList\r\n} from './modules/state';\r\nimport { getEditLayer } from './modules/editLayer';\r\nimport { deepObjectAssign } from './modules/helpers';\r\nimport { I18N } from './modules/i18n';\r\nimport { GeometryType, TransactionType } from './@enums';\r\nimport WmsLayer from './WmsLayer';\r\n\r\n// https://docs.geoserver.org/latest/en/user/services/wfs/axis_order.html\r\n// Axis ordering: latitude/longitude\r\nconst DEFAULT_GEOSERVER_SRS = 'EPSG:3857';\r\n\r\n/**\r\n * @fires change:capabilities\r\n * @extends {ol/Object~BaseObject}\r\n * @param options\r\n */\r\nexport default class Geoserver extends BaseObject {\r\n    protected _options: GeoserverOptions;\r\n\r\n    protected _countRequests: number;\r\n    protected _insertFeatures: Array<Feature<Geometry>>;\r\n    protected _updateFeatures: Array<Feature<Geometry>>;\r\n    protected _deleteFeatures: Array<Feature<Geometry>>;\r\n\r\n    // Formats\r\n    protected _formatWFS: WFS;\r\n    protected _formatGeoJSON: GeoJSON;\r\n    protected _formatKml: KML;\r\n    protected _xs: XMLSerializer;\r\n\r\n    protected state_: State;\r\n\r\n    declare on: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<\r\n            GeoserverEventTypes | ObjectEventTypes,\r\n            ObjectEvent,\r\n            EventsKey\r\n        > &\r\n        CombinedOnSignature<\r\n            GeoserverEventTypes | ObjectEventTypes | EventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare once: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<\r\n            GeoserverEventTypes | ObjectEventTypes,\r\n            ObjectEvent,\r\n            EventsKey\r\n        > &\r\n        CombinedOnSignature<\r\n            GeoserverEventTypes | ObjectEventTypes | EventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare un: OnSignature<EventTypes, BaseEvent, void> &\r\n        OnSignature<GeoserverEventTypes | ObjectEventTypes, ObjectEvent, void> &\r\n        CombinedOnSignature<\r\n            GeoserverEventTypes | ObjectEventTypes | EventTypes,\r\n            void\r\n        >;\r\n\r\n    constructor(options: GeoserverOptions) {\r\n        super();\r\n\r\n        const defaults = {\r\n            url: null,\r\n            advanced: {\r\n                getCapabilitiesVersion: '1.3.0',\r\n                getFeatureVersion: '1.0.0',\r\n                describeFeatureTypeVersion: '1.1.0',\r\n                lockFeatureVersion: '1.1.0',\r\n                wfsTransactionVersion: '1.1.0',\r\n                projection: DEFAULT_GEOSERVER_SRS,\r\n                lockFeatureParams: {\r\n                    expiry: 5, // minutes\r\n                    lockId: 'GeoServer',\r\n                    releaseAction: 'SOME'\r\n                }\r\n            },\r\n            headers: {},\r\n            credentials: 'same-origin',\r\n            useLockFeature: true\r\n        };\r\n\r\n        this._options = deepObjectAssign(defaults, options);\r\n\r\n        this.setAdvanced(this._options.advanced);\r\n        this.setHeaders(this._options.headers);\r\n        this.setCredentials(this._options.credentials);\r\n        this.setUrl(this._options.url);\r\n        this.setUseLockFeature(this._options.useLockFeature);\r\n\r\n        this._countRequests = 0;\r\n\r\n        this._insertFeatures = [];\r\n        this._updateFeatures = [];\r\n        this._deleteFeatures = [];\r\n\r\n        // Formats\r\n        this._formatWFS = new WFS();\r\n\r\n        this._formatGeoJSON = new GeoJSON();\r\n        this._formatKml = new KML({\r\n            extractStyles: false,\r\n            showPointNames: false\r\n        });\r\n        this._xs = new XMLSerializer();\r\n\r\n        this.getAndUpdateCapabilities();\r\n\r\n        this.on('change:capabilities', () => {\r\n            this._checkGeoserverCapabilities();\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getCapabilities(): XMLDocument {\r\n        return this.get(GeoserverProperty.CAPABILITIES);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param url\r\n     * @param opt_silent\r\n     * @public\r\n     */\r\n    setUrl(url: string, opt_silent = false): void {\r\n        this.set(GeoserverProperty.URL, url, opt_silent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     */\r\n    getUrl(): string {\r\n        return this.get(GeoserverProperty.URL);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param headers\r\n     * @param opt_silent\r\n     * @returns\r\n     * @public\r\n     */\r\n    setHeaders(headers: HeadersInit = {}, opt_silent = false): void {\r\n        return this.set(GeoserverProperty.HEADERS, headers, opt_silent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getHeaders(): HeadersInit {\r\n        return this.get(GeoserverProperty.HEADERS);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param credentials\r\n     * @param opt_silent\r\n     * @public\r\n     */\r\n    setCredentials(\r\n        credentials: RequestCredentials = null,\r\n        opt_silent = false\r\n    ): void {\r\n        this.set(GeoserverProperty.CREDENTIALS, credentials, opt_silent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getCredentials(): RequestCredentials {\r\n        return this.get(GeoserverProperty.CREDENTIALS);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    setAdvanced(advanced: GeoServerAdvanced = {}, opt_silent = false): void {\r\n        this.set(GeoserverProperty.ADVANCED, advanced, opt_silent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getAdvanced(): GeoServerAdvanced {\r\n        return this.get(GeoserverProperty.ADVANCED);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    hasTransaction(): boolean {\r\n        return this.get(GeoserverProperty.HASTRASNACTION);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    hasLockFeature(): boolean {\r\n        return this.get(GeoserverProperty.HASLOCKFEATURE);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    getUseLockFeature(): boolean {\r\n        return this.get(GeoserverProperty.USELOCKFEATURE);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    setUseLockFeature(useLockFeature: boolean, opt_silent = false): void {\r\n        this.set(GeoserverProperty.USELOCKFEATURE, useLockFeature, opt_silent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     * @public\r\n     */\r\n    isLoaded(): boolean {\r\n        return this.get(GeoserverProperty.ISLOADED);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     */\r\n    getState() {\r\n        return this.state_;\r\n    }\r\n\r\n    /**\r\n     * Get the capabilities from the GeoServer and check\r\n     * all the available operations.\r\n     *\r\n     * @fires getcapabilities\r\n     * @public\r\n     */\r\n    async getAndUpdateCapabilities(): Promise<XMLDocument> {\r\n        try {\r\n            const params = new URLSearchParams({\r\n                service: 'wfs',\r\n                version: this.getAdvanced().getCapabilitiesVersion,\r\n                request: 'GetCapabilities',\r\n                exceptions: 'application/json'\r\n            });\r\n\r\n            const url_fetch = this.getUrl() + '?' + params.toString();\r\n\r\n            const response = await fetch(url_fetch, {\r\n                headers: this.getHeaders(),\r\n                credentials: this.getCredentials()\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('');\r\n            }\r\n\r\n            const data = await response.text();\r\n            const capabilities = new window.DOMParser().parseFromString(\r\n                data,\r\n                'text/xml'\r\n            );\r\n\r\n            this.set(GeoserverProperty.CAPABILITIES, capabilities);\r\n\r\n            this.state_ = capabilities ? 'ready' : 'error';\r\n\r\n            return capabilities;\r\n        } catch (err) {\r\n            console.error(err);\r\n            const msg =\r\n                typeof err === 'string' ? err : I18N.errors.capabilities;\r\n            showError(msg, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _checkGeoserverCapabilities() {\r\n        // Available operations in the geoserver\r\n        const operations: HTMLCollectionOf<Element> =\r\n            this.getCapabilities().getElementsByTagName('ows:Operation');\r\n\r\n        Array.from(operations).forEach((operation) => {\r\n            if (operation.getAttribute('name') === 'Transaction') {\r\n                this.set(GeoserverProperty.HASTRASNACTION, true);\r\n            } else if (operation.getAttribute('name') === 'LockFeature') {\r\n                this.set(GeoserverProperty.HASLOCKFEATURE, true);\r\n            } else if (\r\n                operation.getAttribute('name') === 'DescribeFeatureType'\r\n            ) {\r\n                this.set(GeoserverProperty.HASDESCRIBEFEATURETYPE, true);\r\n            }\r\n        });\r\n\r\n        if (!this.hasTransaction()) {\r\n            throw I18N.errors.wfst;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Make the WFS Transactions\r\n     *\r\n     * @param transactionType\r\n     * @param features\r\n     * @param layerName\r\n     * @private\r\n     */\r\n    async transact(\r\n        transactionType: TransactionType,\r\n        features: Array<Feature<Geometry>> | Feature<Geometry>,\r\n        layerName: string\r\n    ): Promise<TransactionResponse | false> {\r\n        features = (\r\n            Array.isArray(features) ? features : [features]\r\n        ) as Feature<Geometry>[];\r\n        const clonedFeatures = [];\r\n        const geoLayer = getStoredLayer(layerName);\r\n\r\n        for (const feature of features) {\r\n            let clone = this._cloneFeature(feature);\r\n            const cloneGeom = clone.getGeometry();\r\n\r\n            // Ugly fix to support GeometryCollection on GML\r\n            // See https://github.com/openlayers/openlayers/issues/4220\r\n            if (cloneGeom instanceof GeometryCollection) {\r\n                this._transformGeoemtryCollectionToGeometries(\r\n                    clone,\r\n                    cloneGeom as GeometryCollection\r\n                );\r\n            } else if (cloneGeom instanceof Circle) {\r\n                // Geoserver has no Support to Circles\r\n                this._transformCircleToPolygon(clone, cloneGeom as Circle);\r\n            }\r\n\r\n            // Filters\r\n            if (\r\n                'beforeTransactFeature' in geoLayer &&\r\n                typeof geoLayer.beforeTransactFeature === 'function'\r\n            ) {\r\n                clone = geoLayer.beforeTransactFeature(clone, transactionType);\r\n            }\r\n\r\n            if (clone) {\r\n                clonedFeatures.push(clone);\r\n            }\r\n        }\r\n\r\n        if (!clonedFeatures.length) {\r\n            showError(I18N.errors.noValidGeometry);\r\n            return false;\r\n        }\r\n\r\n        switch (transactionType) {\r\n            case TransactionType.Insert:\r\n                this._insertFeatures = [\r\n                    ...this._insertFeatures,\r\n                    ...clonedFeatures\r\n                ];\r\n                break;\r\n            case TransactionType.Update:\r\n                this._updateFeatures = [\r\n                    ...this._updateFeatures,\r\n                    ...clonedFeatures\r\n                ];\r\n                break;\r\n            case TransactionType.Delete:\r\n                this._deleteFeatures = [\r\n                    ...this._deleteFeatures,\r\n                    ...clonedFeatures\r\n                ];\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this._countRequests++;\r\n        const numberRequest = this._countRequests;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(async () => {\r\n                try {\r\n                    // Prevent fire multiples times\r\n                    if (numberRequest !== this._countRequests) {\r\n                        return;\r\n                    }\r\n\r\n                    let srs = getMap().getView().getProjection().getCode();\r\n\r\n                    // Force latitude/longitude order on transactions\r\n                    // EPSG:4326 is longitude/latitude (assumption) and is not managed correctly by GML3\r\n                    srs =\r\n                        srs === 'EPSG:4326'\r\n                            ? 'urn:x-ogc:def:crs:EPSG:4326'\r\n                            : srs;\r\n\r\n                    if (!geoLayer || !geoLayer.getDescribeFeatureType()) {\r\n                        throw new Error(\r\n                            `${I18N.errors.layerNotFound}: \"${layerName}\"`\r\n                        );\r\n                    }\r\n\r\n                    const describeFeatureType =\r\n                        geoLayer.getDescribeFeatureType()._parsed;\r\n\r\n                    const options = {\r\n                        featureNS: describeFeatureType.namespace,\r\n                        featureType: layerName,\r\n                        srsName: srs,\r\n                        featurePrefix: null,\r\n                        nativeElements: null,\r\n                        version: this.getAdvanced().wfsTransactionVersion\r\n                    };\r\n\r\n                    const transaction = this._formatWFS.writeTransaction(\r\n                        this._insertFeatures,\r\n                        this._updateFeatures,\r\n                        this._deleteFeatures,\r\n                        options\r\n                    );\r\n\r\n                    let payload = this._xs.serializeToString(transaction);\r\n                    const geomType = describeFeatureType.geomType;\r\n                    const geomField = describeFeatureType.geomField;\r\n\r\n                    // Ugly fix to support GeometryCollection on GML\r\n                    // See https://github.com/openlayers/openlayers/issues/4220\r\n                    if (geomType === GeometryType.GeometryCollection) {\r\n                        if (transactionType === TransactionType.Insert) {\r\n                            payload = payload.replace(\r\n                                /<geometry>/g,\r\n                                `<geometry><MultiGeometry xmlns=\"http://www.opengis.net/gml\" srsName=\"${srs}\"><geometryMember>`\r\n                            );\r\n                            payload = payload.replace(\r\n                                /<\\/geometry>/g,\r\n                                `</geometryMember></MultiGeometry></geometry>`\r\n                            );\r\n                        } else if (transactionType === TransactionType.Update) {\r\n                            const gmemberIn = `<MultiGeometry xmlns=\"http://www.opengis.net/gml\" srsName=\"${srs}\"><geometryMember>`;\r\n                            const gmemberOut = `</geometryMember></MultiGeometry>`;\r\n\r\n                            payload = payload.replace(\r\n                                /(.*)(<Name>geometry<\\/Name><Value>)(.*?)(<\\/Value>)(.*)/g,\r\n                                `$1$2${gmemberIn}$3${gmemberOut}$4$5`\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    // Fixes geometry name, weird bug with GML:\r\n                    // The property for the geometry column is always named \"geometry\"\r\n                    if (transactionType === TransactionType.Insert) {\r\n                        payload = payload.replace(\r\n                            /<(\\/?)\\bgeometry\\b>/g,\r\n                            `<$1${geomField}>`\r\n                        );\r\n                    } else {\r\n                        payload = payload.replace(\r\n                            /<Name>geometry<\\/Name>/g,\r\n                            `<Name>${geomField}</Name>`\r\n                        );\r\n                    }\r\n\r\n                    // This has to be te same used before\r\n                    if (\r\n                        this.hasLockFeature &&\r\n                        this.getUseLockFeature() &&\r\n                        transactionType !== TransactionType.Insert\r\n                    ) {\r\n                        payload = payload.replace(\r\n                            `</Transaction>`,\r\n                            `<LockId>${this._options.advanced.lockFeatureParams.lockId}</LockId></Transaction>`\r\n                        );\r\n                    }\r\n\r\n                    const headers = {\r\n                        'Content-Type': 'text/xml',\r\n                        ...this.getHeaders()\r\n                    };\r\n\r\n                    const response = await fetch(this.getUrl(), {\r\n                        method: 'POST',\r\n                        body: payload,\r\n                        headers: headers,\r\n                        credentials: this._options.credentials\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        throw new Error(\r\n                            I18N.errors.transaction + ' ' + response.status\r\n                        );\r\n                    }\r\n\r\n                    const responseStr = await response.text();\r\n\r\n                    const parseResponse =\r\n                        this._formatWFS.readTransactionResponse(responseStr);\r\n\r\n                    const wlayer = getStoredLayer(layerName);\r\n\r\n                    if (!Object.keys(parseResponse).length) {\r\n                        const findError = String(responseStr).match(\r\n                            /<ows:ExceptionText>([\\s\\S]*?)<\\/ows:ExceptionText>/\r\n                        );\r\n\r\n                        if (findError) {\r\n                            if (wlayer instanceof WmsLayer) {\r\n                                this._removeFeatures(\r\n                                    features as Feature<Geometry>[]\r\n                                );\r\n                            }\r\n                            // maybe remove tmp wms features here\r\n                            throw new Error(findError[1]);\r\n                        }\r\n                    }\r\n\r\n                    if (transactionType !== TransactionType.Delete) {\r\n                        this._removeFeatures(features as Feature<Geometry>[]);\r\n                    }\r\n\r\n                    wlayer.refresh();\r\n\r\n                    showLoading(false);\r\n\r\n                    this._insertFeatures = [];\r\n                    this._updateFeatures = [];\r\n                    this._deleteFeatures = [];\r\n\r\n                    this._countRequests = 0;\r\n\r\n                    resolve(parseResponse);\r\n                } catch (err) {\r\n                    showError(err.message, err);\r\n                    showLoading(false);\r\n                    this._countRequests = 0;\r\n                    reject();\r\n                }\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @privatwe\r\n     */\r\n    _removeFeatures(features: Feature<Geometry>[]) {\r\n        for (const feature of features as Array<Feature<Geometry>>) {\r\n            getEditLayer().getSource().removeFeature(feature);\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * @param feature\r\n     * @param geom\r\n     * @private\r\n     */\r\n    _transformCircleToPolygon(feature: Feature<Geometry>, geom: Circle) {\r\n        const geomConverted = fromCircle(geom);\r\n        feature.setGeometry(geomConverted);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param feature\r\n     * @private\r\n     * @param geom\r\n     */\r\n    _transformGeoemtryCollectionToGeometries(\r\n        feature: Feature<Geometry>,\r\n        geom: GeometryCollection\r\n    ) {\r\n        let geomConverted = geom.getGeometries()[0];\r\n\r\n        if (geomConverted instanceof Circle) {\r\n            geomConverted = fromCircle(geomConverted);\r\n        }\r\n\r\n        feature.setGeometry(geomConverted);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param feature\r\n     * @returns\r\n     * @private\r\n     */\r\n    _cloneFeature(feature: Feature<Geometry>): Feature<Geometry> {\r\n        removeFeatureFromEditList(feature);\r\n\r\n        const featureProperties = feature.getProperties();\r\n\r\n        delete featureProperties.boundedBy;\r\n        delete featureProperties._layerName_;\r\n\r\n        const clone = new Feature(featureProperties);\r\n        clone.setId(feature.getId());\r\n\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Lock a feature in the geoserver. Useful before editing a geometry,\r\n     * to avoid changes from multiples suers\r\n     *\r\n     * @param featureId\r\n     * @param layerName\r\n     * @param retry\r\n     * @public\r\n     */\r\n    async lockFeature(\r\n        featureId: string | number,\r\n        layerName: string,\r\n        retry = 0\r\n    ): Promise<string> {\r\n        const params = new URLSearchParams({\r\n            service: 'wfs',\r\n            version: this.getAdvanced().lockFeatureVersion,\r\n            request: 'LockFeature',\r\n            typeName: layerName,\r\n            expiry: String(this._options.advanced.lockFeatureParams.expiry),\r\n            LockId: this._options.advanced.lockFeatureParams.lockId,\r\n            releaseAction:\r\n                this._options.advanced.lockFeatureParams.releaseAction,\r\n            exceptions: 'application/json',\r\n            featureid: `${featureId}`\r\n        });\r\n\r\n        const url_fetch = this.getUrl() + '?' + params.toString();\r\n\r\n        try {\r\n            const response = await fetch(url_fetch, {\r\n                headers: this._options.headers,\r\n                credentials: this._options.credentials\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(I18N.errors.lockFeature);\r\n            }\r\n\r\n            const data = await response.text();\r\n\r\n            try {\r\n                // First, check if is a JSON (with errors)\r\n                const dataParsed = JSON.parse(data);\r\n\r\n                if ('exceptions' in dataParsed) {\r\n                    const error = new Error(parseError(dataParsed));\r\n\r\n                    const exceptions = dataParsed.exceptions;\r\n                    if (exceptions[0].code === 'CannotLockAllFeatures') {\r\n                        // Maybe the Feature is already blocked, ant thats trigger error, so, we try one locking more time again\r\n                        if (!retry) {\r\n                            this.lockFeature(featureId, layerName, 1);\r\n                        } else {\r\n                            throw error;\r\n                        }\r\n                    } else {\r\n                        throw error;\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                /*\r\n             \r\n                let dataDoc = (new window.DOMParser()).parseFromString(data, 'text/xml');\r\n             \r\n                let lockId = dataDoc.getElementsByTagName('wfs:LockId');\r\n             \r\n                let featuresLocked: HTMLCollectionOf<Element> = dataDoc.getElementsByTagName('ogc:FeatureId');\r\n             \r\n                for (let featureLocked of featuresLocked as any) {\r\n             \r\n                    console.log(featureLocked.getAttribute('fid'));\r\n             \r\n                }\r\n             \r\n                */\r\n            }\r\n\r\n            return data;\r\n        } catch (err) {\r\n            showError(err.message, err);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n * @public\r\n */\r\nexport interface GeoserverOptions {\r\n    /**\r\n     * Url for OWS services. This endpoint will recive the WFS, WFST and WMS requests\r\n     *\r\n     */\r\n    url: string;\r\n\r\n    /**\r\n     * Advanced options for geoserver requests\r\n     *\r\n     */\r\n    advanced?: GeoServerAdvanced;\r\n\r\n    /**\r\n     * Http headers for GeoServer requests\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Request/headers\r\n     *\r\n     */\r\n    headers?: HeadersInit;\r\n\r\n    /**\r\n     * Credentials for fetch requests\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials\r\n     *\r\n     * Default is 'same-origin'\r\n     */\r\n    credentials?: RequestCredentials;\r\n\r\n    /**\r\n     * Use LockFeatue request on GeoServer when selecting features. Prevents a feature from being edited\r\n     * through a persistent feature lock. This is not always supportedd by the GeoServer.\r\n     * See https://docs.geoserver.org/stable/en/user/services/wfs/reference.html\r\n     */\r\n    useLockFeature?: boolean;\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n *\r\n *  * Default values:\r\n * ```javascript\r\n * {\r\n *   getCapabilitiesVersion: '1.3.0',\r\n *   getFeatureVersion: '1.0.0',\r\n *   describeFeatureTypeVersion: '1.1.0',\r\n *   lockFeatureVersion: '1.1.0',\r\n *   wfsTransactionVersion: '1.1.0',\r\n *   projection: 'EPSG:3857',\r\n *   lockFeatureParams: {\r\n *     expiry: 5,\r\n *     lockId: 'Geoserver',\r\n *     releaseAction: 'SOME'\r\n *   }\r\n * }\r\n * @public\r\n */\r\nexport interface GeoServerAdvanced {\r\n    getCapabilitiesVersion?: string;\r\n    getFeatureVersion?: string;\r\n    lockFeatureVersion?: string;\r\n    describeFeatureTypeVersion?: string;\r\n    wfsTransactionVersion?: string;\r\n    projection?: ProjectionLike;\r\n    lockFeatureParams?: {\r\n        // 5 (minutes) by default\r\n        expiry?: number | string;\r\n\r\n        // 'Geoserver' by default\r\n        lockId?: string;\r\n\r\n        // 'SOME' by default\r\n        releaseAction?: string;\r\n    };\r\n}\r\n\r\nexport enum GeoserverProperty {\r\n    CAPABILITIES = 'capabilities',\r\n    URL = 'url',\r\n    HEADERS = 'headers',\r\n    CREDENTIALS = 'credentials',\r\n    ADVANCED = 'advanced',\r\n    HASTRASNACTION = 'hasTransaction',\r\n    HASLOCKFEATURE = 'hasLockFeature',\r\n    HASDESCRIBEFEATURETYPE = 'hasDescribeFeatureType',\r\n    USELOCKFEATURE = 'useLockFeature',\r\n    ISLOADED = 'isLoaded'\r\n}\r\n\r\nexport type GeoserverEventTypes =\r\n    | `change:${GeoserverProperty.CAPABILITIES}`\r\n    | `change:${GeoserverProperty.URL}`\r\n    | `change:${GeoserverProperty.HEADERS}`\r\n    | `change:${GeoserverProperty.CREDENTIALS}`\r\n    | `change:${GeoserverProperty.ADVANCED}`\r\n    | `change:${GeoserverProperty.HASTRASNACTION}`\r\n    | `change:${GeoserverProperty.HASLOCKFEATURE}`\r\n    | `change:${GeoserverProperty.HASDESCRIBEFEATURETYPE}`\r\n    | `change:${GeoserverProperty.USELOCKFEATURE}`\r\n    | `change:${GeoserverProperty.ISLOADED}`;\r\n","import { getCenter } from 'ol/extent';\r\nimport { Geometry } from 'ol/geom';\r\nimport { Feature, Overlay } from 'ol';\r\nimport { Coordinate } from 'ol/coordinate';\r\n\r\n// Images\r\nimport editFieldsSvg from '../assets/images/editFields.svg';\r\nimport editGeomSvg from '../assets/images/editGeom.svg';\r\nimport { I18N } from './i18n';\r\n\r\nimport myPragma from '../myPragma';\r\n\r\nexport default class EditOverlay extends Overlay {\r\n    constructor(feature: Feature<Geometry>, coordinate: Coordinate = null) {\r\n        super({\r\n            id: feature.getId(),\r\n            position:\r\n                coordinate || getCenter(feature.getGeometry().getExtent()),\r\n            positioning: 'center-center',\r\n            offset: [0, -40],\r\n            stopEvent: true,\r\n            element: (\r\n                <div>\r\n                    <div\r\n                        className=\"ol-wfst--edit-button-cnt\"\r\n                        onclick={() => {\r\n                            this.dispatchEvent('editFields');\r\n                        }}\r\n                    >\r\n                        <button\r\n                            className=\"ol-wfst--edit-button\"\r\n                            type=\"button\"\r\n                            title={I18N.labels.editFields}\r\n                        >\r\n                            <img\r\n                                src={editFieldsSvg}\r\n                                alt={I18N.labels.editFields}\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                    <div\r\n                        className=\"ol-wfst--edit-button-cnt\"\r\n                        onclick={() => {\r\n                            this.dispatchEvent('editGeom');\r\n                        }}\r\n                    >\r\n                        <button\r\n                            class=\"ol-wfst--edit-button\"\r\n                            type=\"button\"\r\n                            title={I18N.labels.editGeom}\r\n                        >\r\n                            <img src={editGeomSvg} alt={I18N.labels.editGeom} />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n}\r\n","var img = \"data:image/svg+xml,%3csvg version='1.1' xmlns='http://www.w3.org/2000/svg' width='448' height='448' viewBox='0 0 448 448'%3e %3cpath d='M222 296l29-29-38-38-29 29v14h24v24h14zM332 116c-2.25-2.25-6-2-8.25 0.25l-87.5 87.5c-2.25 2.25-2.5 6-0.25 8.25s6 2 8.25-0.25l87.5-87.5c2.25-2.25 2.5-6 0.25-8.25zM352 264.5v47.5c0 39.75-32.25 72-72 72h-208c-39.75 0-72-32.25-72-72v-208c0-39.75 32.25-72 72-72h208c10 0 20 2 29.25 6.25 2.25 1 4 3.25 4.5 5.75 0.5 2.75-0.25 5.25-2.25 7.25l-12.25 12.25c-2.25 2.25-5.25 3-8 2-3.75-1-7.5-1.5-11.25-1.5h-208c-22 0-40 18-40 40v208c0 22 18 40 40 40h208c22 0 40-18 40-40v-31.5c0-2 0.75-4 2.25-5.5l16-16c2.5-2.5 5.75-3 8.75-1.75s5 4 5 7.25zM328 80l72 72-168 168h-72v-72zM439 113l-23 23-72-72 23-23c9.25-9.25 24.75-9.25 34 0l38 38c9.25 9.25 9.25 24.75 0 34z'%3e%3c/path%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg version='1.1' xmlns='http://www.w3.org/2000/svg' width='541' height='512' viewBox='0 0 541 512'%3e %3cpath fill='black' d='M103.306 228.483l129.493-125.249c-17.662-4.272-31.226-18.148-34.98-35.663l-0.055-0.307-129.852 125.248c17.812 4.15 31.53 18.061 35.339 35.662l0.056 0.308z'%3e%3c/path%3e %3cpath fill='black' d='M459.052 393.010c-13.486-8.329-22.346-23.018-22.373-39.779v-0.004c-0.053-0.817-0.082-1.772-0.082-2.733s0.030-1.916 0.089-2.863l-0.007 0.13-149.852 71.94c9.598 8.565 15.611 20.969 15.611 34.779 0 0.014 0 0.029 0 0.043v-0.002c-0.048 5.164-0.94 10.104-2.544 14.711l0.098-0.322z'%3e%3c/path%3e %3cpath fill='black' d='M290.207 57.553c-0.009 15.55-7.606 29.324-19.289 37.819l-0.135 0.093 118.054 46.69c-0.216-1.608-0.346-3.48-0.36-5.379v-0.017c0.033-16.948 9.077-31.778 22.596-39.953l0.209-0.118-122.298-48.056c0.659 2.633 1.098 5.693 1.221 8.834l0.002 0.087z'%3e%3c/path%3e %3cpath fill='black' d='M241.36 410.132l-138.629-160.067c-4.734 17.421-18.861 30.61-36.472 33.911l-0.29 0.045 143.881 166.255c1.668-18.735 14.197-34.162 31.183-40.044l0.327-0.099z'%3e%3c/path%3e %3cpath fill='black' d='M243.446 115.105c-31.785 0-57.553-25.767-57.553-57.553s25.767-57.553 57.553-57.553c31.785 0 57.552 25.767 57.552 57.553v0c0 31.786-25.767 57.553-57.553 57.553v0zM243.446 21.582c-19.866 0-35.97 16.105-35.97 35.97s16.105 35.97 35.97 35.97c19.866 0 35.97-16.105 35.97-35.97v0c0-19.866-16.104-35.97-35.97-35.97v0z'%3e%3c/path%3e %3cpath fill='black' d='M483.224 410.78c-31.786 0-57.553-25.767-57.553-57.553s25.767-57.553 57.553-57.553c31.786 0 57.552 25.767 57.552 57.553v0c0 31.786-25.767 57.553-57.553 57.553v0zM483.224 317.257c-19.866 0-35.97 16.104-35.97 35.97s16.105 35.97 35.97 35.97c19.866 0 35.97-16.105 35.97-35.97v0c0-19.866-16.105-35.97-35.97-35.97v0z'%3e%3c/path%3e %3cpath fill='black' d='M57.553 295.531c-31.785 0-57.553-25.767-57.553-57.553s25.767-57.553 57.553-57.553c31.785 0 57.553 25.767 57.553 57.553v0c0 31.786-25.767 57.553-57.553 57.553v0zM57.553 202.008c-19.866 0-35.97 16.105-35.97 35.97s16.105 35.97 35.97 35.97c19.866 0 35.97-16.105 35.97-35.97v0c-0.041-19.835-16.13-35.898-35.97-35.898 0 0 0 0 0 0v0z'%3e%3c/path%3e %3cpath fill='black' d='M256.036 512.072c-31.786 0-57.553-25.767-57.553-57.553s25.767-57.553 57.553-57.553c31.786 0 57.553 25.767 57.553 57.553v0c0 31.786-25.767 57.553-57.553 57.553v0zM256.036 418.55c-19.866 0-35.97 16.104-35.97 35.97s16.105 35.97 35.97 35.97c19.866 0 35.97-16.105 35.97-35.97v0c0-19.866-16.105-35.97-35.97-35.97v0z'%3e%3c/path%3e %3cpath fill='black' d='M435.24 194.239c-31.786 0-57.553-25.767-57.553-57.553s25.767-57.553 57.553-57.553c31.786 0 57.553 25.767 57.553 57.553v0c0 31.785-25.767 57.553-57.553 57.553v0zM435.24 100.716c-19.866 0-35.97 16.105-35.97 35.97s16.105 35.97 35.97 35.97c19.866 0 35.97-16.105 35.97-35.97v0c0-19.866-16.105-35.97-35.97-35.97v0z'%3e%3c/path%3e%3c/svg%3e\";\n  export default img;","// Ol\r\nimport Geometry from 'ol/geom/Geometry';\r\nimport CircleStyle from 'ol/style/Circle';\r\nimport Fill from 'ol/style/Fill';\r\nimport Stroke from 'ol/style/Stroke';\r\nimport Style from 'ol/style/Style';\r\nimport Control from 'ol/control/Control';\r\nimport Draw from 'ol/interaction/Draw';\r\nimport Modify from 'ol/interaction/Modify';\r\nimport Select from 'ol/interaction/Select';\r\nimport Snap from 'ol/interaction/Snap';\r\nimport { MapBrowserEvent } from 'ol';\r\nimport { EventsKey } from 'ol/events';\r\nimport Collection from 'ol/Collection';\r\nimport Feature from 'ol/Feature';\r\nimport Overlay from 'ol/Overlay';\r\nimport View from 'ol/View';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport Map from 'ol/Map';\r\nimport BaseEvent from 'ol/events/Event';\r\nimport { LoadingStrategy } from 'ol/source/Vector';\r\nimport { FeatureLike } from 'ol/Feature';\r\nimport { Options as VectorLayerOptions } from 'ol/layer/BaseVector';\r\nimport { never, primaryAction } from 'ol/events/condition';\r\nimport { unByKey } from 'ol/Observable';\r\nimport { Coordinate } from 'ol/coordinate';\r\nimport { CombinedOnSignature, EventTypes, OnSignature } from 'ol/Observable';\r\nimport { ObjectEvent } from 'ol/Object';\r\nimport { Types as ObjectEventTypes } from 'ol/ObjectEventType';\r\n\r\nimport { initModal, showError } from './modules/errors';\r\nimport { initLoading, showLoading } from './modules/loading';\r\nimport WfsLayer from './WfsLayer';\r\nimport WmsLayer from './WmsLayer';\r\nimport LayersControl, {\r\n    activateDrawButton,\r\n    activateModeButtons,\r\n    resetStateButtons\r\n} from './modules/LayersControl';\r\nimport Uploads from './modules/Uploads';\r\nimport {\r\n    addFeatureToEditedList,\r\n    getStoredMapLayers,\r\n    isFeatureEdited,\r\n    removeFeatureFromEditList,\r\n    setActiveLayerToInsertEls,\r\n    getActiveLayerToInsertEls,\r\n    activateMode,\r\n    getMode,\r\n    Modes,\r\n    setMap,\r\n    setMapLayers,\r\n    getStoredLayer\r\n} from './modules/state';\r\nimport { deepObjectAssign } from './modules/helpers';\r\nimport { getEditLayer } from './modules/editLayer';\r\nimport { GeometryType, TransactionType } from './@enums';\r\nimport {\r\n    I18n,\r\n    IGeoserverDescribeFeatureType,\r\n    WfsGeoserverVendor,\r\n    WmsGeoserverVendor\r\n} from './@types';\r\nimport * as i18n from './modules/i18n/index';\r\nimport { getDefaultOptions } from './defaults';\r\nimport EditControlChangesEl from './modules/EditControlChanges';\r\nimport styleFunction from './modules/styleFunction';\r\nimport { EditFieldsModal } from './modules/EditFieldsModal';\r\nimport Geoserver from './Geoserver';\r\nimport EditOverlay from './modules/EditOverlay';\r\nimport { BaseLayerProperty } from './modules/base/BaseLayer';\r\n\r\n// External\r\nimport Modal from 'modal-vanilla';\r\n\r\n// Style\r\nimport './assets/scss/-ol-wfst.bootstrap5.scss';\r\nimport './assets/scss/ol-wfst.scss';\r\n\r\nconst controlElement = document.createElement('div');\r\n\r\n/**\r\n * Tiny WFST-T client to insert (drawing/uploading), modify and delete\r\n * features on GeoServers using OpenLayers. Layers with these types\r\n * of geometries are supported: \"GeometryCollection\" (in this case, you can\r\n * choose the geometry type of each element to draw), \"Point\", \"MultiPoint\",\r\n * \"LineString\", \"MultiLineString\", \"Polygon\" and \"MultiPolygon\".\r\n *\r\n * @constructor\r\n * @fires modifystart\r\n * @fires modifyend\r\n * @fires drawstart\r\n * @fires drawend\r\n * @fires load\r\n * @fires describeFeatureType\r\n * @extends {ol/control/Control~Control}\r\n * @param options Wfst options, see [Wfst Options](#options) for more details.\r\n */\r\nexport default class Wfst extends Control {\r\n    protected _options: Options;\r\n    protected _i18n: I18n;\r\n\r\n    // Ol\r\n    protected _map: Map;\r\n    protected _view: View;\r\n    protected _viewport: HTMLElement;\r\n    protected _initialized = false;\r\n    protected _layersControl: LayersControl;\r\n    protected _overlay: Overlay;\r\n\r\n    // Interactions\r\n    protected _interactionWfsSelect: Select;\r\n    protected _interactionSelectModify: Select;\r\n    protected _collectionModify: Collection<any>;\r\n    protected _interactionModify: Modify;\r\n    protected _interactionSnap: Snap;\r\n    protected _interactionDraw: Draw;\r\n\r\n    // Obserbable keys\r\n    protected _keyClickWms: EventsKey | EventsKey[];\r\n    protected _keyRemove: EventsKey;\r\n    protected _keySelect: EventsKey;\r\n\r\n    // Controls\r\n    protected _controlApplyDiscardChanges: EditControlChangesEl;\r\n    protected _controlWidgetToolsDiv: HTMLElement;\r\n    protected _selectDraw: HTMLSelectElement;\r\n\r\n    // State\r\n    protected _currentZoom: number;\r\n    protected _lastZoom: number;\r\n\r\n    // Editing\r\n    protected _editFeature: Feature<Geometry>;\r\n    protected _editFeatureOriginal: Feature<Geometry>;\r\n\r\n    protected _uploads: Uploads;\r\n    protected _editFields: EditFieldsModal;\r\n\r\n    declare on: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<WfstEventTypes, WfstEvent, EventsKey> &\r\n        OnSignature<ObjectEventTypes, ObjectEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            WfstEventTypes | ObjectEventTypes | EventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare once: OnSignature<EventTypes, BaseEvent, EventsKey> &\r\n        OnSignature<WfstEventTypes, WfstEvent, EventsKey> &\r\n        OnSignature<ObjectEventTypes, ObjectEvent, EventsKey> &\r\n        CombinedOnSignature<\r\n            WfstEventTypes | ObjectEventTypes | EventTypes,\r\n            EventsKey\r\n        >;\r\n\r\n    declare un: OnSignature<EventTypes, BaseEvent, void> &\r\n        OnSignature<WfstEventTypes, WfstEvent, EventsKey> &\r\n        OnSignature<ObjectEventTypes, ObjectEvent, void> &\r\n        CombinedOnSignature<\r\n            WfstEventTypes | ObjectEventTypes | EventTypes,\r\n            void\r\n        >;\r\n\r\n    constructor(options?: Options) {\r\n        super({\r\n            target: null,\r\n            element: controlElement,\r\n            render: () => {\r\n                if (!this._map) this._init();\r\n            }\r\n        });\r\n\r\n        i18n.setLang(options.language, options.i18n);\r\n\r\n        const defaultOptions = getDefaultOptions();\r\n\r\n        this._options = deepObjectAssign(defaultOptions, options);\r\n\r\n        // By default, the first layer is ready to accept new draws\r\n        setActiveLayerToInsertEls(this._options.layers[0]);\r\n\r\n        this._controlWidgetToolsDiv = controlElement;\r\n        this._controlWidgetToolsDiv.className = 'ol-wfst--tools-control';\r\n\r\n        this._uploads = new Uploads(this._options);\r\n\r\n        this._editFields = new EditFieldsModal(this._options.modal);\r\n    }\r\n\r\n    /**\r\n     * Get all the layers in the ol-wfst instance\r\n     * @public\r\n     */\r\n    getLayers(): Array<WfsLayer | WmsLayer> {\r\n        return Object.values(getStoredMapLayers());\r\n    }\r\n\r\n    /**\r\n     * Get a layer\r\n     * @public\r\n     */\r\n    getLayerByName(layerName = ''): WfsLayer | WmsLayer {\r\n        const layers = getStoredMapLayers();\r\n        if (layerName && layerName in layers) {\r\n            return layers[layerName];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Connect to the GeoServer and retrieve metadata about the service (GetCapabilities).\r\n     * Get each layer specs (DescribeFeatureType) and create the layers and map controls.\r\n     * @fires describeFeatureType\r\n     * @private\r\n     */\r\n    async _initMapAndLayers(): Promise<void> {\r\n        try {\r\n            const layers = this._options.layers;\r\n\r\n            if (layers.length) {\r\n                let layerRendered = 0;\r\n                let layersNumber = 0; // Only count visibles\r\n\r\n                layers.forEach((layer) => {\r\n                    if (layer.getVisible()) layersNumber++;\r\n\r\n                    layer.on('layerRendered', () => {\r\n                        layerRendered++;\r\n                        if (layerRendered >= layersNumber) {\r\n                            // run only once\r\n                            if (!this._initialized) {\r\n                                this.dispatchEvent('load');\r\n                                this._initialized = true;\r\n                            }\r\n                            showLoading(false);\r\n                        }\r\n                    });\r\n\r\n                    layer.on('change:describeFeatureType', () => {\r\n                        const domEl = this._layersControl.addLayerEl(layer);\r\n\r\n                        layer.on('change:isVisible', () => {\r\n                            const layerNotVisible =\r\n                                'ol-wfst--layer-not-visible';\r\n\r\n                            const visible = layer.isVisibleByZoom();\r\n                            if (visible)\r\n                                domEl.classList.remove(layerNotVisible);\r\n                            else domEl.classList.add(layerNotVisible);\r\n                        });\r\n\r\n                        layer.set(\r\n                            BaseLayerProperty.ISVISIBLE,\r\n                            this._currentZoom > layer.getMinZoom()\r\n                        );\r\n\r\n                        this.dispatchEvent(\r\n                            new WfstEvent({\r\n                                type: 'describeFeatureType',\r\n                                layer: layer,\r\n                                data: layer.getDescribeFeatureType()\r\n                            })\r\n                        );\r\n                    });\r\n\r\n                    layer._init();\r\n\r\n                    this._map.addLayer(layer);\r\n\r\n                    setMapLayers({\r\n                        [layer.get(BaseLayerProperty.NAME)]: layer\r\n                    });\r\n                });\r\n\r\n                this._createMapElements(\r\n                    this._options.showControl,\r\n                    this._options.active\r\n                );\r\n            }\r\n        } catch (err) {\r\n            showLoading(false);\r\n            showError(err.message, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _init(): void {\r\n        this._map = super.getMap();\r\n        this._view = this._map.getView();\r\n        this._viewport = this._map.getViewport();\r\n\r\n        setMap(this._map);\r\n\r\n        //@ts-expect-error\r\n        this._uploads.on('addedFeatures', ({ features }) => {\r\n            const layer = getActiveLayerToInsertEls();\r\n            layer.insertFeatures(features);\r\n        });\r\n\r\n        //@ts-expect-error\r\n        this._uploads.on('loadedFeatures', ({ features }) => {\r\n            this.activateEditMode();\r\n            const editLayerSource = getEditLayer().getSource();\r\n\r\n            editLayerSource.addFeatures(features);\r\n\r\n            this._view.fit(editLayerSource.getExtent(), {\r\n                size: this._map.getSize(),\r\n                maxZoom: 21,\r\n                padding: [100, 100, 100, 100]\r\n            });\r\n        });\r\n\r\n        // @ts-expect-error\r\n        this._editFields.on('save', ({ feature }) => {\r\n            // Force deselect to trigger handler\r\n            this._collectionModify.remove(feature);\r\n        });\r\n\r\n        // @ts-expect-error\r\n        this._editFields.dispose('delete', ({ feature }) => {\r\n            this._deleteFeature(feature, true);\r\n        });\r\n\r\n        this._addMapEvents();\r\n\r\n        initModal(this._options['modal']);\r\n\r\n        this._controlWidgetToolsDiv.append(initLoading());\r\n\r\n        this._initMapAndLayers();\r\n    }\r\n\r\n    /**\r\n     * Create the edit layer to allow modify elements, add interactions,\r\n     * map controls and keyboard handlers.\r\n     *\r\n     * @param showControl\r\n     * @param active\r\n     * @private\r\n     */\r\n    async _createMapElements(\r\n        showControl: boolean,\r\n        active: boolean\r\n    ): Promise<void> {\r\n        // VectorLayer to store features on editing and inserting\r\n        this._prepareEditLayer();\r\n\r\n        this._addInteractions();\r\n        this._addInteractionHandlers();\r\n\r\n        if (showControl) {\r\n            this._addMapControl();\r\n        }\r\n\r\n        // By default, init in edit mode\r\n        this.activateEditMode(active);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _addInteractions(): void {\r\n        /**\r\n         * Select the wfs feature already downloaded\r\n         * @private\r\n         */\r\n        const prepareWfsInteraction = () => {\r\n            this._collectionModify = new Collection();\r\n\r\n            // Interaction to select wfs layer elements\r\n            this._interactionWfsSelect = new Select({\r\n                hitTolerance: 10,\r\n                style: (feature: Feature<Geometry>) => styleFunction(feature),\r\n                toggleCondition: never, // Prevent add features to the current selection using shift\r\n                filter: (feature, layer) => {\r\n                    return (\r\n                        getMode() !== Modes.Edit &&\r\n                        layer &&\r\n                        layer instanceof WfsLayer &&\r\n                        layer === getActiveLayerToInsertEls()\r\n                    );\r\n                }\r\n            });\r\n\r\n            this._map.addInteraction(this._interactionWfsSelect);\r\n\r\n            this._interactionWfsSelect.on(\r\n                'select',\r\n                ({ selected, deselected, mapBrowserEvent }) => {\r\n                    const coordinate = mapBrowserEvent.coordinate;\r\n\r\n                    if (selected.length) {\r\n                        selected.forEach((feature) => {\r\n                            if (!isFeatureEdited(feature)) {\r\n                                // Remove the feature from the original layer\r\n                                const layer =\r\n                                    this._interactionWfsSelect.getLayer(\r\n                                        feature\r\n                                    );\r\n                                layer.getSource().removeFeature(feature);\r\n                                this._addFeatureToEditMode(\r\n                                    feature,\r\n                                    coordinate,\r\n                                    layer.get(BaseLayerProperty.NAME)\r\n                                );\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (deselected.length) {\r\n                        if (getMode() !== Modes.Edit) {\r\n                            deselected.forEach((feature) => {\r\n                                // Trigger deselect\r\n                                // This is necessary for those times where two features overlap.\r\n                                this._collectionModify.remove(feature);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        };\r\n\r\n        /**\r\n         * Call the geoserver to get the clicked feature\r\n         * @private\r\n         */\r\n        const prepareWmsInteraction = (): void => {\r\n            // Interaction to allow select features in the edit layer\r\n            this._interactionSelectModify = new Select({\r\n                style: (feature: Feature<Geometry>) => styleFunction(feature),\r\n                layers: [getEditLayer()],\r\n                toggleCondition: never, // Prevent add features to the current selection using shift\r\n                removeCondition: () => (getMode() === Modes.Edit ? true : false) // Prevent deselect on clicking outside the feature\r\n            });\r\n\r\n            this._map.addInteraction(this._interactionSelectModify);\r\n\r\n            this._collectionModify =\r\n                this._interactionSelectModify.getFeatures();\r\n\r\n            this._keyClickWms = this._map.on(\r\n                this._options.evtType,\r\n                async (evt: MapBrowserEvent<MouseEvent>) => {\r\n                    if (this._map.hasFeatureAtPixel(evt.pixel)) {\r\n                        return;\r\n                    }\r\n\r\n                    // Only get other features if editmode is disabled\r\n                    if (getMode() !== Modes.Edit) {\r\n                        const layer = getActiveLayerToInsertEls();\r\n\r\n                        // If layer is hidden or is a wfs, skip\r\n                        if (\r\n                            !layer.getVisible() ||\r\n                            !layer.isVisibleByZoom() ||\r\n                            layer instanceof WfsLayer\r\n                        ) {\r\n                            return;\r\n                        }\r\n\r\n                        const features = await layer._getFeaturesByClickEvent(\r\n                            evt\r\n                        );\r\n\r\n                        if (!features.length) {\r\n                            return;\r\n                        }\r\n\r\n                        // For now, support is only for one feature at time\r\n                        this._addFeatureToEditMode(\r\n                            features[0],\r\n                            evt.coordinate,\r\n                            layer.get(BaseLayerProperty.NAME)\r\n                        );\r\n                    }\r\n                }\r\n            );\r\n        };\r\n\r\n        if (this._options.layers.find((layer) => layer instanceof WfsLayer)) {\r\n            prepareWfsInteraction();\r\n        }\r\n\r\n        if (this._options.layers.find((layer) => layer instanceof WmsLayer)) {\r\n            prepareWmsInteraction();\r\n        }\r\n\r\n        this._interactionModify = new Modify({\r\n            style: () => {\r\n                if (getMode() === Modes.Edit) {\r\n                    return new Style({\r\n                        image: new CircleStyle({\r\n                            radius: 6,\r\n                            fill: new Fill({\r\n                                color: '#ff0000'\r\n                            }),\r\n                            stroke: new Stroke({\r\n                                width: 2,\r\n                                color: 'rgba(5, 5, 5, 0.9)'\r\n                            })\r\n                        })\r\n                    });\r\n                } else {\r\n                    return;\r\n                }\r\n            },\r\n            features: this._collectionModify,\r\n            condition: (evt) => {\r\n                return primaryAction(evt) && getMode() === Modes.Edit;\r\n            }\r\n        });\r\n\r\n        this._map.addInteraction(this._interactionModify);\r\n\r\n        this._interactionSnap = new Snap({\r\n            source: getEditLayer().getSource()\r\n        });\r\n        this._map.addInteraction(this._interactionSnap);\r\n    }\r\n\r\n    /**\r\n     * Layer to store temporary the elements to be edited\r\n     * @private\r\n     */\r\n    _prepareEditLayer(): void {\r\n        this._map.addLayer(getEditLayer());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _addMapEvents(): void {\r\n        /**\r\n         * @private\r\n         */\r\n        const keyboardEvents = (): void => {\r\n            document.addEventListener('keydown', ({ key }) => {\r\n                const inputFocus = document.querySelector('input:focus');\r\n                if (inputFocus) {\r\n                    return;\r\n                }\r\n                if (key === 'Delete') {\r\n                    const selectedFeatures = this._collectionModify;\r\n                    if (selectedFeatures) {\r\n                        selectedFeatures.forEach((feature) => {\r\n                            this._deleteFeature(feature, true);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        };\r\n\r\n        keyboardEvents();\r\n\r\n        this._map.on('moveend', (): void => {\r\n            this._currentZoom = this._view.getZoom();\r\n\r\n            if (this._currentZoom !== this._lastZoom) {\r\n                const layers = getStoredMapLayers();\r\n\r\n                Object.keys(layers).forEach((key) => {\r\n                    const layer = layers[key];\r\n                    if (this._currentZoom > layer.getMinZoom()) {\r\n                        // Show the layers\r\n                        if (!layer.get(BaseLayerProperty.ISVISIBLE)) {\r\n                            layer.set(BaseLayerProperty.ISVISIBLE, true);\r\n                        }\r\n                    } else {\r\n                        // Hide the layer\r\n                        if (layer.get(BaseLayerProperty.ISVISIBLE)) {\r\n                            layer.set(BaseLayerProperty.ISVISIBLE, false);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this._lastZoom = this._currentZoom;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add map handlers\r\n     * @private\r\n     */\r\n    _addInteractionHandlers(): void {\r\n        // When a feature is modified, add this to a list.\r\n        // This prevent events fired on select and deselect features that has no changes and should\r\n        // not be updated in the geoserver\r\n        this._interactionModify.on('modifyend', (evt) => {\r\n            const feature = evt.features.item(0);\r\n            addFeatureToEditedList(feature);\r\n            super.dispatchEvent(evt);\r\n        });\r\n\r\n        this._interactionModify.on('modifystart', (evt) => {\r\n            super.dispatchEvent(evt);\r\n        });\r\n\r\n        this._onDeselectFeatureEvent();\r\n        this._onRemoveFeatureEvent();\r\n    }\r\n\r\n    /**\r\n     * Add the widget on the map to allow change the tools and select active layers\r\n     * @private\r\n     */\r\n    _addMapControl(): void {\r\n        this._layersControl = new LayersControl(\r\n            this._options.showUpload ? this._uploads : null,\r\n            this._options.uploadFormats\r\n        );\r\n\r\n        // @ts-expect-error\r\n        this._layersControl.on('drawMode', () => {\r\n            if (getMode() === Modes.Draw) {\r\n                resetStateButtons();\r\n                this.activateEditMode();\r\n            } else {\r\n                const activeLayer = getActiveLayerToInsertEls();\r\n\r\n                if (!activeLayer.isVisibleByZoom()) {\r\n                    showError(i18n.I18N.errors.layerNotVisible);\r\n                } else {\r\n                    this.activateDrawMode(getActiveLayerToInsertEls());\r\n                }\r\n            }\r\n        });\r\n\r\n        // @ts-expect-error\r\n        this._layersControl.on('changeGeom', () => {\r\n            if (getMode() === Modes.Draw) {\r\n                this.activateDrawMode(getActiveLayerToInsertEls());\r\n            }\r\n        });\r\n\r\n        const controlEl = this._layersControl.render();\r\n\r\n        this._selectDraw = controlEl.querySelector(\r\n            '.wfst--tools-control--select-draw'\r\n        );\r\n\r\n        this._controlWidgetToolsDiv.append(controlEl);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _deselectEditFeature(feature: FeatureLike): void {\r\n        this._removeOverlayHelper(feature);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param feature\r\n     * @param layerName\r\n     * @private\r\n     */\r\n    _restoreFeatureToLayer(\r\n        feature: Feature<Geometry>,\r\n        layerName?: string\r\n    ): void {\r\n        layerName = layerName || feature.get('_layerName_');\r\n        const layer = getStoredMapLayers()[layerName];\r\n        (layer.getSource() as VectorSource<Geometry>).addFeature(feature);\r\n    }\r\n\r\n    /**\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _removeFeatureFromTmpLayer(feature: Feature<Geometry>): void {\r\n        // Remove element from the Layer\r\n        getEditLayer().getSource().removeFeature(feature);\r\n    }\r\n\r\n    /**\r\n     * Trigger on deselecting a feature from in the Edit layer\r\n     *\r\n     * @private\r\n     */\r\n    _onDeselectFeatureEvent(): void {\r\n        const checkIfFeatureIsChanged = (feature: Feature<Geometry>): void => {\r\n            const layerName = feature.get('_layerName_');\r\n\r\n            const layer = this._options.layers.find(\r\n                (layer) => layer.get(BaseLayerProperty.NAME) === layerName\r\n            );\r\n\r\n            if (layer instanceof WfsLayer) {\r\n                this._interactionWfsSelect.getFeatures().remove(feature);\r\n            }\r\n\r\n            if (isFeatureEdited(feature)) {\r\n                layer.transactFeatures(TransactionType.Update, feature);\r\n            } else {\r\n                // Si es wfs y el elemento no tuvo cambios, lo devolvemos a la layer original\r\n                if (layer instanceof WfsLayer) {\r\n                    this._restoreFeatureToLayer(feature, layerName);\r\n                }\r\n                this._removeFeatureFromTmpLayer(feature);\r\n            }\r\n        };\r\n\r\n        // This is fired when a feature is deselected and fires the transaction process\r\n        this._keySelect = this._collectionModify.on('remove', (evt) => {\r\n            const feature = evt.element;\r\n\r\n            this._deselectEditFeature(feature);\r\n\r\n            checkIfFeatureIsChanged(feature);\r\n\r\n            this._editModeOff();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Trigger on removing a feature from the Edit layer\r\n     *\r\n     * @private\r\n     */\r\n    _onRemoveFeatureEvent(): void {\r\n        // If a feature is removed from the edit layer\r\n        this._keyRemove = getEditLayer()\r\n            .getSource()\r\n            .on('removefeature', (evt) => {\r\n                const feature = evt.feature;\r\n\r\n                if (!feature.get('_delete_')) {\r\n                    return;\r\n                }\r\n\r\n                if (this._keySelect) {\r\n                    unByKey(this._keySelect);\r\n                }\r\n\r\n                const layerName = feature.get('_layerName_');\r\n\r\n                const ll = this.getLayerByName(layerName);\r\n\r\n                ll.transactFeatures(TransactionType.Delete, feature);\r\n\r\n                this._deselectEditFeature(feature);\r\n                this._editModeOff();\r\n\r\n                if (this._keySelect) {\r\n                    setTimeout(() => {\r\n                        this._onDeselectFeatureEvent();\r\n                    }, 150);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _editModeOn(feature: Feature<Geometry>): void {\r\n        this._editFeatureOriginal = feature.clone();\r\n\r\n        activateMode(Modes.Edit);\r\n\r\n        // To refresh the style\r\n        getEditLayer().getSource().changed();\r\n\r\n        this._removeOverlayHelper(feature);\r\n\r\n        this._controlApplyDiscardChanges = new EditControlChangesEl(feature);\r\n\r\n        this._controlApplyDiscardChanges.on('cancel', ({ feature }) => {\r\n            feature.setGeometry(this._editFeatureOriginal.getGeometry());\r\n            removeFeatureFromEditList(feature);\r\n            this._collectionModify.remove(feature);\r\n        });\r\n\r\n        this._controlApplyDiscardChanges.on('apply', ({ feature }) => {\r\n            showLoading();\r\n            this._collectionModify.remove(feature);\r\n        });\r\n\r\n        this._controlApplyDiscardChanges.on('delete', ({ feature }) => {\r\n            this._deleteFeature(feature, true);\r\n        });\r\n\r\n        this._map.addControl(this._controlApplyDiscardChanges);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _editModeOff(): void {\r\n        activateMode(null);\r\n        this._map.removeControl(this._controlApplyDiscardChanges);\r\n    }\r\n\r\n    /**\r\n     * Remove a feature from the edit Layer and from the Geoserver\r\n     *\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _deleteFeature(feature: Feature<Geometry>, confirm: boolean): void {\r\n        const deleteEl = () => {\r\n            const features = Array.isArray(feature) ? feature : [feature];\r\n            features.forEach((feature) => {\r\n                feature.set('_delete_', true, true);\r\n                getEditLayer().getSource().removeFeature(feature);\r\n            });\r\n            this._collectionModify.clear();\r\n\r\n            const layerName = feature.get('_layerName_');\r\n            const layer = this._options.layers.find(\r\n                (layer) => layer.get(BaseLayerProperty.NAME) === layerName\r\n            );\r\n\r\n            if (layer instanceof WfsLayer) {\r\n                this._interactionWfsSelect.getFeatures().remove(feature);\r\n            }\r\n        };\r\n\r\n        if (confirm) {\r\n            const confirmModal = Modal.confirm(i18n.I18N.labels.confirmDelete, {\r\n                ...this._options.modal\r\n            });\r\n\r\n            confirmModal.show().once('dismiss', function (modal, ev, button) {\r\n                if (button && button.value) {\r\n                    deleteEl();\r\n                }\r\n            });\r\n        } else {\r\n            deleteEl();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a feature to the Edit Layer to allow editing, and creates an Overlay Helper to show options\r\n     *\r\n     * @param feature\r\n     * @param coordinate\r\n     * @param layerName\r\n     * @private\r\n     */\r\n    _addFeatureToEditMode(\r\n        feature: Feature<Geometry>,\r\n        coordinate: Coordinate = null,\r\n        layerName = null\r\n    ): void {\r\n        // For now, only allow one element at time\r\n        // @TODO: allow edit multiples elements\r\n        if (this._collectionModify.getLength()) return;\r\n\r\n        if (layerName) {\r\n            // Store the layer information inside the feature\r\n            feature.set('_layerName_', layerName);\r\n        }\r\n\r\n        const props = feature ? feature.getProperties() : '';\r\n\r\n        if (props) {\r\n            if (feature.getGeometry()) {\r\n                getEditLayer().getSource().addFeature(feature);\r\n                this._collectionModify.push(feature);\r\n\r\n                const overlay = new EditOverlay(feature, coordinate);\r\n\r\n                // @ts-expect-error\r\n                overlay.on('editFields', () => {\r\n                    this._editFields.show(feature);\r\n                });\r\n\r\n                // @ts-expect-error\r\n                overlay.on('editGeom', () => {\r\n                    this._editModeOn(feature);\r\n                });\r\n\r\n                this._map.addOverlay(overlay);\r\n\r\n                const layer = getStoredLayer(layerName);\r\n                if (layer) {\r\n                    layer.maybeLockFeature(feature.getId());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Activate/deactivate the draw mode\r\n     *\r\n     * @param layer\r\n     * @public\r\n     */\r\n    activateDrawMode(layer: WfsLayer | WmsLayer | false): void {\r\n        /**\r\n         *\r\n         * @param layer\r\n         * @private\r\n         */\r\n        const addDrawInteraction = (layer: WfsLayer | WmsLayer): void => {\r\n            this.activateEditMode(false);\r\n\r\n            // If already exists, remove\r\n            if (this._interactionDraw) {\r\n                this._map.removeInteraction(this._interactionDraw);\r\n            }\r\n\r\n            const geomDrawType = this._selectDraw.value;\r\n\r\n            this._interactionDraw = new Draw({\r\n                source: getEditLayer().getSource(),\r\n                type: geomDrawType as GeometryType,\r\n                style: (feature: Feature<Geometry>) => styleFunction(feature),\r\n                stopClick: true // To prevent firing a map/wms click\r\n            });\r\n\r\n            this._map.addInteraction(this._interactionDraw);\r\n\r\n            this._interactionDraw.on('drawstart', (evt) => {\r\n                super.dispatchEvent(evt);\r\n            });\r\n\r\n            this._interactionDraw.on('drawend', (evt) => {\r\n                const feature: Feature<Geometry> = evt.feature;\r\n                layer.transactFeatures(TransactionType.Insert, feature);\r\n                super.dispatchEvent(evt);\r\n            });\r\n        };\r\n\r\n        if (!this._interactionDraw && !layer) {\r\n            return;\r\n        }\r\n\r\n        if (layer) {\r\n            // If layer is set to invisible, show warning\r\n            if (!layer.getVisible()) {\r\n                return;\r\n            }\r\n\r\n            activateDrawButton();\r\n\r\n            this._viewport.classList.add('draw-mode');\r\n\r\n            addDrawInteraction(layer);\r\n        } else {\r\n            this._map.removeInteraction(this._interactionDraw);\r\n            this._viewport.classList.remove('draw-mode');\r\n        }\r\n\r\n        activateMode(layer ? Modes.Draw : null);\r\n    }\r\n\r\n    /**\r\n     * Activate/desactivate the edit mode\r\n     *\r\n     * @param bool\r\n     * @public\r\n     */\r\n    activateEditMode(bool = true): void {\r\n        if (bool) {\r\n            activateModeButtons();\r\n            this.activateDrawMode(false);\r\n        } else {\r\n            // Deselct features\r\n            this._collectionModify.clear();\r\n        }\r\n\r\n        if (this._interactionSelectModify) {\r\n            this._interactionSelectModify.setActive(bool);\r\n        }\r\n\r\n        this._interactionModify.setActive(bool);\r\n\r\n        if (this._interactionWfsSelect)\r\n            this._interactionWfsSelect.setActive(bool);\r\n    }\r\n\r\n    /**\r\n     * Remove the overlay helper atttached to a specify feature\r\n     * @param feature\r\n     * @private\r\n     */\r\n    _removeOverlayHelper(feature: FeatureLike): void {\r\n        const featureId = feature.getId();\r\n\r\n        if (!featureId) {\r\n            return;\r\n        }\r\n\r\n        const overlay = this._map.getOverlayById(featureId);\r\n\r\n        if (!overlay) {\r\n            return;\r\n        }\r\n\r\n        this._map.removeOverlay(overlay);\r\n    }\r\n}\r\n\r\n/**\r\n * **_[interface]_** - Wfst Options specified when creating a Wfst instance\r\n *\r\n * Default values:\r\n * ```javascript\r\n * {\r\n *  layers: null,\r\n *  evtType: 'singleclick',\r\n *  active: true,\r\n *  showControl: true,\r\n *  language: 'en',\r\n *  i18n: {...}, // according to language selection\r\n *  uploadFormats: '.geojson,.json,.kml',\r\n *  processUpload: null,\r\n * }\r\n * ```\r\n */\r\ninterface Options {\r\n    /**\r\n     * Layers to be loaded from the geoserver\r\n     */\r\n    layers?: Array<WfsLayer | WmsLayer>;\r\n\r\n    /**\r\n     * Init active\r\n     */\r\n    active?: boolean;\r\n\r\n    /**\r\n     * The click event to allow selection of Features to be edited\r\n     */\r\n    evtType?: 'singleclick' | 'dblclick';\r\n\r\n    /**\r\n     * Show/hide the control map\r\n     */\r\n    showControl?: boolean;\r\n\r\n    /**\r\n     * Modal configuration\r\n     */\r\n    modal?: {\r\n        animateClass?: string;\r\n        animateInClass?: string;\r\n        transition?: number;\r\n        backdropTransition?: number;\r\n        templates?: {\r\n            dialog?: string | HTMLElement;\r\n            headerClose?: string | HTMLElement;\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Language to be used\r\n     */\r\n    language?: 'es' | 'en' | 'zh';\r\n\r\n    /**\r\n     * Custom translations\r\n     */\r\n    i18n?: I18n;\r\n\r\n    /**\r\n     * Show/hide the upload button\r\n     */\r\n    showUpload?: boolean;\r\n\r\n    /**\r\n     * Accepted extension formats on upload\r\n     * Example: \".json,.geojson\"\r\n     */\r\n    uploadFormats?: string;\r\n\r\n    /**\r\n     * Triggered to allow implement custom functions or to parse other formats than default\r\n     * by filtering the extension. If this doesn't return features, the default function\r\n     * will be used to extract them.\r\n     */\r\n    processUpload?(file: File): Array<Feature<Geometry>>;\r\n}\r\n\r\n/**\r\n * **_[interface]_** - Parameters to create the layers and connect to the GeoServer\r\n *\r\n * You can use all the parameters supported by OpenLayers\r\n *\r\n *  Default values:\r\n * ```javascript\r\n * {\r\n *  name: null,\r\n *  geoserver: null,\r\n *  label: null, // `name` if not provided\r\n *  strategy: all,\r\n *  geoserverVendor: null\r\n * }\r\n * ```\r\n */\r\ninterface LayerOptions extends Omit<VectorLayerOptions<any>, 'source'> {\r\n    /**\r\n     * Layer name in the GeoServer\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * Geoserver Object\r\n     */\r\n    geoserver: Geoserver;\r\n\r\n    /**\r\n     * Label to be displayed in the widget control\r\n     */\r\n    label?: string;\r\n\r\n    /**\r\n     * Available geoserver options\r\n     */\r\n    geoserverVendor?: WfsGeoserverVendor | WmsGeoserverVendor;\r\n\r\n    /**\r\n     * Strategy function for loading features.\r\n     * Only for WFS\r\n     * By default `all` strategy is used\r\n     */\r\n    strategy?: LoadingStrategy;\r\n\r\n    /**\r\n     * Triggered before inserting new features to the Geoserver.\r\n     * Use this to insert custom properties, modify the feature, etc.\r\n     */\r\n    beforeTransactFeature?(\r\n        feature: Feature<Geometry>,\r\n        transaction: TransactionType\r\n    ): Feature<Geometry>;\r\n}\r\nclass WfstEvent extends BaseEvent {\r\n    public data: IGeoserverDescribeFeatureType;\r\n    public layer: WfsLayer | WmsLayer;\r\n\r\n    constructor(options: {\r\n        type: WfstEventTypes;\r\n        layer: WfsLayer | WmsLayer;\r\n        data: IGeoserverDescribeFeatureType;\r\n    }) {\r\n        super(options.type);\r\n        this.layer = options.layer;\r\n        this.data = options.data;\r\n    }\r\n}\r\n\r\ntype WfstEventTypes = 'describeFeatureType';\r\n\r\nexport {\r\n    Options,\r\n    WfstEventTypes,\r\n    WfstEvent,\r\n    I18n,\r\n    LayerOptions,\r\n    Geoserver,\r\n    WmsLayer,\r\n    WfsLayer\r\n};\r\n","import { I18N } from './modules/i18n';\r\nimport { Options } from './ol-wfst';\r\n\r\nexport const DEFAULT_LANGUAGE = 'en';\r\n\r\nexport const getDefaultOptions = (): Options => {\r\n    return {\r\n        layers: null,\r\n        evtType: 'singleclick',\r\n        active: true,\r\n        showControl: true,\r\n        language: DEFAULT_LANGUAGE,\r\n        uploadFormats: '.geojson,.json,.kml',\r\n        processUpload: null,\r\n        modal: {\r\n            animateClass: 'fade',\r\n            animateInClass: 'show',\r\n            transition: 300,\r\n            backdropTransition: 150,\r\n            templates: {\r\n                dialog: '<div class=\"modal-dialog modal-dialog-centered\"></div>',\r\n                headerClose: `<button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"${I18N.labels.close}\"><span aria-hidden=\"true\">×</span></button>`\r\n            }\r\n        }\r\n    };\r\n};\r\n","import Wfst from './ol-wfst';\r\nimport WfsLayer from './WfsLayer';\r\nimport WmsLayer from './WmsLayer';\r\nimport Geoserver from './Geoserver';\r\n\r\nconst utils = {\r\n    WfsLayer,\r\n    WmsLayer,\r\n    Geoserver\r\n};\r\n\r\nObject.assign(Wfst, utils);\r\nexport default Wfst;\r\n"],"names":["_factory","_defaults","Object","freeze","el","animate","animateClass","animateInClass","appendTo","backdrop","keyboard","title","header","content","footer","buttons","headerClose","construct","transition","backdropTransition","_buttons","deepFreeze","obj","k","Array","isArray","forEach","v","dialog","text","value","attr","class","alert","confirm","_templates","container","body","data","prop","prefix","elData","dataAttr","getAttribute","build","html","all","nodeName","replace","document","createElement","innerHTML","childNodes","getPath","node","nodes","parentNode","push","Modal","EventEmitter","templates","this","_baseTemplates","assign","_baseButtons","options","_baseOptions","version","static","message","_options","question","constructor","super","id","Math","random","toString","_html","_events","_visible","_pointerInContent","querySelector","_scrollbarWidth","inner","width","outerWidth","outer","style","visibility","appendChild","offsetWidth","overflow","removeChild","calcScrollbarWidth","Error","_render","_mapDom","o","t","classList","add","_setHeader","_setContent","_setFooter","contains","outerHTML","ineerHTML","children","length","button","setAttribute","j","_setEvents","keydownHandler","_handleKeydownEvent","bind","addEventListener","mousedownHandler","_handleMousedownEvent","clickHandler","_handleClickEvent","resizeHandler","_handleResizeEvent","window","e","target","every","tagName","emit","hide","which","_resize","show","_checkScrollbar","_setScrollbar","display","scrollTop","once","setTimeout","_backdrop","toggle","modalIsOverflowing","scrollHeight","documentElement","clientHeight","paddingLeft","bodyIsOverflowing","paddingRight","contCList","remove","_removeEvents","originalBodyPad","removeEventListener","clientWidth","innerWidth","basePadding","parseInt","isError","Set","parseError","geoserverResponse","exceptions","map","join","showError","msg","originalError","layerName","has","err_msg","al","on","delete","en","labels","select","addElement","editElement","save","cancel","apply","upload","editMode","confirmDelete","geomTypeNotSupported","editFields","editGeom","selectDrawType","uploadToLayer","uploadFeatures","validFeatures","invalidFeatures","loading","toggleVisibility","close","errors","capabilities","wfst","layer","layerNotFound","layerNotVisible","noValidGeometry","geoserver","badFormat","badFile","lockFeature","transaction","getFeatures","langs","es","zh","I18N","loadingDiv","showLoading","bool","copyProps","dest","src","exclude","props","getOwnPropertyDescriptors","defineProperties","protoChain","currentChain","proto","getPrototypeOf","hardMixProtos","ingredients","_a","base","objs","commonProto","protoChains","protos","pop","potentialCommonProto","nearestCommonProto","prototype","mixedProto","create","visitedProtos","i","newProto","indexOf","unique","arr","filter","mixins","Map","getMixinsForClass","clazz","get","mergeObjectsOfDecorators","o1","o2","_b","allKeys","getOwnPropertyNames","mergedObject","key","mergePropertyAndMethodDecorators","d1","d2","_c","_d","property","method","decorators","deepDecoratorSearch","classes","decoratorsForClassChain","allClasses","frontier","size","newClasses","c","newClass","findAllConstituentClasses","reduce","_e","_f","instance","mergeDecorators","Mixin","constructors","prototypes","MixedClass","args","setPrototypeOf","DecoratedMixedClass","classDecorators","decorator","result","applyPropAndMethodDecorators","mixedClass","constituents","set","propAndMethodDecorators","propDecorators","methodDecorators","getOwnPropertyDescriptor","GeometryType","TransactionType","layerToInsertElements","mode","Modes","activateMode","m","getMode","editedFeatures","mapLayers","getMap","setActiveLayerToInsertEls","getActiveLayerToInsertEls","getStoredMapLayers","getStoredLayer","addFeatureToEditedList","feature","String","getId","removeFeatureFromEditList","isFeatureEdited","BaseLayer","Layer","_init","getGeoserver","isLoaded","getAndUpdateDescribeFeatureType","async","BaseLayerProperty","NAME","layerLabel","LABEL","params","URLSearchParams","service","getAdvanced","describeFeatureTypeVersion","request","typeName","outputFormat","url_fetch","getUrl","response","fetch","headers","getHeaders","credentials","getCredentials","ok","json","targetNamespace","properties","featureTypes","geom","find","type","_parsed","namespace","geomType","localType","geomField","name","DESCRIBEFEATURETYPE","err","console","error","isVisibleByZoom","getView","getZoom","getMinZoom","features","transact","transactFeatures","Insert","featureId","getUseLockFeature","hasLockFeature","GEOSERVER","getDescribeFeatureType","WfsSource","VectorSource","urlParams","SERVICE","REQUEST","OUTPUTFORMAT","EXCEPTIONS","format","GeoJSON","loader","extent","resolution","projection","success","failure","strategy","bbox","extentGeoServer","transformExtent","getCode","geoServerAdvanced","geoserverUrl","getFormat","readFeatures","featureProjection","dataProjection","addFeatures","removeLoadedExtent","getFeatureVersion","WfsLayer","_loadingCount","_loadedCount","beforeTransactFeature","label","minZoom","source","geoserverVendor","dispatchEvent","setSource","geoserverOptions","keys","param","refresh","getSource","setCustomParam","paramName","TileState","WmsSource","TileWMS","url","serverType","TILED","LAYERS","tileLoadFunction","tile","blob","parsedError","Promise","resolve","reader","FileReader","onloadend","JSON","parse","readAsText","getImage","URL","createObjectURL","setState","WmsLayer","_formatGeoJSON","evt","coordinate","view","buffer","getResolution","getProjection","INFO_FORMAT","BUFFER","FEATURE_COUNT","status","getParams","Date","getMilliseconds","updateParams","Event$1","propagationStopped","defaultPrevented","preventDefault","stopPropagation","ObjectEventType","Disposable$1","disposed","dispose","disposeInternal","VOID","clear","object","Target$1","Disposable","eventTarget_","pendingRemovals_","dispatching_","listeners_","listener","listeners","listenersForType","includes","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","call","pr","getListeners","undefined","hasListener","index","splice","EventType","listen","thisArg","originalListener","arguments","eventsKey","listenOnce","unlistenByKey","Observable","EventTarget","un","revision_","changed","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","Observable$1","uidCounter_","ObjectEvent","oldValue","BaseObject$1","values","ol_uid","values_","setProperties","hasOwnProperty","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","silent","applyProperties","unset","isEmpty","element","getComputedStyle","marginLeft","marginRight","outerHeight","height","offsetHeight","marginTop","marginBottom","MapEventType","Property","Overlay$1","BaseObject","insertFirst","stopEvent","className","position","pointerEvents","autoPan","rendered","transform_","visible","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","offset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","lastChild","removeChildren","render","updatePixelPosition","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","performAutoPan","setMap","panIntoView","panIntoViewOptions","getTargetElement","mapRect","getRect","getSize","overlayRect","myMargin","margin","extent2","extent1","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","abs","center","getCenterInternal","centerPx","getPixelFromCoordinateInternal","newCenterPx","panOptions","animation","animateInternal","getCoordinateFromPixelInternal","duration","easing","box","getBoundingClientRect","offsetX","left","pageXOffset","offsetY","top","pageYOffset","setVisible","isRendered","pixel","getPixelFromCoordinate","mapSize","updateRenderedPosition","posX","posY","transform","round","getOptions","attrs","elem","DocumentFragment","entries","startsWith","toLowerCase","substr","child","append","nodeType","resetStateButtons","activeBtn","LayersControl","_uploads","_uploadFormats","uploads","uploadFormats","addLayerEl","input","myPragma","checked","onchange","_layerChangeHandler","layerDom","getVisible","onclick","_visibilityClickHandler","htmlFor","_changeStateSelect","geomDrawTypeSelected","setSelectState","from","selectDraw","option","selected","disabled","drawType","geomLayer","GeometryCollection","LineString","LinearRing","Circle","Polygon","parentDiv","currentTarget","closest","dataset","accept","process","selectedValue","Point","MultiPoint","MultiLineString","MultiPolygon","editLayer","VectorLayer","zIndex","getEditLayer","Uploads","_formatWFS","_formatKml","_xs","_processUpload","processUpload","WFS","KML","extractStyles","showPointNames","XMLSerializer","file","files","extension","split","string","_fileReader","invalidFeaturesCount","validFeaturesCount","featuresToInsert","_checkGeometry","_fixGeometry","VectorSourceEvent","_initModal","reject","fileData","geomTypeLayer","getGeometry","getType","coords","getCoordinates","setGeometry","geomTypeFeature","modal","action","deepObjectAssign","sources","s_val","t_val","EditControlChangesEl","Control","styleFunction","getVertexs","geometry","getGeometries","coordinates","flatCoordinates","flat","Edit","Style","image","CircleStyle","radius","fill","Fill","color","Draw","stroke","Stroke","EditFieldsModal","_modal","_feature","querySelectorAll","field","dataSchema","GeoserverProperty","EditOverlay","Overlay","getCenter","getExtent","alt","controlElement","Wfst","_i18n","_map","_view","_viewport","_initialized","_layersControl","_overlay","_interactionWfsSelect","_interactionSelectModify","_collectionModify","_interactionModify","_interactionSnap","_interactionDraw","_keyClickWms","_keyRemove","_keySelect","_controlApplyDiscardChanges","_controlWidgetToolsDiv","_selectDraw","_currentZoom","_lastZoom","_editFeature","_editFeatureOriginal","_editFields","lang","customI18n","i18n.setLang","language","i18n","defaultOptions","layers","evtType","active","showControl","getLayers","getLayerByName","layerRendered","layersNumber","domEl","ISVISIBLE","WfstEvent","addLayer","setMapLayers","_createMapElements","opts","getViewport","insertFeatures","activateEditMode","editLayerSource","fit","maxZoom","padding","_deleteFeature","_addMapEvents","_initMapAndLayers","_prepareEditLayer","_addInteractions","_addInteractionHandlers","_addMapControl","prepareWfsInteraction","Collection","Select","hitTolerance","toggleCondition","never","addInteraction","deselected","mapBrowserEvent","getLayer","removeFeature","_addFeatureToEditMode","prepareWmsInteraction","removeCondition","hasFeatureAtPixel","_getFeaturesByClickEvent","Modify","condition","primaryAction","Snap","selectedFeatures","keyboardEvents","item","_onDeselectFeatureEvent","_onRemoveFeatureEvent","showUpload","activateDrawMode","i18n.I18N","controlEl","_deselectEditFeature","_removeOverlayHelper","_restoreFeatureToLayer","addFeature","_removeFeatureFromTmpLayer","checkIfFeatureIsChanged","Update","_editModeOff","Delete","_editModeOn","clone","addControl","removeControl","deleteEl","ev","getLength","overlay","addOverlay","maybeLockFeature","addDrawInteraction","removeInteraction","geomDrawType","stopClick","btn","activateDrawButton","activateModeButtons","setActive","getOverlayById","removeOverlay","BaseEvent","utils","Geoserver","_countRequests","_insertFeatures","_updateFeatures","_deleteFeatures","state_","defaults","advanced","getCapabilitiesVersion","lockFeatureVersion","wfsTransactionVersion","lockFeatureParams","expiry","lockId","releaseAction","useLockFeature","setAdvanced","setHeaders","setCredentials","setUrl","setUseLockFeature","getAndUpdateCapabilities","_checkGeoserverCapabilities","getCapabilities","CAPABILITIES","opt_silent","HEADERS","CREDENTIALS","ADVANCED","hasTransaction","HASTRASNACTION","HASLOCKFEATURE","USELOCKFEATURE","ISLOADED","getState","DOMParser","parseFromString","operations","getElementsByTagName","operation","HASDESCRIBEFEATURETYPE","transactionType","clonedFeatures","geoLayer","_cloneFeature","cloneGeom","_transformGeoemtryCollectionToGeometries","_transformCircleToPolygon","numberRequest","srs","describeFeatureType","featureNS","featureType","srsName","featurePrefix","nativeElements","writeTransaction","payload","serializeToString","gmemberIn","gmemberOut","responseStr","parseResponse","readTransactionResponse","wlayer","findError","match","_removeFeatures","geomConverted","fromCircle","featureProperties","boundedBy","_layerName_","Feature","setId","retry","LockId","featureid","dataParsed","code"],"mappings":"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","x_google_ignoreList":[0,7,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]}