{"version":3,"file":"ol-wfst.min.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/ol/TileState.js","../node_modules/ol/util.js","../node_modules/ol/AssertionError.js","../node_modules/ol/events/Event.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Target.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/Object.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Collection.js","../node_modules/ol/Feature.js","../node_modules/ol/asserts.js","../node_modules/ol/dom.js","../node_modules/ol/MapEventType.js","../node_modules/ol/OverlayPositioning.js","../node_modules/ol/Overlay.js","../node_modules/ol/extent.js","../node_modules/modal-vanilla/lib/modal.js","../src/@enums.ts","../node_modules/modal-vanilla/index.js","../src/assets/i18n/es.ts","../src/assets/i18n/en.ts","../src/ol-wfst.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.12.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * @type {boolean}\n         */\n        this.defaultPrevented;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n     * will be fired.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.defaultPrevented = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n/**\n * @typedef {'propertychange'} Types\n */\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n    function promiseGetter() {\n        var value;\n        try {\n            value = getter();\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n        if (value instanceof Promise) {\n            return value;\n        }\n        return Promise.resolve(value);\n    }\n    return promiseGetter();\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*} [opt_target] Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string} [opt_type] Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        _this.on =\n            /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (_this.onInternal);\n        _this.once =\n            /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (_this.onceInternal);\n        _this.un = /** @type {ObservableOnSignature<void>} */ (_this.unInternal);\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n     * @protected\n     */\n    Observable.prototype.onInternal = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n     * @protected\n     */\n    Observable.prototype.onceInternal = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @protected\n     */\n    Observable.prototype.unInternal = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ObjectOnSignature<void>}\n         */\n        _this.un;\n        // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = \"change:\" + key;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {import(\"./events.js\").Listener} listener Listener.\n     */\n    BaseObject.prototype.addChangeListener = function (key, listener) {\n        this.addEventListener(\"change:\" + key, listener);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {import(\"./events.js\").Listener} listener Listener.\n     */\n    BaseObject.prototype.removeChangeListener = function (key, listener) {\n        this.removeEventListener(\"change:\" + key, listener);\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean} [opt_silent] Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean} [opt_silent] Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean} [opt_silent] Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*} [opt_element] Element.\n     * @param {number} [opt_index] The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>} [opt_array] Array.\n     * @param {Options} [opt_options] Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {CollectionOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number} [opt_except] Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature<import(\"./geom/Geometry.js\").default>|import(\"./render/Feature.js\").default} FeatureLike\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {FeatureOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addChangeListener(_this.geometryName_, _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof (\n            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature<Geometry>} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = /** @type {Feature<Geometry>} */ (new Feature(this.hasProperties() ? this.getProperties() : null));\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature to override the layer style.  This can be a\n     * single style object, an array of styles, or a function that takes a\n     * resolution and returns an array of styles. To unset the feature style, call\n     * `setStyle()` without arguments or a falsey value.\n     * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style;\n        this.styleFunction_ = !opt_style\n            ? undefined\n            : createStyleFunction(opt_style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool, opt_Context2DSettings) {\n    /** @type {HTMLCanvasElement|OffscreenCanvas} */\n    var canvas;\n    if (opt_canvasPool && opt_canvasPool.length) {\n        canvas = opt_canvasPool.shift();\n    }\n    else if (WORKER_OFFSCREEN_CANVAS) {\n        canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n    }\n    else {\n        canvas = document.createElement('canvas');\n    }\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d', opt_Context2DSettings));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/OverlayPositioning\n */\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_CENTER: 'bottom-center',\n    BOTTOM_RIGHT: 'bottom-right',\n    CENTER_LEFT: 'center-left',\n    CENTER_CENTER: 'center-center',\n    CENTER_RIGHT: 'center-right',\n    TOP_LEFT: 'top-left',\n    TOP_CENTER: 'top-center',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=OverlayPositioning.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { containsExtent } from './extent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { outerHeight, outerWidth, removeChildren, removeNode } from './dom.js';\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning',\n};\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {OverlayOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst =\n            options.insertFirst !== undefined ? options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className =\n            options.className !== undefined\n                ? options.className\n                : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        _this.element.style.pointerEvents = 'auto';\n        var autoPan = options.autoPan;\n        if (autoPan && 'object' !== typeof autoPan) {\n            autoPan = {\n                animation: options.autoPanAnimation,\n                margin: options.autoPanMargin,\n            };\n        }\n        /**\n         * @protected\n         * @type {PanIntoViewOptions|false}\n         */\n        _this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n        /**\n         * @protected\n         * @type {{transform_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            transform_: '',\n            visible: true,\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        _this.addChangeListener(Property.ELEMENT, _this.handleElementChanged);\n        _this.addChangeListener(Property.MAP, _this.handleMapChanged);\n        _this.addChangeListener(Property.OFFSET, _this.handleOffsetChanged);\n        _this.addChangeListener(Property.POSITION, _this.handlePositionChanged);\n        _this.addChangeListener(Property.POSITIONING, _this.handlePositioningChanged);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning !== undefined\n            ? /** @type {import(\"./OverlayPositioning.js\").default} */ (options.positioning)\n            : OverlayPositioning.TOP_LEFT);\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP));\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return /** @type {import(\"./OverlayPositioning.js\").default} */ (this.get(Property.POSITIONING));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent\n                ? map.getOverlayContainerStopEvent()\n                : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n            this.performAutoPan();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        this.performAutoPan();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary) using the configured autoPan parameters\n     * @protected\n     */\n    Overlay.prototype.performAutoPan = function () {\n        if (this.autoPan) {\n            this.panIntoView(this.autoPan);\n        }\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n     * @api\n     */\n    Overlay.prototype.panIntoView = function (opt_panIntoViewOptions) {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [\n            outerWidth(element),\n            outerHeight(element),\n        ]);\n        var panIntoViewOptions = opt_panIntoViewOptions || {};\n        var myMargin = panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - myMargin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + myMargin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - myMargin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + myMargin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenterInternal());\n                var centerPx = map.getPixelFromCoordinateInternal(center);\n                if (!centerPx) {\n                    return;\n                }\n                var newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n                var panOptions = panIntoViewOptions.animation || {};\n                map.getView().animateInternal({\n                    center: map.getCoordinateFromPixelInternal(newCenterPx),\n                    duration: panOptions.duration,\n                    easing: panOptions.easing,\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement} element The element.\n     * @param {import(\"./size.js\").Size} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var x = Math.round(pixel[0] + offset[0]) + 'px';\n        var y = Math.round(pixel[1] + offset[1]) + 'px';\n        var posX = '0%';\n        var posY = '0%';\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n            positioning == OverlayPositioning.CENTER_RIGHT ||\n            positioning == OverlayPositioning.TOP_RIGHT) {\n            posX = '-100%';\n        }\n        else if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.CENTER_CENTER ||\n            positioning == OverlayPositioning.TOP_CENTER) {\n            posX = '-50%';\n        }\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\n            posY = '-100%';\n        }\n        else if (positioning == OverlayPositioning.CENTER_LEFT ||\n            positioning == OverlayPositioning.CENTER_CENTER ||\n            positioning == OverlayPositioning.CENTER_RIGHT) {\n            posY = '-50%';\n        }\n        var transform = \"translate(\" + posX + \", \" + posY + \") translate(\" + x + \", \" + y + \")\";\n        if (this.rendered.transform_ != transform) {\n            this.rendered.transform_ = transform;\n            style.transform = transform;\n            // @ts-ignore IE9\n            style.msTransform = transform;\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * Vanilla JS Modal compatible with Bootstrap\n * modal-vanilla 0.9.0 <https://github.com/KaneCohen/modal-vanilla>\n * Copyright 2020 Kane Cohen <https://github.com/KaneCohen>\n * Available under BSD-3-Clause license\n */\nimport EventEmitter from 'events';\n\nconst _factory = document.createElement('div');\n\nconst _defaults = Object.freeze({\n  el: null,               // Existing DOM element that will be 'Modal-ized'.\n  animate: true,          // Show Modal using animation.\n  animateClass: 'fade',   //\n  animateInClass: 'show', //\n  appendTo: 'body',       // DOM element to which constructed Modal will be appended.\n  backdrop: true,         // Boolean or 'static', Show Modal backdrop blocking content.\n  keyboard: true,         // Close modal on esc key.\n  title: false,           // Content of the title in the constructed dialog.\n  header: true,           // Show header content.\n  content: false,         // Either string or an HTML element.\n  footer: true,           // Footer content. By default will use buttons.\n  buttons: null,          //\n  headerClose: true,      // Show close button in the header.\n  construct: false,       // Creates new HTML with a given content.\n  transition: 300,        //\n  backdropTransition: 150 //\n});\n\nconst _buttons = deepFreeze({\n  dialog: [\n    {text: 'Cancel',\n      value: false,\n      attr: {\n        'class': 'btn btn-default',\n        'data-dismiss': 'modal'\n      }\n    },\n    {text: 'OK',\n      value: true,\n      attr: {\n        'class': 'btn btn-primary',\n        'data-dismiss': 'modal'\n      }\n    }\n  ],\n  alert: [\n    {text: 'OK',\n      attr: {\n        'class': 'btn btn-primary',\n        'data-dismiss': 'modal'\n      }\n    }\n  ],\n  confirm: [\n    {text: 'Cancel',\n      value: false,\n      attr: {\n        'class': 'btn btn-default',\n        'data-dismiss': 'modal'\n      }\n    },\n    {text: 'OK',\n      value: true,\n      attr: {\n        'class': 'btn btn-primary',\n        'data-dismiss': 'modal'\n      }\n    }\n  ]\n});\n\nconst _templates = {\n  container: '<div class=\"modal\"></div>',\n  dialog: '<div class=\"modal-dialog\"></div>',\n  content: '<div class=\"modal-content\"></div>',\n  header: '<div class=\"modal-header\"></div>',\n  headerClose: '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>',\n  body: '<div class=\"modal-body\"></div>',\n  footer: '<div class=\"modal-footer\"></div>',\n  backdrop: '<div class=\"modal-backdrop\"></div>'\n};\n\nfunction deepFreeze(obj) {\n  for (let k in obj) {\n    if (Array.isArray(obj[k])) {\n      obj[k].forEach(v => {\n        deepFreeze(v);\n      });\n    } else if (obj[k] !== null && typeof obj[k] === 'object') {\n      Object.freeze(obj[k]);\n    }\n  }\n  return Object.freeze(obj);\n}\n\nfunction guid() {\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16) +\n    (((1 + Math.random()) * 0x10000) | 0).toString(16);\n}\n\nfunction data(el, prop, value) {\n let prefix = 'data';\n let elData = el[prefix] || {};\n if (typeof value === 'undefined') {\n   if (el[prefix] && el[prefix][prop]) {\n     return el[prefix][prop];\n   } else {\n     var dataAttr = el.getAttribute(`${prefix}-${prop}`);\n     if (typeof dataAttr !== 'undefined') {\n       return dataAttr;\n     }\n     return null;\n   }\n } else {\n   elData[prop] = value;\n   el[prefix] = elData;\n   return el;\n }\n}\n\nfunction build(html, all) {\n  if (html.nodeName) return html;\n  html = html.replace(/(\\t|\\n$)/g, '');\n\n  _factory.innerHTML = '';\n  _factory.innerHTML = html;\n  if (all === true) {\n    return _factory.childNodes;\n  } else {\n    return _factory.childNodes[0];\n  }\n}\n\nfunction calcScrollbarWidth() {\n  let inner;\n  let width;\n  let outerWidth;\n  let outer = document.createElement('div');\n  Object.assign(outer.style, {\n    visibility: 'hidden',\n    width: '100px'\n  });\n  document.body.appendChild(outer);\n\n  outerWidth = outer.offsetWidth;\n  outer.style.overflow = 'scroll';\n\n  inner = document.createElement('div');\n  inner.style.width = '100%';\n  outer.appendChild(inner);\n\n  width = outerWidth - inner.offsetWidth;\n  document.body.removeChild(outer);\n\n  return width;\n}\n\nfunction getPath(node) {\n  let nodes = [node];\n  while (node.parentNode) {\n    node = node.parentNode;\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nclass Modal extends EventEmitter {\n  static set templates(templates) {\n    this._baseTemplates = templates;\n  }\n\n  static get templates() {\n    return Object.assign({}, _templates, Modal._baseTemplates || {});\n  }\n\n  static set buttons(buttons) {\n    this._baseButtons = buttons;\n  }\n\n  static get buttons() {\n    return Object.assign({}, _buttons, Modal._baseButtons || {});\n  }\n\n  static set options(options) {\n    this._baseOptions = options;\n  }\n\n  static get options() {\n    return Object.assign({}, _defaults, Modal._baseOptions || {});\n  }\n\n  static get version() {\n    return '0.9.0';\n  }\n\n  static alert(message, _options = {}) {\n    let options = Object.assign({},\n      _defaults,\n      {\n        title:  message,\n        content: false,\n        construct: true,\n        headerClose: false,\n        buttons: Modal.buttons.alert\n      },\n      _options\n    );\n\n    return new Modal(options);\n  }\n\n  static confirm(question, _options = {}) {\n    let options = Object.assign({},\n      _defaults,\n      {\n        title:  question,\n        content: false,\n        construct: true,\n        headerClose: false,\n        buttons: Modal.buttons.confirm\n      },\n      _options\n    );\n\n    return new Modal(options);\n  }\n\n  constructor(options = {}) {\n    super();\n\n    this.id = guid();\n    this.el = null;\n    this._html = {};\n    this._events = {};\n    this._visible = false;\n    this._options = Object.assign({}, Modal.options, options);\n    this._templates = Object.assign({}, Modal.templates, options.templates || {});\n    this._html.appendTo = document.querySelector(this._options.appendTo);\n    this._scrollbarWidth = calcScrollbarWidth();\n\n    if (this._options.buttons === null) {\n      this._options.buttons = Modal.buttons.dialog;\n    }\n\n    if (this._options.el) {\n      let el = this._options.el;\n      if (typeof this._options.el == 'string') {\n        el = document.querySelector(this._options.el);\n        if (! el) {\n          throw new Error(`Selector: DOM Element ${this._options.el} not found.`);\n        }\n      }\n      data(el, 'modal', this);\n      this.el = el;\n    } else {\n      this._options.construct = true;\n    }\n\n    if (this._options.construct) {\n      this._render();\n    } else {\n      this._mapDom();\n    }\n  }\n\n  _render() {\n    let html = this._html;\n    let o = this._options;\n    let t = this._templates;\n    let animate = o.animate ? o.animateClass : false;\n\n    html.container = build(t.container);\n    html.dialog = build(t.dialog);\n    html.content = build(t.content);\n    html.header = build(t.header);\n    html.headerClose = build(t.headerClose);\n    html.body = build(t.body);\n    html.footer = build(t.footer);\n    if (animate) html.container.classList.add(animate);\n\n    this._setHeader();\n    this._setContent();\n    this._setFooter();\n\n    this.el = html.container;\n\n    html.dialog.appendChild(html.content);\n    html.container.appendChild(html.dialog);\n\n    return this;\n  }\n\n  _mapDom() {\n    let html = this._html;\n    let o = this._options;\n\n    if (this.el.classList.contains(o.animateClass)) {\n      o.animate = true;\n    }\n\n    html.container = this.el;\n    html.dialog = this.el.querySelector('.modal-dialog');\n    html.content = this.el.querySelector('.modal-content');\n    html.header = this.el.querySelector('.modal-header');\n    html.headerClose = this.el.querySelector('.modal-header .close');\n    html.body = this.el.querySelector('.modal-body');\n    html.footer = this.el.querySelector('.modal-footer');\n\n    this._setHeader();\n    this._setContent();\n    this._setFooter();\n\n    return this;\n  }\n\n  _setHeader() {\n    let html = this._html;\n    let o = this._options;\n\n    if (o.header && html.header) {\n      if (o.title.nodeName) {\n        html.header.innerHTML = o.title.outerHTML;\n      } else if (typeof o.title === 'string') {\n        html.header.innerHTML = `<h4 class=\"modal-title\">${o.title}</h4>`;\n      }\n      // Add header close button only to constructed modals.\n      if (this.el === null && html.headerClose && o.headerClose) {\n        html.header.appendChild(html.headerClose);\n      }\n      if (o.construct) {\n        html.content.appendChild(html.header);\n      }\n    }\n  }\n\n  _setContent() {\n    let html = this._html;\n    let o = this._options;\n\n    if (o.content && html.body) {\n      if (typeof o.content === 'string') {\n        html.body.innerHTML = o.content;\n      } else {\n        html.body.innerHTML = o.content.outerHTML;\n      }\n      if (o.construct) {\n        html.content.appendChild(html.body);\n      }\n    }\n  }\n\n  _setFooter() {\n    let html = this._html;\n    let o = this._options;\n\n    if (o.footer && html.footer) {\n      if (o.footer.nodeName) {\n        html.footer.ineerHTML = o.footer.outerHTML;\n      } else if (typeof o.footer === 'string') {\n        html.footer.innerHTML = o.footer;\n      } else if (! html.footer.children.length) {\n        o.buttons.forEach((button) => {\n          let el = document.createElement('button');\n          data(el, 'button', button);\n          el.innerHTML = button.text;\n          el.setAttribute('type', 'button');\n          for (let j in button.attr) {\n            el.setAttribute(j, button.attr[j]);\n          }\n          html.footer.appendChild(el);\n        });\n      }\n      if (o.construct) {\n        html.content.appendChild(html.footer);\n      }\n    }\n\n  }\n\n  _setEvents() {\n    let o = this._options;\n    let html = this._html;\n\n    this._events.keydownHandler = this._handleKeydownEvent.bind(this);\n    document.body.addEventListener('keydown',\n      this._events.keydownHandler\n    );\n\n    this._events.clickHandler = this._handleClickEvent.bind(this);\n    html.container.addEventListener('click',\n      this._events.clickHandler\n    );\n\n    this._events.resizeHandler = this._handleResizeEvent.bind(this);\n    window.addEventListener('resize',\n      this._events.resizeHandler\n    );\n  }\n\n  _handleClickEvent(e) {\n    let path = getPath(e.target);\n    path.every(node => {\n      if (node.tagName === 'HTML') {\n        return false;\n      }\n      if (this._options.backdrop !== true && node.classList.contains('modal')) {\n        return false;\n      }\n      if (node.classList.contains('modal-content')) {\n        return false;\n      }\n      if (node.getAttribute('data-dismiss') === 'modal') {\n        this.emit('dismiss', this, e, data(e.target, 'button'));\n        this.hide();\n        return false;\n      }\n      if (node.classList.contains('modal')) {\n        this.emit('dismiss', this, e, null);\n        this.hide();\n        return false;\n      }\n      return true;\n    });\n  }\n\n  _handleKeydownEvent(e) {\n    if (e.which === 27 && this._options.keyboard) {\n      this.emit('dismiss', this, e, null);\n      this.hide();\n    }\n  }\n\n  _handleResizeEvent(e) {\n    this._resize();\n  }\n\n  show() {\n    let o = this._options;\n    let html = this._html;\n    this.emit('show', this);\n\n    this._checkScrollbar();\n    this._setScrollbar();\n    document.body.classList.add('modal-open');\n\n    if (o.construct) {\n      html.appendTo.appendChild(html.container);\n    }\n\n    html.container.style.display = 'block';\n    html.container.scrollTop = 0;\n\n    if (o.backdrop !== false) {\n      this.once('showBackdrop', () => {\n        this._setEvents();\n\n        if (o.animate) html.container.offsetWidth; // Force reflow\n\n        html.container.classList.add(o.animateInClass);\n\n        setTimeout(() => {\n          this._visible = true;\n          this.emit('shown', this);\n        }, o.transition);\n      });\n      this._backdrop();\n    } else {\n      this._setEvents();\n\n      if (o.animate) html.container.offsetWidth; // Force reflow\n\n      html.container.classList.add(o.animateInClass);\n\n      setTimeout(() => {\n        this._visible = true;\n        this.emit('shown', this);\n      }, o.transition);\n    }\n    this._resize();\n\n    return this;\n  }\n\n  toggle() {\n    if (this._visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  _resize() {\n    var modalIsOverflowing =\n      this._html.container.scrollHeight > document.documentElement.clientHeight;\n\n    this._html.container.style.paddingLeft =\n      ! this.bodyIsOverflowing && modalIsOverflowing ? this._scrollbarWidth + 'px' : '';\n\n    this._html.container.style.paddingRight =\n      this.bodyIsOverflowing && ! modalIsOverflowing ? this._scrollbarWidth + 'px' : '';\n  }\n\n  _backdrop() {\n    let html = this._html;\n    let t = this._templates;\n    let o = this._options;\n    let animate = o.animate ? o.animateClass : false;\n\n    html.backdrop = build(t.backdrop);\n    if (animate) html.backdrop.classList.add(animate);\n    html.appendTo.appendChild(html.backdrop);\n\n    if (animate) html.backdrop.offsetWidth;\n\n    html.backdrop.classList.add(o.animateInClass);\n\n    setTimeout(() => {\n      this.emit('showBackdrop', this);\n    }, this._options.backdropTransition);\n  }\n\n  hide() {\n    let html = this._html;\n    let o = this._options;\n    let contCList = html.container.classList;\n    this.emit('hide', this);\n\n    contCList.remove(o.animateInClass);\n\n    if (o.backdrop) {\n      let backCList = html.backdrop.classList;\n      backCList.remove(o.animateInClass);\n    }\n\n    this._removeEvents();\n\n    setTimeout(() => {\n      document.body.classList.remove('modal-open');\n      document.body.style.paddingRight = this.originalBodyPad;\n    }, o.backdropTransition);\n\n    setTimeout(() => {\n      if (o.backdrop) {\n        html.backdrop.parentNode.removeChild(html.backdrop);\n      }\n      html.container.style.display = 'none';\n\n      if (o.construct) {\n        html.container.parentNode.removeChild(html.container);\n      }\n\n      this._visible = false;\n      this.emit('hidden', this);\n    }, o.transition);\n\n    return this;\n  }\n\n  _removeEvents() {\n    if (this._events.keydownHandler) {\n      document.body.removeEventListener('keydown',\n        this._events.keydownHandler\n      );\n    }\n\n    this._html.container.removeEventListener('click',\n      this._events.clickHandler\n    );\n\n    window.removeEventListener('resize',\n      this._events.resizeHandler\n    );\n  }\n\n  _checkScrollbar() {\n    this.bodyIsOverflowing = document.body.clientWidth < window.innerWidth;\n  }\n\n  _setScrollbar() {\n    this.originalBodyPad = document.body.style.paddingRight || '';\n    if (this.bodyIsOverflowing) {\n      let basePadding = parseInt(this.originalBodyPad || 0, 10);\n      document.body.style.paddingRight = basePadding + this._scrollbarWidth + 'px';\n    }\n  }\n}\n\nexport default Modal;\n","export enum GeometryType {\n    Point = 'Point',\n    LineString = 'LineString',\n    LinearRing = 'LinearRing',\n    Polygon = 'Polygon',\n    MultiPoint = 'MultiPoint',\n    MultiLineString = 'MultiLineString',\n    MultiPolygon = 'MultiPolygon',\n    GeometryCollection = 'GeometryCollection',\n    Circle = 'Circle'\n}\n","module.exports = require('./lib/modal').default;\n","import { I18n } from '../../ol-wfst';\n\nexport const es: I18n = {\n    labels: {\n        select: 'Seleccionar',\n        addElement: 'Modo dibujo',\n        editElement: 'Editar elemento',\n        save: 'Guardar',\n        delete: 'Eliminar',\n        cancel: 'Cancelar',\n        apply: 'Aplicar cambios',\n        upload: 'Subir',\n        editMode: 'Modo Edición',\n        confirmDelete: '¿Estás seguro de borrar el elemento?',\n        geomTypeNotSupported: 'Geometría no compatible con la capa',\n        editFields: 'Editar campos',\n        editGeom: 'Editar geometría',\n        selectDrawType: 'Tipo de geometría para dibujar',\n        uploadToLayer: 'Subir archivo a la capa seleccionada',\n        uploadFeatures: 'Subida de elementos a la capa',\n        validFeatures: 'Válidas',\n        invalidFeatures: 'Invalidas',\n        loading: 'Cargando...',\n        toggleVisibility: 'Cambiar visibilidad de la capa',\n        close: 'Cerrar'\n    },\n    errors: {\n        capabilities: 'No se pudieron obtener las Capabilidades del GeoServer',\n        wfst: 'El GeoServer no tiene soporte a Transacciones',\n        layer: 'No se pudieron obtener datos de la capa',\n        noValidGeometry:\n            'No se encontraron geometrías válidas para agregar a esta capa',\n        geoserver: 'No se pudieron obtener datos desde el GeoServer',\n        badFormat: 'Formato no soportado',\n        badFile: 'Error al leer elementos del archivo',\n        lockFeature: 'No se pudieron bloquear elementos en el GeoServer.',\n        transaction:\n            'Error al hacer transacción con el GeoServer. HTTP status:',\n        getFeatures:\n            'Error al obtener elemento desde el GeoServer. HTTP status:'\n    }\n};\n","import { I18n } from '../../ol-wfst';\n\nexport const en: I18n = {\n    labels: {\n        select: 'Select',\n        addElement: 'Toggle Draw mode',\n        editElement: 'Edit feature',\n        save: 'Save',\n        delete: 'Delete',\n        cancel: 'Cancel',\n        apply: 'Apply changes',\n        upload: 'Upload',\n        editMode: 'Edit Mode',\n        confirmDelete: 'Are you sure to delete the feature?',\n        geomTypeNotSupported: 'Geometry not supported by layer',\n        editFields: 'Edit fields',\n        editGeom: 'Edit geometry',\n        selectDrawType: 'Geometry type to draw',\n        uploadToLayer: 'Upload file to selected layer',\n        uploadFeatures: 'Uploaded features to layer',\n        validFeatures: 'Valid geometries',\n        invalidFeatures: 'Invalid',\n        loading: 'Loading...',\n        toggleVisibility: 'Toggle layer visibility',\n        close: 'Close'\n    },\n    errors: {\n        capabilities: 'GeoServer Capabilities could not be downloaded.',\n        wfst: 'The GeoServer does not support Transactions',\n        layer: 'Could not get data from layer',\n        noValidGeometry: 'No valid geometries found to add to this layer',\n        geoserver: 'Could not get data from the GeoServer',\n        badFormat: 'Unsupported format',\n        badFile: 'Error reading items from file',\n        lockFeature:\n            'No se pudieron bloquear elementos en el GeoServer. HTTP status:',\n        transaction:\n            'Error when doing Transaction with GeoServer. HTTP status:',\n        getFeatures: 'Error getting elements from GeoServer. HTTP status:'\n    }\n};\n","// Ol\nimport TileState from 'ol/TileState';\nimport {\n    Circle,\n    Geometry,\n    GeometryCollection,\n    LineString,\n    MultiLineString,\n    MultiPoint,\n    MultiPolygon,\n    Point,\n    Polygon\n} from 'ol/geom';\nimport { Circle as CircleStyle, Fill, Stroke, Style } from 'ol/style';\nimport { Control } from 'ol/control';\nimport { Draw, Modify, Select, Snap } from 'ol/interaction';\nimport { EventsKey } from 'ol/events';\nimport {\n    Collection,\n    Feature,\n    ImageTile,\n    Overlay,\n    PluggableMap,\n    View\n} from 'ol';\nimport { FeatureLike } from 'ol/Feature';\nimport { GeoJSON, KML, WFS } from 'ol/format';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\nimport { Options as VectorLayerOptions } from 'ol/layer/BaseVector';\nimport { TileWMS, Vector as VectorSource } from 'ol/source';\nimport { all, bbox } from 'ol/loadingstrategy';\nimport { fromCircle } from 'ol/geom/Polygon';\nimport { getCenter } from 'ol/extent';\nimport { never, primaryAction } from 'ol/events/condition';\nimport { ProjectionLike, transformExtent } from 'ol/proj';\nimport { unByKey } from 'ol/Observable';\nimport { Coordinate } from 'ol/coordinate';\n\n// External\nimport Modal from 'modal-vanilla';\n\n// Images\nimport drawSvg from './assets/images/draw.svg';\nimport editFieldsSvg from './assets/images/editFields.svg';\nimport editGeomSvg from './assets/images/editGeom.svg';\nimport uploadSvg from './assets/images/upload.svg';\nimport visibilityOn from './assets/images/visibilityOn.svg';\nimport visibilityOff from './assets/images/visibilityOff.svg';\n\nimport { GeometryType } from './@enums';\nimport * as i18n from './assets/i18n/index';\n\n// Style\nimport './assets/scss/-ol-wfst.bootstrap5.scss';\nimport './assets/scss/ol-wfst.scss';\n\n// https://docs.geoserver.org/latest/en/user/services/wfs/axis_order.html\n\n// Axis ordering: latitude/longitude\nconst DEFAULT_GEOSERVER_SRS = 'EPSG:3857';\nconst DEFAULT_LANGUAGE = 'en';\n\nconst controlElement = document.createElement('div');\n\n/**\n * Tiny WFST-T client to insert (drawing/uploading), modify and delete\n * features on GeoServers using OpenLayers. Layers with these types\n * of geometries are supported: \"GeometryCollection\" (in this case, you can\n * choose the geometry type of each element to draw), \"Point\", \"MultiPoint\",\n * \"LineString\", \"MultiLineString\", \"Polygon\" and \"MultiPolygon\".\n *\n * @constructor\n * @fires getCapabilities\n * @fires describeFeatureType\n * @fires allDescribeFeatureTypeLoaded\n * @fires getFeature\n * @fires modifystart\n * @fires modifyend\n * @fires drawstart\n * @fires drawend\n * @extends {ol/control/Control~Control}\n * @param opt_options Wfst options, see [Wfst Options](#options) for more details.\n */\nexport default class Wfst extends Control {\n    protected _options: Options;\n    protected _i18n: I18n;\n\n    // Ol\n    public _map: PluggableMap;\n    public _view: View;\n    public overlay: Overlay;\n    public _viewport: HTMLElement;\n    protected _mapLayers: Array<VectorLayer<any> | TileLayer<any>>;\n\n    // Geoserver\n    protected _geoServerData: LayerData;\n    protected _useLockFeature: boolean;\n    protected _hasLockFeature: boolean;\n    protected _hasTransaction: boolean;\n    protected _geoServerCapabilities: XMLDocument;\n\n    // Interactions\n    protected interactionWfsSelect: Select;\n    protected interactionSelectModify: Select;\n    protected _collectionModify: Collection<any>;\n    protected interactionModify: Modify;\n    protected interactionSnap: Snap;\n    protected interactionDraw: Draw;\n\n    // Obserbable keys\n    protected _keyClickWms: EventsKey | EventsKey[];\n    protected _keyRemove: EventsKey;\n    protected _keySelect: EventsKey;\n\n    // Controls\n    protected _controlApplyDiscardChanges: Control;\n    protected _controlWidgetToolsDiv: HTMLElement;\n\n    // Formats\n    protected _formatWFS: WFS;\n    protected _formatGeoJSON: GeoJSON;\n    protected _formatKml: KML;\n    protected _xs: XMLSerializer;\n\n    // State\n    protected _countRequests: number;\n    protected _isVisible: boolean;\n    protected _currentZoom: number;\n    protected _lastZoom: number;\n\n    // Editing\n    protected _editedFeatures: Set<string>;\n    protected _editLayer: VectorLayer<any>;\n    protected _isEditModeOn: boolean;\n    protected _isDrawModeOn: boolean;\n    protected _editFeature: Feature<Geometry>;\n    protected _editFeatureOriginal: Feature<Geometry>;\n    protected _layerToInsertElements: string;\n    protected _insertFeatures: Array<Feature<Geometry>>;\n    protected _updateFeatures: Array<Feature<Geometry>>;\n    protected _deleteFeatures: Array<Feature<Geometry>>;\n    protected _modalLoading: HTMLDivElement;\n\n    protected _selectDraw: HTMLSelectElement;\n\n    constructor(opt_options?: Options) {\n        super({\n            target: null,\n            element: controlElement\n        });\n\n        // Check if the selected language exists\n        this._i18n =\n            opt_options.language && opt_options.language in i18n\n                ? i18n[opt_options.language]\n                : i18n[DEFAULT_LANGUAGE];\n\n        if (opt_options.i18n) {\n            // Merge custom translations\n            this._i18n = {\n                ...this._i18n,\n                ...opt_options.i18n\n            };\n        }\n\n        // Default options\n        const defaultOptions = {\n            geoServerUrl: null,\n            geoServerAdvanced: {\n                getCapabilitiesVersion: '1.3.0',\n                getFeatureVersion: '1.0.0',\n                describeFeatureTypeVersion: '1.1.0',\n                lockFeatureVersion: '1.1.0',\n                wfsTransactionVersion: '1.1.0',\n                projection: DEFAULT_GEOSERVER_SRS\n            },\n            headers: {},\n            layers: null,\n            evtType: 'singleclick',\n            active: true,\n            showControl: true,\n            useLockFeature: true,\n            minZoom: 9,\n            language: DEFAULT_LANGUAGE,\n            uploadFormats: '.geojson,.json,.kml',\n            processUpload: null,\n            beforeInsertFeature: null,\n            modal: {\n                animateClass: 'fade',\n                animateInClass: 'show',\n                transition: 300,\n                backdropTransition: 150,\n                templates: {\n                    dialog:\n                        '<div class=\"modal-dialog modal-dialog-centered\"></div>',\n                    headerClose: `<button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"${this._i18n.labels.close}\"><span aria-hidden=\"true\">×</span></button>`\n                }\n            }\n        };\n\n        this._options = deepObjectAssign(defaultOptions, opt_options);\n\n        this._mapLayers = [];\n        this._countRequests = 0;\n        this._isEditModeOn = false;\n\n        // GeoServer\n        this._hasLockFeature = false;\n        this._hasTransaction = false;\n        this._geoServerCapabilities = null;\n        this._geoServerData = {};\n\n        // Editing\n        this._editedFeatures = new Set();\n        this._layerToInsertElements = this._options.layers[0].name; // By default, the first layer is ready to accept new draws\n        this._insertFeatures = [];\n        this._updateFeatures = [];\n        this._deleteFeatures = [];\n\n        // Formats\n        this._formatWFS = new WFS();\n\n        this._formatGeoJSON = new GeoJSON();\n        this._formatKml = new KML({\n            extractStyles: false,\n            showPointNames: false\n        });\n        this._xs = new XMLSerializer();\n\n        this._controlWidgetToolsDiv = controlElement;\n        this._controlWidgetToolsDiv.className = 'ol-wfst--tools-control';\n\n        this._initAsyncOperations();\n    }\n\n    /**\n     * @private\n     */\n    _onLoad() {\n        this._map = super.getMap();\n        this._view = this._map.getView();\n        this._viewport = this._map.getViewport();\n\n        // State\n        this._isVisible = this._view.getZoom() > this._options.minZoom;\n\n        this._createLayers(this._options.layers);\n\n        this._initMapElements(this._options.showControl, this._options.active);\n    }\n\n    /**\n     * Connect to the GeoServer and retrieve metadata about the service (GetCapabilities).\n     * Get each layer specs (DescribeFeatureType) and create the layers and map controls.\n     *\n     * @param layers\n     * @param showControl\n     * @param active\n     * @private\n     */\n    async _initAsyncOperations(): Promise<void> {\n        try {\n            // @ts-expect-error\n            this.on('allDescribeFeatureTypeLoaded', this._onLoad);\n\n            this._showLoading();\n\n            await this._connectToGeoServerAndGetCapabilities();\n\n            if (this._options.layers) {\n                await this._getGeoserverLayersData(\n                    this._options.layers,\n                    this._options.geoServerUrl\n                );\n            }\n        } catch (err) {\n            this._hideLoading();\n            this._showError(err.message, err);\n        }\n    }\n\n    /**\n     * Get the capabilities from the GeoServer and check\n     * all the available operations.\n     *\n     * @fires capabilitiesLoaded\n     * @private\n     */\n    async _connectToGeoServerAndGetCapabilities(): Promise<void> {\n        /**\n         * @private\n         */\n        const getCapabilities = async (): Promise<XMLDocument> => {\n            const params = new URLSearchParams({\n                service: 'wfs',\n                version: this._options.geoServerAdvanced.getCapabilitiesVersion,\n                request: 'GetCapabilities',\n                exceptions: 'application/json'\n            });\n\n            const url_fetch =\n                this._options.geoServerUrl + '?' + params.toString();\n\n            try {\n                const response = await fetch(url_fetch, {\n                    headers: this._options.headers\n                });\n\n                if (!response.ok) {\n                    throw new Error('');\n                }\n\n                const data = await response.text();\n                const capabilities = new window.DOMParser().parseFromString(\n                    data,\n                    'text/xml'\n                );\n                return capabilities;\n            } catch (err) {\n                throw new Error(this._i18n.errors.capabilities);\n            }\n        };\n\n        this._geoServerCapabilities = await getCapabilities();\n\n        // Available operations in the geoserver\n        const operations: HTMLCollectionOf<Element> = this._geoServerCapabilities.getElementsByTagName(\n            'ows:Operation'\n        );\n\n        Array.from(operations).forEach((operation) => {\n            if (operation.getAttribute('name') === 'Transaction') {\n                this._hasTransaction = true;\n            } else if (operation.getAttribute('name') === 'LockFeature') {\n                this._hasLockFeature = true;\n            }\n        });\n\n        if (!this._hasTransaction) {\n            throw new Error(this._i18n.errors.wfst);\n        }\n\n        super.dispatchEvent({\n            type: 'getCapabilities',\n            // @ts-expect-error\n            data: this._geoServerCapabilities\n        });\n    }\n\n    /**\n     * Request and store data layers obtained by DescribeFeatureType\n     *\n     * @param layers\n     * @param geoServerUrl\n     * @private\n     */\n    async _getGeoserverLayersData(\n        layers: Array<LayerParams>,\n        geoServerUrl: string\n    ): Promise<void> {\n        /**\n         *\n         * @param layerName\n         * @fires describeFeatureType\n         * @fires allDescribeFeatureTypeLoaded\n         * @returns\n         * @private\n         */\n        const getLayerData = async (\n            layerName: string\n        ): Promise<DescribeFeatureType> => {\n            const params = new URLSearchParams({\n                service: 'wfs',\n                version: this._options.geoServerAdvanced\n                    .describeFeatureTypeVersion,\n                request: 'DescribeFeatureType',\n                typeName: layerName,\n                outputFormat: 'application/json',\n                exceptions: 'application/json'\n            });\n\n            const url_fetch = geoServerUrl + '?' + params.toString();\n\n            const response = await fetch(url_fetch, {\n                headers: this._options.headers\n            });\n\n            if (!response.ok) {\n                throw new Error('');\n            }\n\n            return await response.json();\n        };\n\n        for (const layer of layers) {\n            const layerName = layer.name;\n            const layerLabel = layer.label || layerName;\n\n            try {\n                const data = await getLayerData(layerName);\n\n                if (!data) {\n                    throw new Error('');\n                }\n\n                super.dispatchEvent({\n                    type: 'describeFeatureType',\n                    // @ts-expect-error\n                    layer: layerName,\n                    data: data\n                });\n\n                const targetNamespace = data.targetNamespace;\n                const properties = data.featureTypes[0].properties;\n\n                // Find the geometry field\n                const geom = properties.find(\n                    (el) => el.type.indexOf('gml:') >= 0\n                );\n\n                this._geoServerData[layerName] = {\n                    namespace: targetNamespace,\n                    properties: properties,\n                    geomType: geom.localType,\n                    geomField: geom.name\n                };\n            } catch (err) {\n                throw new Error(`${this._i18n.errors.layer} \"${layerLabel}\"`);\n            }\n        }\n\n        super.dispatchEvent({\n            type: 'allDescribeFeatureTypeLoaded',\n            // @ts-expect-error\n            data: this._geoServerData\n        });\n    }\n\n    /**\n     * Create map layers in wfs o wms modes.\n     *\n     * @param layers\n     * @private\n     */\n    _createLayers(layers: Array<LayerParams>): void {\n        let layerLoaded = 0;\n        let layersNumber = 0; // Only count visibles\n\n        /**\n         * When all the data is loaded, hide the loading\n         * @private\n         */\n        const addLayerLoaded = () => {\n            layerLoaded++;\n            if (layerLoaded >= layersNumber) {\n                this._hideLoading();\n            }\n        };\n\n        /**\n         *\n         * @param layerParams\n         * @private\n         */\n        const newWmsLayer = (layerParams: LayerParams): TileLayer<TileWMS> => {\n            const layerName = layerParams.name;\n            const cqlFilter = layerParams.cqlFilter;\n            const buffer = layerParams.tilesBuffer;\n\n            const params = {\n                SERVICE: 'WMS',\n                LAYERS: layerName,\n                TILED: true\n            };\n\n            if (cqlFilter) {\n                params['CQL_FILTER'] = cqlFilter;\n            }\n\n            if (buffer) {\n                params['BUFFER'] = buffer;\n            }\n\n            const source = new TileWMS({\n                url: this._options.geoServerUrl,\n                params: params,\n                serverType: 'geoserver',\n                tileLoadFunction: async (tile, src) => {\n                    try {\n                        const response = await fetch(src, {\n                            headers: this._options.headers\n                        });\n\n                        if (!response.ok) {\n                            throw new Error('');\n                        }\n\n                        const data = await response.blob();\n\n                        if (data !== undefined) {\n                            ((tile as ImageTile).getImage() as HTMLImageElement).src = URL.createObjectURL(\n                                data\n                            );\n                        } else {\n                            throw new Error('');\n                        }\n                        tile.setState(TileState.LOADED);\n                    } catch (err) {\n                        tile.setState(TileState.ERROR);\n                    }\n                }\n            });\n\n            let loading = 0;\n            let loaded = 0;\n\n            source.on('tileloadstart', () => {\n                loading++;\n                this._showLoading();\n            });\n\n            source.on(['tileloadend', 'tileloaderror'], () => {\n                loaded++;\n                setTimeout(() => {\n                    if (loading === loaded) addLayerLoaded();\n                }, 300);\n            });\n\n            const layer_options = {\n                name: layerName,\n                type: '_wms_',\n                minZoom: this._options.minZoom,\n                source: source,\n                visible: true,\n                zIndex: 1,\n                ...layerParams\n            };\n\n            const layer = new TileLayer(layer_options);\n\n            return layer;\n        };\n\n        /**\n         *\n         * @param layerParams\n         * @private\n         */\n        const newWfsLayer = (\n            layerParams: LayerParams\n        ): VectorLayer<VectorSource<Geometry>> => {\n            const layerName = layerParams.name;\n            const cqlFilter = layerParams.cqlFilter;\n            const strategy = layerParams.wfsStrategy || 'bbox';\n\n            const source = new VectorSource({\n                format: new GeoJSON(),\n                strategy: strategy === 'bbox' ? bbox : all,\n                loader: async (extent) => {\n                    try {\n                        const params = new URLSearchParams({\n                            service: 'wfs',\n                            version: this._options.geoServerAdvanced\n                                .getFeatureVersion,\n                            request: 'GetFeature',\n                            typename: layerName,\n                            outputFormat: 'application/json',\n                            exceptions: 'application/json',\n                            srsName: this._options.geoServerAdvanced.projection.toString()\n                        });\n\n                        if (cqlFilter) {\n                            params.append('cql_filter', cqlFilter);\n                        }\n\n                        // If bbox, add extent to the request\n                        if (strategy === 'bbox') {\n                            const extentGeoServer = transformExtent(\n                                extent,\n                                this._view.getProjection().getCode(),\n                                this._options.geoServerAdvanced.projection\n                            );\n                            // https://docs.geoserver.org/stable/en/user/services/wfs/reference.html\n                            // request features using a bounding box with CRS maybe different from featureTypes native CRS\n                            params.append(\n                                'bbox',\n                                extentGeoServer.toString() +\n                                    `,${this._options.geoServerAdvanced.projection}`\n                            );\n                        }\n\n                        const url_fetch =\n                            this._options.geoServerUrl +\n                            '?' +\n                            params.toString();\n\n                        const response = await fetch(url_fetch, {\n                            headers: this._options.headers\n                        });\n\n                        if (!response.ok) {\n                            throw new Error('');\n                        }\n\n                        const data = await response.json();\n\n                        this.dispatchEvent({\n                            type: 'getFeature',\n                            // @ts-expect-error\n                            layer: layerName,\n                            data: data\n                        });\n\n                        const features = source.getFormat().readFeatures(data, {\n                            featureProjection: this._view\n                                .getProjection()\n                                .getCode(),\n                            dataProjection: this._options.geoServerAdvanced\n                                .projection\n                        });\n\n                        features.forEach((feature: Feature<Geometry>) => {\n                            feature.set(\n                                '_layerName_',\n                                layerName,\n                                /* silent = */ true\n                            );\n                        });\n\n                        source.addFeatures(features as Feature<Geometry>[]);\n\n                        source.dispatchEvent('featuresloadend');\n                    } catch (err) {\n                        source.dispatchEvent('featuresloaderror');\n                        this._showError(this._i18n.errors.geoserver, err);\n                        source.removeLoadedExtent(extent);\n                    }\n                }\n            });\n\n            let loading = 0;\n            let loaded = 0;\n\n            source.on('featuresloadstart', () => {\n                loading++;\n                this._showLoading();\n            });\n\n            source.on(['featuresloadend', 'featuresloaderror'], () => {\n                loaded++;\n                setTimeout(() => {\n                    if (loading === loaded) addLayerLoaded();\n                }, 300);\n            });\n\n            const layer_options = {\n                name: layerName,\n                type: '_wfs_',\n                minZoom: this._options.minZoom,\n                source: source,\n                visible: true,\n                zIndex: 2,\n                ...layerParams\n            };\n\n            const layer = new VectorLayer(layer_options);\n\n            return layer;\n        };\n\n        for (const layerParams of layers) {\n            const layerName = layerParams.name;\n\n            // Only create the layer if we can get the GeoserverData\n            if (this._geoServerData[layerName]) {\n                let layer:\n                    | VectorLayer<VectorSource<Geometry>>\n                    | TileLayer<TileWMS>;\n\n                const layerParams = this._options.layers.find(\n                    (e) => e.name === layerName\n                );\n                const mode = layerParams.mode;\n\n                // If mode is undefined, by default use wfs\n                if (!mode) {\n                    layerParams.mode = 'wfs';\n                }\n\n                if (layerParams.mode === 'wfs') {\n                    layer = newWfsLayer(layerParams);\n                } else {\n                    layer = newWmsLayer(layerParams);\n                }\n\n                if (layer.getVisible()) layersNumber++;\n\n                this._map.addLayer(layer);\n                this._mapLayers[layerName] = layer;\n            }\n        }\n    }\n\n    /**\n     * Create the edit layer to allow modify elements, add interactions,\n     * map controls and keyboard handlers.\n     *\n     * @param showControl\n     * @param active\n     * @private\n     */\n    async _initMapElements(\n        showControl: boolean,\n        active: boolean\n    ): Promise<void> {\n        // VectorLayer to store features on editing and inserting\n        this._createEditLayer();\n\n        this._addInteractions();\n        this._addHandlers();\n\n        if (showControl) {\n            this._addMapControl();\n        }\n\n        // By default, init in edit mode\n        this.activateEditMode(active);\n    }\n\n    /**\n     * @private\n     */\n    _addInteractions(): void {\n        /**\n         * Select the wfs feature already downloaded\n         * @private\n         */\n        const prepareWfsInteraction = () => {\n            this._collectionModify = new Collection();\n\n            // Interaction to select wfs layer elements\n            this.interactionWfsSelect = new Select({\n                hitTolerance: 10,\n                style: (feature: Feature<Geometry>) =>\n                    this._styleFunction(feature),\n                toggleCondition: never, // Prevent add features to the current selection using shift\n                filter: (feature, layer) => {\n                    return (\n                        !this._isEditModeOn &&\n                        layer &&\n                        layer.get('type') === '_wfs_'\n                    );\n                }\n            });\n\n            this._map.addInteraction(this.interactionWfsSelect);\n\n            this.interactionWfsSelect.on(\n                'select',\n                ({ selected, deselected, mapBrowserEvent }) => {\n                    const coordinate = mapBrowserEvent.coordinate;\n\n                    if (selected.length) {\n                        selected.forEach((feature) => {\n                            if (\n                                !this._editedFeatures.has(\n                                    String(feature.getId())\n                                )\n                            ) {\n                                // Remove the feature from the original layer\n                                const layer = this.interactionWfsSelect.getLayer(\n                                    feature\n                                );\n                                layer.getSource().removeFeature(feature);\n                                this._addFeatureToEdit(feature, coordinate);\n                            }\n                        });\n                    }\n\n                    if (deselected.length) {\n                        if (!this._isEditModeOn) {\n                            deselected.forEach((feature) => {\n                                // Trigger deselect\n                                // This is necessary for those times where two features overlap.\n                                this._collectionModify.remove(feature);\n                            });\n                        }\n                    }\n                }\n            );\n        };\n\n        /**\n         * Call the geoserver to get the clicked feature\n         * @private\n         */\n        const prepareWmsInteraction = (): void => {\n            // Interaction to allow select features in the edit layer\n            this.interactionSelectModify = new Select({\n                style: (feature: Feature<Geometry>) =>\n                    this._styleFunction(feature),\n                layers: [this._editLayer],\n                toggleCondition: never, // Prevent add features to the current selection using shift\n                removeCondition: () => (this._isEditModeOn ? true : false) // Prevent deselect on clicking outside the feature\n            });\n\n            this._map.addInteraction(this.interactionSelectModify);\n\n            this._collectionModify = this.interactionSelectModify.getFeatures();\n\n            const getFeatures = async (evt) => {\n                for (const layerName in this._mapLayers) {\n                    const layer = this._mapLayers[layerName];\n\n                    // If layer is hidden or is not a wms, skip\n                    if (\n                        !layer.getVisible() ||\n                        !(layer.get('type') === '_wms_')\n                    ) {\n                        continue;\n                    }\n\n                    const coordinate = evt.coordinate;\n\n                    // Si la vista es lejana, disminumos el buffer\n                    // Si es cercana, lo aumentamos, por ejemplo, para podeer clickear los vectores\n                    // y mejorar la sensibilidad en IOS\n                    const buffer = this._view.getZoom() > 10 ? 10 : 5;\n\n                    const source = layer.getSource() as TileWMS;\n\n                    // Fallback to support a bad name\n                    // https://openlayers.org/en/v5.3.0/apidoc/module-ol_source_ImageWMS-ImageWMS.html#getGetFeatureInfoUrl\n                    const fallbackOl5 =\n                        'getFeatureInfoUrl' in source\n                            ? 'getFeatureInfoUrl'\n                            : 'getGetFeatureInfoUrl';\n\n                    const url = source[fallbackOl5](\n                        coordinate,\n                        this._view.getResolution(),\n                        this._view.getProjection().getCode(),\n                        {\n                            INFO_FORMAT: 'application/json',\n                            BUFFER: buffer, // Buffer es el \"hit tolerance\" para capas ráster\n                            FEATURE_COUNT: 1,\n                            EXCEPTIONS: 'application/json'\n                        }\n                    );\n\n                    try {\n                        const response = await fetch(url, {\n                            headers: this._options.headers\n                        });\n\n                        if (!response.ok) {\n                            throw new Error(\n                                this._i18n.errors.getFeatures +\n                                    ' ' +\n                                    response.status\n                            );\n                        }\n\n                        const data = await response.json();\n                        const features = this._formatGeoJSON.readFeatures(data);\n\n                        if (!features.length) {\n                            continue;\n                        }\n\n                        features.forEach((feature) =>\n                            this._addFeatureToEdit(\n                                feature,\n                                coordinate,\n                                layerName\n                            )\n                        );\n                    } catch (err) {\n                        this._showError(err.message, err);\n                    }\n                }\n            };\n\n            this._keyClickWms = this._map.on(\n                this._options.evtType,\n                async (evt) => {\n                    if (this._map.hasFeatureAtPixel(evt.pixel)) {\n                        return;\n                    }\n                    if (!this._isVisible) {\n                        return;\n                    }\n                    // Only get other features if editmode is disabled\n                    if (!this._isEditModeOn) {\n                        await getFeatures(evt);\n                    }\n                }\n            );\n        };\n\n        if (this._options.layers.find((layer) => layer.mode === 'wfs')) {\n            prepareWfsInteraction();\n        }\n\n        if (this._options.layers.find((layer) => layer.mode === 'wms')) {\n            prepareWmsInteraction();\n        }\n\n        this.interactionModify = new Modify({\n            style: () => {\n                if (this._isEditModeOn) {\n                    return new Style({\n                        image: new CircleStyle({\n                            radius: 6,\n                            fill: new Fill({\n                                color: '#ff0000'\n                            }),\n                            stroke: new Stroke({\n                                width: 2,\n                                color: 'rgba(5, 5, 5, 0.9)'\n                            })\n                        })\n                    });\n                } else {\n                    return;\n                }\n            },\n            features: this._collectionModify,\n            condition: (evt) => {\n                return primaryAction(evt) && this._isEditModeOn;\n            }\n        });\n\n        this._map.addInteraction(this.interactionModify);\n\n        this.interactionSnap = new Snap({\n            source: this._editLayer.getSource()\n        });\n        this._map.addInteraction(this.interactionSnap);\n    }\n\n    /**\n     * Layer to store temporary the elements to be edited\n     * @private\n     */\n    _createEditLayer(): void {\n        this._editLayer = new VectorLayer({\n            source: new VectorSource(),\n            zIndex: 100\n        });\n\n        this._map.addLayer(this._editLayer);\n    }\n\n    /**\n     * Add map handlers\n     * @private\n     */\n    _addHandlers(): void {\n        /**\n         * @private\n         */\n        const keyboardEvents = (): void => {\n            document.addEventListener('keydown', ({ key }) => {\n                const inputFocus = document.querySelector('input:focus');\n                if (inputFocus) {\n                    return;\n                }\n                if (key === 'Delete') {\n                    const selectedFeatures = this._collectionModify;\n                    if (selectedFeatures) {\n                        selectedFeatures.forEach((feature) => {\n                            this._deleteFeature(feature, true);\n                        });\n                    }\n                }\n            });\n        };\n\n        // When a feature is modified, add this to a list.\n        // This prevent events fired on select and deselect features that has no changes and should\n        // not be updated in the geoserver\n        this.interactionModify.on('modifyend', (evt) => {\n            const feature = evt.features.item(0);\n            this._addFeatureToEditedList(feature);\n            super.dispatchEvent(evt);\n        });\n\n        this.interactionModify.on('modifystart', (evt) => {\n            super.dispatchEvent(evt);\n        });\n\n        this._onDeselectFeatureEvent();\n        this._onRemoveFeatureEvent();\n\n        /**\n         * @private\n         */\n        const handleZoomEnd = (): void => {\n            if (this._currentZoom > this._options.minZoom) {\n                // Show the layers\n                if (!this._isVisible) {\n                    this._isVisible = true;\n                }\n            } else {\n                // Hide the layer\n                if (this._isVisible) {\n                    this._isVisible = false;\n                }\n            }\n        };\n\n        this._map.on('moveend', (): void => {\n            this._currentZoom = this._view.getZoom();\n\n            if (this._currentZoom !== this._lastZoom) {\n                handleZoomEnd();\n            }\n\n            this._lastZoom = this._currentZoom;\n        });\n\n        keyboardEvents();\n    }\n\n    /**\n     * Add the widget on the map to allow change the tools and select active layers\n     * @private\n     */\n    _addMapControl(): void {\n        /**\n         * @private\n         * @returns\n         */\n        const createLayersControl = (): Element => {\n            /**\n             *\n             * @param layerParams\n             * @private\n             * @returns\n             */\n            const createLayerElements = (layerParams: LayerParams): string => {\n                const layerName = layerParams.name;\n\n                const layerLabel = `<span title=\"${\n                    this._geoServerData[layerName].geomType\n                }\">${layerParams.label || layerName}</span>`;\n\n                const visible =\n                    'visible' in layerParams ? layerParams.visible : true;\n\n                return `\n                <div class=\"wfst--layer-control \n                    ${visible ? 'ol-wfst--visible-on' : ''}\n                    ${\n                        layerName === this._layerToInsertElements\n                            ? 'ol-wfst--selected-on'\n                            : ''\n                    }\n                    \" data-layer=\"${layerName}\">\n                    <div class=\"ol-wfst--tools-control-visible\">\n                    <span class=\"ol-wfst--tools-control-visible-btn ol-wfst--visible-btn-on\" title=\"${\n                        this._i18n.labels.toggleVisibility\n                    }\">\n                      <img src=\"${visibilityOn}\"/>\n                    </span>\n                    <span class=\"ol-wfst--tools-control-visible-btn ol-wfst--visible-btn-off\" title=\"${\n                        this._i18n.labels.toggleVisibility\n                    }\">\n                      <img src=\"${visibilityOff}\"/>\n                    </span>\n                  </div>\n                    <label for=\"wfst--${layerName}\">\n                        <input value=\"${layerName}\" id=\"wfst--${layerName}\" type=\"radio\" class=\"ol-wfst--tools-control-input\" name=\"wfst--select-layer\" ${\n                    layerName === this._layerToInsertElements\n                        ? 'checked=\"checked\"'\n                        : ''\n                }>\n                        ${layerLabel}\n                    </label>\n                </div>`;\n            };\n\n            let htmlLayers = '';\n\n            Object.keys(this._mapLayers).map(\n                (key) =>\n                    (htmlLayers += createLayerElements(\n                        this._options.layers.find((el) => el.name === key)\n                    ))\n            );\n            const selectLayers = document.createElement('div');\n            selectLayers.className = 'wfst--tools-control--select-layers';\n            selectLayers.innerHTML = htmlLayers;\n\n            // Layer Selector\n            const radioInputs = selectLayers.querySelectorAll('input');\n            radioInputs.forEach((radioInput) => {\n                const parentDiv = radioInput.closest(\n                    '.wfst--layer-control'\n                ) as HTMLElement;\n                radioInput.onchange = () => {\n                    // Deselect DOM previous layer\n                    const selected = selectLayers.querySelector(\n                        '.ol-wfst--selected-on'\n                    );\n                    if (selected)\n                        selected.classList.remove('ol-wfst--selected-on');\n\n                    // Select this layer\n                    parentDiv.classList.add('ol-wfst--selected-on');\n                    this._layerToInsertElements = radioInput.value;\n                    this._changeStateSelect(this._layerToInsertElements);\n                };\n            });\n\n            // Visibility toggler\n            const visibilityBtn = selectLayers.querySelectorAll(\n                '.ol-wfst--tools-control-visible-btn'\n            );\n            visibilityBtn.forEach((btn: HTMLElement) => {\n                const parentDiv = btn.closest(\n                    '.wfst--layer-control'\n                ) as HTMLElement;\n                const layerName = parentDiv.dataset['layer'];\n                btn.onclick = () => {\n                    parentDiv.classList.toggle('ol-wfst--visible-on');\n                    const layer = this._mapLayers[layerName];\n                    if (parentDiv.classList.contains('ol-wfst--visible-on')) {\n                        layer.setVisible(true);\n                    } else {\n                        layer.setVisible(false);\n                    }\n                };\n            });\n\n            return selectLayers;\n        };\n\n        /**\n         * @private\n         * @returns\n         */\n        const createHeadControl = (): Element => {\n            /**\n             * @private\n             */\n            const createUploadElements = (): Element => {\n                const container = document.createElement('div');\n\n                // Upload button Tool\n                const uploadButton = document.createElement('label');\n                uploadButton.className =\n                    'ol-wfst--tools-control-btn ol-wfst--tools-control-btn-upload';\n                uploadButton.htmlFor = 'ol-wfst--upload';\n                uploadButton.innerHTML = `<img src=\"${uploadSvg}\"/> `;\n                uploadButton.title = this._i18n.labels.uploadToLayer;\n\n                // Hidden Input form\n                const uploadInput = document.createElement('input');\n                uploadInput.id = 'ol-wfst--upload';\n                uploadInput.type = 'file';\n                uploadInput.accept = this._options.uploadFormats;\n                uploadInput.onchange = (evt) => this._processUploadFile(evt);\n                container.append(uploadInput);\n                container.append(uploadButton);\n\n                return container;\n            };\n\n            /**\n             * @private\n             * @returns\n             */\n            const createDrawContainer = () => {\n                const drawContainer = document.createElement('div');\n                drawContainer.className = 'ol-wfst--tools-control-draw-cnt';\n\n                // Draw Tool\n                const drawButton = document.createElement('button');\n                drawButton.className =\n                    'ol-wfst--tools-control-btn ol-wfst--tools-control-btn-draw';\n                drawButton.type = 'button';\n                drawButton.innerHTML = `<img src=\"${drawSvg}\"/>`;\n                drawButton.title = this._i18n.labels.addElement;\n                drawButton.onclick = () => {\n                    if (this._isDrawModeOn) {\n                        this._resetStateButtons();\n                        this.activateEditMode();\n                    } else {\n                        this.activateDrawMode(this._layerToInsertElements);\n                    }\n                };\n\n                // Select geom type\n                const select = document.createElement('select');\n                select.title = this._i18n.labels.selectDrawType;\n                select.className = 'wfst--tools-control--select-draw';\n                select.onchange = () => {\n                    const selectedValue = select.value as GeometryType;\n                    this._changeStateSelect(\n                        this._layerToInsertElements,\n                        selectedValue\n                    );\n\n                    if (this._isDrawModeOn) {\n                        this.activateDrawMode(this._layerToInsertElements);\n                    }\n                };\n\n                const types = [\n                    GeometryType.Point,\n                    GeometryType.MultiPoint,\n                    GeometryType.LineString,\n                    GeometryType.MultiLineString,\n                    GeometryType.Polygon,\n                    GeometryType.MultiPolygon,\n                    GeometryType.Circle\n                ];\n\n                for (const type of types) {\n                    const option = document.createElement('option');\n                    option.value = type;\n                    option.text = type;\n                    option.selected =\n                        this._geoServerData[this._layerToInsertElements]\n                            .geomType === type || false;\n                    select.appendChild(option);\n                }\n\n                drawContainer.append(drawButton);\n                drawContainer.append(select);\n\n                this._selectDraw = select;\n                return drawContainer;\n            };\n\n            const subControl = document.createElement('div');\n            subControl.className = 'wfst--tools-control--head';\n\n            // Upload section\n            if (this._options.showUpload) {\n                const uploadSection = createUploadElements();\n                subControl.append(uploadSection);\n            }\n\n            const drawContainer = createDrawContainer();\n            subControl.append(drawContainer);\n\n            return subControl;\n        };\n\n        const headControl = createHeadControl();\n        this._controlWidgetToolsDiv.append(headControl);\n\n        const htmlLayers = createLayersControl();\n        this._controlWidgetToolsDiv.append(htmlLayers);\n    }\n\n    /**\n     * Show Loading\n     * @private\n     */\n    _showLoading(): void {\n        if (!this._modalLoading) {\n            this._modalLoading = document.createElement('div');\n            this._modalLoading.className = 'ol-wfst--tools-control--loading';\n            this._modalLoading.innerHTML = this._i18n.labels.loading;\n\n            this._controlWidgetToolsDiv.append(this._modalLoading);\n        }\n\n        this._modalLoading.classList.add(\n            'ol-wfst--tools-control--loading-show'\n        );\n    }\n\n    /**\n     * Hide loading\n     * @private\n     */\n    _hideLoading(): void {\n        this._modalLoading.classList.remove(\n            'ol-wfst--tools-control--loading-show'\n        );\n    }\n\n    /**\n     * Lock a feature in the geoserver before edit\n     *\n     * @param featureId\n     * @param layerName\n     * @param retry\n     * @private\n     */\n    async _lockFeature(\n        featureId: string | number,\n        layerName: string,\n        retry = 0\n    ): Promise<string> {\n        const params = new URLSearchParams({\n            service: 'wfs',\n            version: this._options.geoServerAdvanced.lockFeatureVersion,\n            request: 'LockFeature',\n            expiry: String(5), // minutes\n            LockId: 'GeoServer', // Not working?, bug? use GeoServer as it's the default value\n            typeName: layerName,\n            releaseAction: 'SOME',\n            exceptions: 'application/json',\n            featureid: `${featureId}`\n        });\n\n        const url_fetch = this._options.geoServerUrl + '?' + params.toString();\n\n        try {\n            const response = await fetch(url_fetch, {\n                headers: this._options.headers\n            });\n\n            if (!response.ok) {\n                throw new Error(this._i18n.errors.lockFeature);\n            }\n\n            const data = await response.text();\n\n            try {\n                // First, check if is a JSON (with errors)\n                const dataParsed = JSON.parse(data);\n\n                if ('exceptions' in dataParsed) {\n                    const exceptions = dataParsed.exceptions;\n                    if (exceptions[0].code === 'CannotLockAllFeatures') {\n                        // Maybe the Feature is already blocked, ant thats trigger error, so, we try one locking more time again\n                        if (!retry) {\n                            this._lockFeature(featureId, layerName, 1);\n                        } else {\n                            this._showError(\n                                this._i18n.errors.lockFeature,\n                                exceptions\n                            );\n                        }\n                    } else {\n                        this._showError(exceptions[0].text, exceptions);\n                    }\n                }\n            } catch (err) {\n                /*\n             \n                let dataDoc = (new window.DOMParser()).parseFromString(data, 'text/xml');\n             \n                let lockId = dataDoc.getElementsByTagName('wfs:LockId');\n             \n                let featuresLocked: HTMLCollectionOf<Element> = dataDoc.getElementsByTagName('ogc:FeatureId');\n             \n                for (let featureLocked of featuresLocked as any) {\n             \n                    console.log(featureLocked.getAttribute('fid'));\n             \n                }\n             \n                */\n            }\n\n            return data;\n        } catch (err) {\n            this._showError(err.message, err);\n        }\n    }\n\n    /**\n     * Show modal with errors\n     *\n     * @param msg\n     * @private\n     */\n    _showError(msg: string, originalError: Error = null): void {\n        Modal.alert('Error: ' + msg, {\n            ...this._options.modal\n        }).show();\n\n        if (originalError) console.error(originalError);\n    }\n\n    /**\n     * Make the WFS Transactions\n     *\n     * @param action\n     * @param features\n     * @param layerName\n     * @private\n     */\n    async _transactWFS(\n        action: string,\n        features: Array<Feature<Geometry>> | Feature<Geometry>,\n        layerName: string\n    ): Promise<void> {\n        const transformCircleToPolygon = (\n            feature: Feature<Geometry>,\n            geom: Circle\n        ) => {\n            const geomConverted = fromCircle(geom);\n            feature.setGeometry(geomConverted);\n        };\n\n        const transformGeoemtryCollectionToGeometries = (\n            feature: Feature<Geometry>,\n            geom: GeometryCollection\n        ) => {\n            let geomConverted = geom.getGeometries()[0];\n\n            if (geomConverted instanceof Circle) {\n                geomConverted = fromCircle(geomConverted);\n            }\n\n            feature.setGeometry(geomConverted);\n        };\n\n        features = Array.isArray(features) ? features : [features];\n\n        const cloneFeature = (\n            feature: Feature<Geometry>\n        ): Feature<Geometry> => {\n            this._removeFeatureFromEditList(feature);\n\n            const featureProperties = feature.getProperties();\n\n            delete featureProperties.boundedBy;\n            delete featureProperties._layerName_;\n\n            const clone = new Feature(featureProperties);\n            clone.setId(feature.getId());\n\n            return clone;\n        };\n\n        const refreshWmsLayer = (layer: TileLayer<TileWMS>): void => {\n            const source = layer.getSource();\n\n            // Refrescamos el wms\n            source.refresh();\n\n            // Force refresh the tiles\n            const params = source.getParams();\n            params.t = new Date().getMilliseconds();\n            source.updateParams(params);\n        };\n\n        const refreshWfsLayer = (layer: VectorLayer<any>): void => {\n            const source = layer.getSource();\n            // Refrescamos el wms\n            source.refresh();\n        };\n\n        const clonedFeatures = [];\n\n        for (const feature of features) {\n            let clone = cloneFeature(feature);\n            const cloneGeom = clone.getGeometry();\n\n            // Ugly fix to support GeometryCollection on GML\n            // See https://github.com/openlayers/openlayers/issues/4220\n            if (cloneGeom instanceof GeometryCollection) {\n                transformGeoemtryCollectionToGeometries(\n                    clone,\n                    cloneGeom as GeometryCollection\n                );\n            } else if (cloneGeom instanceof Circle) {\n                // Geoserver has no Support to Circles\n                transformCircleToPolygon(clone, cloneGeom as Circle);\n            }\n\n            if (action === 'insert') {\n                // Filters\n                if (this._options.beforeInsertFeature) {\n                    clone = this._options.beforeInsertFeature(clone);\n                }\n            }\n\n            if (clone) {\n                clonedFeatures.push(clone);\n            }\n        }\n\n        if (!clonedFeatures.length) {\n            return this._showError(this._i18n.errors.noValidGeometry);\n        }\n\n        switch (action) {\n            case 'insert':\n                this._insertFeatures = [\n                    ...this._insertFeatures,\n                    ...clonedFeatures\n                ];\n                break;\n            case 'update':\n                this._updateFeatures = [\n                    ...this._updateFeatures,\n                    ...clonedFeatures\n                ];\n                break;\n            case 'delete':\n                this._deleteFeatures = [\n                    ...this._deleteFeatures,\n                    ...clonedFeatures\n                ];\n                break;\n            default:\n                break;\n        }\n\n        this._countRequests++;\n        const numberRequest = this._countRequests;\n\n        setTimeout(async () => {\n            try {\n                // Prevent fire multiples times\n                if (numberRequest !== this._countRequests) {\n                    return;\n                }\n\n                let srs = this._view.getProjection().getCode();\n\n                // Force latitude/longitude order on transactions\n                // EPSG:4326 is longitude/latitude (assumption) and is not managed correctly by GML3\n                srs = srs === 'EPSG:4326' ? 'urn:x-ogc:def:crs:EPSG:4326' : srs;\n\n                const options = {\n                    featureNS: this._geoServerData[layerName].namespace,\n                    featureType: layerName,\n                    srsName: srs,\n                    featurePrefix: null,\n                    nativeElements: null,\n                    version: this._options.geoServerAdvanced\n                        .wfsTransactionVersion\n                };\n\n                const transaction = this._formatWFS.writeTransaction(\n                    this._insertFeatures,\n                    this._updateFeatures,\n                    this._deleteFeatures,\n                    options\n                );\n\n                let payload = this._xs.serializeToString(transaction);\n                const geomType = this._geoServerData[layerName].geomType;\n                const geomField = this._geoServerData[layerName].geomField;\n\n                // Ugly fix to support GeometryCollection on GML\n                // See https://github.com/openlayers/openlayers/issues/4220\n                if (geomType === GeometryType.GeometryCollection) {\n                    if (action === 'insert') {\n                        payload = payload.replace(\n                            /<geometry>/g,\n                            `<geometry><MultiGeometry xmlns=\"http://www.opengis.net/gml\" srsName=\"${srs}\"><geometryMember>`\n                        );\n                        payload = payload.replace(\n                            /<\\/geometry>/g,\n                            `</geometryMember></MultiGeometry></geometry>`\n                        );\n                    } else if (action === 'update') {\n                        const gmemberIn = `<MultiGeometry xmlns=\"http://www.opengis.net/gml\" srsName=\"${srs}\"><geometryMember>`;\n                        const gmemberOut = `</geometryMember></MultiGeometry>`;\n\n                        payload = payload.replace(\n                            /(.*)(<Name>geometry<\\/Name><Value>)(.*?)(<\\/Value>)(.*)/g,\n                            `$1$2${gmemberIn}$3${gmemberOut}$4$5`\n                        );\n                    }\n                }\n\n                // Fixes geometry name, weird bug with GML:\n                // The property for the geometry column is always named \"geometry\"\n                if (action === 'insert') {\n                    payload = payload.replace(\n                        /<(\\/?)\\bgeometry\\b>/g,\n                        `<$1${geomField}>`\n                    );\n                } else {\n                    payload = payload.replace(\n                        /<Name>geometry<\\/Name>/g,\n                        `<Name>${geomField}</Name>`\n                    );\n                }\n\n                // Add default LockId value\n                if (\n                    this._hasLockFeature &&\n                    this._useLockFeature &&\n                    action !== 'insert'\n                ) {\n                    payload = payload.replace(\n                        `</Transaction>`,\n                        `<LockId>GeoServer</LockId></Transaction>`\n                    );\n                }\n\n                const headers = {\n                    'Content-Type': 'text/xml',\n                    ...this._options.headers\n                };\n\n                const response = await fetch(this._options.geoServerUrl, {\n                    method: 'POST',\n                    body: payload,\n                    headers: headers\n                });\n\n                if (!response.ok) {\n                    throw new Error(\n                        this._i18n.errors.transaction + ' ' + response.status\n                    );\n                }\n\n                const parseResponse = this._formatWFS.readTransactionResponse(\n                    response\n                );\n\n                if (!Object.keys(parseResponse).length) {\n                    const responseStr = await response.text();\n                    const findError = String(responseStr).match(\n                        /<ows:ExceptionText>([\\s\\S]*?)<\\/ows:ExceptionText>/\n                    );\n\n                    if (findError) {\n                        this._showError(findError[1]);\n                    }\n                }\n\n                if (action !== 'delete') {\n                    for (const feature of features as Array<\n                        Feature<Geometry>\n                    >) {\n                        this._editLayer.getSource().removeFeature(feature);\n                    }\n                }\n\n                const { mode } = this._options.layers.find(\n                    (layer) => layer.name === layerName\n                );\n\n                if (mode === 'wfs') {\n                    refreshWfsLayer(this._mapLayers[layerName]);\n                } else if (mode === 'wms') {\n                    refreshWmsLayer(this._mapLayers[layerName]);\n                }\n\n                this._hideLoading();\n            } catch (err) {\n                this._showError(err.message, err);\n            }\n\n            this._insertFeatures = [];\n            this._updateFeatures = [];\n            this._deleteFeatures = [];\n\n            this._countRequests = 0;\n        }, 0);\n    }\n\n    /**\n     *\n     * @param feature\n     * @private\n     */\n    _addFeatureToEditedList(feature: FeatureLike): void {\n        this._editedFeatures.add(String(feature.getId()));\n    }\n\n    /**\n     *\n     * @param feature\n     * @private\n     */\n    _removeFeatureFromEditList(feature: FeatureLike): void {\n        this._editedFeatures.delete(String(feature.getId()));\n    }\n\n    /**\n     *\n     * @param feature\n     * @private\n     */\n    _isFeatureEdited(feature: FeatureLike): boolean {\n        return this._editedFeatures.has(String(feature.getId()));\n    }\n\n    /**\n     *\n     * @param feature\n     * @private\n     */\n    _deselectEditFeature(feature: FeatureLike): void {\n        this._removeOverlayHelper(feature);\n    }\n\n    /**\n     *\n     * @param feature\n     * @param layerName\n     * @private\n     */\n    _restoreFeatureToLayer(\n        feature: Feature<Geometry>,\n        layerName?: string\n    ): void {\n        layerName = layerName || feature.get('_layerName_');\n        const layer = this._mapLayers[layerName];\n        (layer.getSource() as VectorSource<Geometry>).addFeature(feature);\n    }\n\n    /**\n     * @private\n     * @param feature\n     */\n    _removeFeatureFromTmpLayer(feature: Feature<Geometry>): void {\n        // Remove element from the Layer\n        this._editLayer.getSource().removeFeature(feature);\n    }\n\n    /**\n     * Trigger on deselecting a feature from in the Edit layer\n     *\n     * @private\n     */\n    _onDeselectFeatureEvent(): void {\n        const checkIfFeatureIsChanged = (feature: Feature<Geometry>): void => {\n            const layerName = feature.get('_layerName_');\n\n            const { mode } = this._options.layers.find(\n                (layer) => layer.name === layerName\n            );\n\n            if (mode === 'wfs') {\n                this.interactionWfsSelect.getFeatures().remove(feature);\n            }\n\n            if (this._isFeatureEdited(feature)) {\n                this._transactWFS('update', feature, layerName);\n            } else {\n                // Si es wfs y el elemento no tuvo cambios, lo devolvemos a la layer original\n                if (mode === 'wfs') {\n                    this._restoreFeatureToLayer(feature, layerName);\n                }\n                this._removeFeatureFromTmpLayer(feature);\n            }\n        };\n\n        // This is fired when a feature is deselected and fires the transaction process\n        this._keySelect = this._collectionModify.on('remove', (evt) => {\n            const feature = evt.element;\n\n            this._deselectEditFeature(feature);\n\n            checkIfFeatureIsChanged(feature);\n\n            this._editModeOff();\n        });\n    }\n\n    /**\n     * Trigger on removing a feature from the Edit layer\n     *\n     * @private\n     */\n    _onRemoveFeatureEvent(): void {\n        // If a feature is removed from the edit layer\n        this._keyRemove = this._editLayer\n            .getSource()\n            .on('removefeature', (evt) => {\n                const feature = evt.feature;\n\n                if (!feature.get('_delete_')) {\n                    return;\n                }\n\n                if (this._keySelect) {\n                    unByKey(this._keySelect);\n                }\n\n                const layerName = feature.get('_layerName_');\n\n                this._transactWFS('delete', feature, layerName);\n\n                this._deselectEditFeature(feature);\n                this._editModeOff();\n\n                if (this._keySelect) {\n                    setTimeout(() => {\n                        this._onDeselectFeatureEvent();\n                    }, 150);\n                }\n            });\n    }\n\n    /**\n     * Master style that handles two modes on the Edit Layer:\n     * - one is the basic, showing only the vertices\n     * - and the other when modify is active, showing bigger vertices\n     *\n     * @param feature\n     * @private\n     */\n    _styleFunction(feature: Feature<Geometry>): Array<Style> {\n        const getVertexs = (feature: FeatureLike) => {\n            let geometry = feature.getGeometry();\n\n            if (geometry instanceof GeometryCollection) {\n                geometry = geometry.getGeometries()[0];\n            }\n\n            const coordinates = (geometry as LineString).getCoordinates();\n            let flatCoordinates: Coordinate[] | number[] = null;\n\n            if (\n                geometry instanceof Polygon ||\n                geometry instanceof MultiLineString\n            ) {\n                flatCoordinates = coordinates.flat(1);\n            } else if (geometry instanceof MultiPolygon) {\n                flatCoordinates = coordinates.flat(2);\n            } else {\n                flatCoordinates = coordinates;\n            }\n\n            if (!flatCoordinates || !flatCoordinates.length) {\n                return;\n            }\n\n            return new MultiPoint(flatCoordinates as Coordinate[]);\n        };\n\n        let geometry = feature.getGeometry();\n        let type = geometry.getType();\n\n        if (geometry instanceof GeometryCollection) {\n            geometry = geometry.getGeometries()[0];\n            type = geometry.getType();\n        }\n\n        switch (type) {\n            case GeometryType.Point:\n            case GeometryType.MultiPoint:\n                if (this._isEditModeOn) {\n                    return [\n                        new Style({\n                            image: new CircleStyle({\n                                radius: 6,\n                                fill: new Fill({\n                                    color: '#000000'\n                                })\n                            })\n                        }),\n                        new Style({\n                            image: new CircleStyle({\n                                radius: 4,\n                                fill: new Fill({\n                                    color: '#ff0000'\n                                })\n                            })\n                        })\n                    ];\n                } else {\n                    return [\n                        new Style({\n                            image: new CircleStyle({\n                                radius: 5,\n                                fill: new Fill({\n                                    color: '#ff0000'\n                                })\n                            })\n                        }),\n                        new Style({\n                            image: new CircleStyle({\n                                radius: 2,\n                                fill: new Fill({\n                                    color: '#000000'\n                                })\n                            })\n                        })\n                    ];\n                }\n            default:\n                // If editing mode is active, show bigger vertex\n                if (this._isEditModeOn || this._isDrawModeOn) {\n                    return [\n                        new Style({\n                            stroke: new Stroke({\n                                color: 'rgba( 255, 0, 0, 1)',\n                                width: 4\n                            }),\n                            fill: new Fill({\n                                color: 'rgba(255, 0, 0, 0.7)'\n                            })\n                        }),\n                        new Style({\n                            image: new CircleStyle({\n                                radius: 4,\n                                fill: new Fill({\n                                    color: '#ff0000'\n                                }),\n                                stroke: new Stroke({\n                                    width: 2,\n                                    color: 'rgba(5, 5, 5, 0.9)'\n                                })\n                            }),\n                            geometry: (feature) => getVertexs(feature)\n                        }),\n                        new Style({\n                            stroke: new Stroke({\n                                color: 'rgba(255, 255, 255, 0.7)',\n                                width: 2\n                            })\n                        })\n                    ];\n                } else {\n                    return [\n                        new Style({\n                            image: new CircleStyle({\n                                radius: 2,\n                                fill: new Fill({\n                                    color: '#000000'\n                                })\n                            }),\n                            geometry: (feature) => getVertexs(feature)\n                        }),\n                        new Style({\n                            stroke: new Stroke({\n                                color: '#ff0000',\n                                width: 4\n                            }),\n                            fill: new Fill({\n                                color: 'rgba(255, 0, 0, 0.7)'\n                            })\n                        })\n                    ];\n                }\n        }\n    }\n\n    /**\n     *\n     * @param feature\n     * @private\n     */\n    _editModeOn(feature: Feature<Geometry>): void {\n        this._editFeatureOriginal = feature.clone();\n\n        this._isEditModeOn = true;\n\n        // To refresh the style\n        this._editLayer.getSource().changed();\n\n        this._removeOverlayHelper(feature);\n\n        const controlDiv = document.createElement('div');\n        controlDiv.className = 'ol-wfst--changes-control';\n\n        const elements = document.createElement('div');\n        elements.className = 'ol-wfst--changes-control-el';\n\n        const elementId = document.createElement('div');\n        elementId.className = 'ol-wfst--changes-control-id';\n        elementId.innerHTML = `<b>${\n            this._i18n.labels.editMode\n        }</b> - <i>${String(feature.getId())}</i>`;\n\n        const acceptButton = document.createElement('button');\n        acceptButton.type = 'button';\n        acceptButton.textContent = this._i18n.labels.apply;\n        acceptButton.className = 'btn btn-sm btn-primary';\n        acceptButton.onclick = () => {\n            this._showLoading();\n            this._collectionModify.remove(feature);\n        };\n\n        const cancelButton = document.createElement('button');\n        cancelButton.type = 'button';\n        cancelButton.textContent = this._i18n.labels.cancel;\n        cancelButton.className = 'btn btn-sm btn-secondary';\n        cancelButton.onclick = () => {\n            feature.setGeometry(this._editFeatureOriginal.getGeometry());\n            this._removeFeatureFromEditList(feature);\n            this._collectionModify.remove(feature);\n        };\n\n        const deleteButton = document.createElement('button');\n        deleteButton.type = 'button';\n        deleteButton.textContent = this._i18n.labels.delete;\n        deleteButton.className = 'btn btn-sm btn-danger-outline';\n        deleteButton.onclick = () => {\n            this._deleteFeature(feature, true);\n        };\n\n        elements.append(elementId);\n        elements.append(cancelButton);\n        elements.append(acceptButton);\n        elements.append(deleteButton);\n\n        controlDiv.append(elements);\n\n        this._controlApplyDiscardChanges = new Control({\n            element: controlDiv\n        });\n\n        this._map.addControl(this._controlApplyDiscardChanges);\n    }\n\n    /**\n     * @private\n     */\n    _editModeOff(): void {\n        this._isEditModeOn = false;\n        this._map.removeControl(this._controlApplyDiscardChanges);\n    }\n\n    /**\n     * Remove a feature from the edit Layer and from the Geoserver\n     *\n     * @param feature\n     * @private\n     */\n    _deleteFeature(feature: Feature<Geometry>, confirm: boolean): void {\n        const deleteEl = () => {\n            const features = Array.isArray(feature) ? feature : [feature];\n            features.forEach((feature) => {\n                feature.set('_delete_', true, true);\n                this._editLayer.getSource().removeFeature(feature);\n            });\n            this._collectionModify.clear();\n\n            const layerName = feature.get('_layerName_');\n            const { mode } = this._options.layers.find(\n                (layer) => layer.name === layerName\n            );\n\n            if (mode === 'wfs') {\n                this.interactionWfsSelect.getFeatures().remove(feature);\n            }\n        };\n\n        if (confirm) {\n            const confirmModal = Modal.confirm(\n                this._i18n.labels.confirmDelete,\n                {\n                    ...this._options.modal\n                }\n            );\n\n            confirmModal.show().once('dismiss', function (modal, ev, button) {\n                if (button && button.value) {\n                    deleteEl();\n                }\n            });\n        } else {\n            deleteEl();\n        }\n    }\n\n    /**\n     * Add a feature to the Edit Layer to allow editing, and creates an Overlay Helper to show options\n     *\n     * @param feature\n     * @param coordinate\n     * @param layerName\n     * @private\n     */\n    _addFeatureToEdit(\n        feature: Feature<Geometry>,\n        coordinate = null,\n        layerName = null\n    ): void {\n        const prepareOverlay = () => {\n            const svgFields = `<img src=\"${editFieldsSvg}\"/>`;\n            const editFieldsEl = document.createElement('div');\n            editFieldsEl.className = 'ol-wfst--edit-button-cnt';\n            editFieldsEl.innerHTML = `<button class=\"ol-wfst--edit-button\" type=\"button\" title=\"${this._i18n.labels.editFields}\">${svgFields}</button>`;\n            editFieldsEl.onclick = () => {\n                this._initEditFieldsModal(feature);\n            };\n\n            const buttons = document.createElement('div');\n            buttons.append(editFieldsEl);\n\n            const svgGeom = `<img src=\"${editGeomSvg}\"/>`;\n\n            const editGeomEl = document.createElement('div');\n            editGeomEl.className = 'ol-wfst--edit-button-cnt';\n            editGeomEl.innerHTML = `<button class=\"ol-wfst--edit-button\" type=\"button\" title=\"${this._i18n.labels.editGeom}\">${svgGeom}</button>`;\n            editGeomEl.onclick = () => {\n                this._editModeOn(feature);\n            };\n            buttons.append(editGeomEl);\n\n            const position =\n                coordinate || getCenter(feature.getGeometry().getExtent());\n\n            const buttonsOverlay = new Overlay({\n                id: feature.getId(),\n                position: position,\n                positioning: 'center-center',\n                element: buttons,\n                offset: [0, -40],\n                stopEvent: true\n            });\n\n            this._map.addOverlay(buttonsOverlay);\n        };\n\n        if (layerName) {\n            // Guardamos el nombre de la capa de donde sale la feature\n            feature.set('_layerName_', layerName);\n        }\n\n        const props = feature ? feature.getProperties() : '';\n\n        if (props) {\n            if (feature.getGeometry()) {\n                this._editLayer.getSource().addFeature(feature);\n                this._collectionModify.push(feature);\n                prepareOverlay();\n\n                if (this._useLockFeature && this._hasLockFeature) {\n                    this._lockFeature(\n                        feature.getId(),\n                        feature.get('_layerName_')\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Removes in the DOM the class of the tools\n     * @private\n     */\n    _resetStateButtons(): void {\n        const activeBtn = document.querySelector(\n            '.ol-wfst--tools-control-btn.wfst--active'\n        );\n        if (activeBtn) {\n            activeBtn.classList.remove('wfst--active');\n        }\n    }\n\n    /**\n     * Confirm modal before transact to the GeoServer the features in the file\n     *\n     * @param content\n     * @param featureToInsert\n     * @private\n     */\n    _initUploadFileModal(\n        content: string,\n        featuresToInsert: Array<Feature<Geometry>>\n    ): void {\n        const footer = `\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" data-dismiss=\"modal\">\n                ${this._i18n.labels.cancel}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-primary\" data-action=\"save\" data-dismiss=\"modal\">\n                ${this._i18n.labels.upload}\n            </button>\n        `;\n\n        const modal = new Modal({\n            ...this._options.modal,\n            header: true,\n            headerClose: false,\n            title:\n                this._i18n.labels.uploadFeatures +\n                ' ' +\n                this._layerToInsertElements,\n            content: content,\n            backdrop: 'static', // Prevent close on click outside the modal\n            footer: footer\n        }).show();\n\n        modal.on('dismiss', (modal, event) => {\n            // On saving changes\n            if (event.target.dataset.action === 'save') {\n                this._transactWFS(\n                    'insert',\n                    featuresToInsert,\n                    this._layerToInsertElements\n                );\n            } else {\n                // On cancel button\n                this._editLayer.getSource().clear();\n            }\n        });\n    }\n\n    /**\n     * Parse and check geometry of uploaded files\n     *\n     * @param evt\n     * @private\n     */\n    async _processUploadFile(evt: Event): Promise<void> {\n        /**\n         * Read data file\n         * @param file\n         * @private\n         */\n        const fileReader = (file: File): Promise<string> => {\n            return new Promise((resolve, reject) => {\n                const reader = new FileReader();\n\n                reader.addEventListener('load', async (e) => {\n                    const fileData = e.target.result;\n                    resolve(fileData as string);\n                });\n\n                reader.addEventListener('error', (err) => {\n                    console.error('Error' + err);\n                    reject();\n                });\n                reader.readAsText(file);\n            });\n        };\n\n        /**\n         * Attemp to change the geometry feature to the layer\n         * @param feature\n         * @private\n         */\n        const fixGeometry = (feature: Feature<Geometry>): Feature<Geometry> => {\n            // Geometry of the layer\n            const geomTypeLayer = this._geoServerData[\n                this._layerToInsertElements\n            ].geomType;\n            const geomTypeFeature = feature.getGeometry().getType();\n            let geom: Geometry;\n\n            switch (geomTypeFeature) {\n                case 'Point': {\n                    if (geomTypeLayer === 'MultiPoint') {\n                        const coords = (feature.getGeometry() as Point).getCoordinates();\n                        geom = new MultiPoint([coords]);\n                    }\n                    break;\n                }\n\n                case 'LineString':\n                    if (geomTypeLayer === 'MultiLineString') {\n                        const coords = (feature.getGeometry() as LineString).getCoordinates();\n                        geom = new MultiLineString([coords]);\n                    }\n                    break;\n\n                case 'Polygon':\n                    if (geomTypeLayer === 'MultiPolygon') {\n                        const coords = (feature.getGeometry() as Polygon).getCoordinates();\n                        geom = new MultiPolygon([coords]);\n                    }\n                    break;\n                default:\n                    geom = null;\n            }\n\n            if (!geom) {\n                return null;\n            }\n\n            feature.setGeometry(geom);\n            return feature;\n        };\n\n        /**\n         * Check if the feature has the same geometry as the target layer\n         * @param feature\n         * @private\n         */\n        const checkGeometry = (feature: Feature<Geometry>): boolean => {\n            // Geometry of the layer\n            const geomTypeLayer = this._geoServerData[\n                this._layerToInsertElements\n            ].geomType;\n            const geomTypeFeature = feature.getGeometry().getType();\n\n            // This geom accepts every type of geometry\n            if (geomTypeLayer === GeometryType.GeometryCollection) {\n                return true;\n            }\n\n            return geomTypeFeature === geomTypeLayer;\n        };\n\n        const file = (evt.target as HTMLInputElement).files[0];\n\n        let features: Array<Feature<Geometry>>;\n\n        if (!file) {\n            return;\n        }\n\n        const extension = file.name.split('.').pop().toLowerCase();\n\n        try {\n            // If the user uses a custom fucntion...\n            if (this._options.processUpload) {\n                features = this._options.processUpload(file);\n            }\n\n            // If the user functions return features, we dont process anything more\n            if (!features) {\n                const string = await fileReader(file);\n\n                if (extension === 'geojson' || extension === 'json') {\n                    features = this._formatGeoJSON.readFeatures(string, {\n                        featureProjection: this._view.getProjection().getCode()\n                    });\n                } else if (extension === 'kml') {\n                    features = this._formatKml.readFeatures(string, {\n                        featureProjection: this._view.getProjection().getCode()\n                    });\n                } else {\n                    this._showError(this._i18n.errors.badFormat);\n                }\n            }\n        } catch (err) {\n            this._showError(this._i18n.errors.badFile, err);\n        }\n\n        let invalidFeaturesCount = 0;\n        let validFeaturesCount = 0;\n\n        const featuresToInsert: Array<Feature<Geometry>> = [];\n\n        for (let feature of features) {\n            // If the geometry doesn't correspond to the layer, try to fixit.\n            // If we can't, don't use it\n            if (!checkGeometry(feature)) {\n                feature = fixGeometry(feature);\n            }\n\n            if (feature) {\n                featuresToInsert.push(feature);\n                validFeaturesCount++;\n            } else {\n                invalidFeaturesCount++;\n                continue;\n            }\n        }\n\n        if (!validFeaturesCount) {\n            this._showError(this._i18n.errors.noValidGeometry);\n        } else {\n            this._resetStateButtons();\n            this.activateEditMode();\n\n            const content = `\n                ${this._i18n.labels.validFeatures}: ${validFeaturesCount}<br>\n                ${\n                    invalidFeaturesCount\n                        ? `${this._i18n.labels.invalidFeatures}: ${invalidFeaturesCount}`\n                        : ''\n                }\n            `;\n\n            this._editLayer.getSource().addFeatures(featuresToInsert);\n\n            this._initUploadFileModal(content, featuresToInsert);\n\n            this._view.fit(this._editLayer.getSource().getExtent(), {\n                size: this._map.getSize(),\n                maxZoom: 21,\n                padding: [100, 100, 100, 100]\n            });\n        }\n\n        // Reset the input to allow another onChange trigger\n        (evt.target as HTMLInputElement).value = null;\n    }\n\n    /**\n     * Update geom Types availibles to select for this layer\n     *\n     * @param layerName\n     * @param geomDrawTypeSelected\n     * @private\n     */\n    _changeStateSelect(\n        layerName: string,\n        geomDrawTypeSelected: GeometryType = null\n    ): GeometryType {\n        /**\n         * Set the geometry type in the select according to the geometry of\n         * the layer in the geoserver and disable what does not correspond.\n         *\n         * @param value\n         * @param options\n         * @private\n         */\n        const setSelectState = (\n            value: GeometryType,\n            options: Array<string> | 'all'\n        ): void => {\n            Array.from(this._selectDraw.options).forEach((option) => {\n                option.selected = option.value === value ? true : false;\n                option.disabled =\n                    options === 'all'\n                        ? false\n                        : options.includes(option.value)\n                        ? false\n                        : true;\n                option.title = option.disabled\n                    ? this._i18n.labels.geomTypeNotSupported\n                    : '';\n            });\n        };\n\n        let drawType: GeometryType;\n\n        if (this._selectDraw) {\n            const geomLayer = this._geoServerData[layerName].geomType;\n\n            if (geomDrawTypeSelected) {\n                drawType = this._selectDraw.value as GeometryType;\n            } else {\n                if (geomLayer === GeometryType.GeometryCollection) {\n                    drawType = GeometryType.LineString; // Default drawing type for GeometryCollection\n                    setSelectState(drawType, 'all');\n                } else if (geomLayer === GeometryType.LinearRing) {\n                    drawType = GeometryType.LineString; // Default drawing type for GeometryCollection\n                    setSelectState(drawType, [\n                        GeometryType.Circle,\n                        GeometryType.LinearRing,\n                        GeometryType.Polygon\n                    ]);\n                    this._selectDraw.value = drawType;\n                } else {\n                    drawType = geomLayer;\n                    setSelectState(drawType, [geomLayer]);\n                }\n            }\n        }\n\n        return drawType;\n    }\n\n    /**\n     * Activate/deactivate the draw mode\n     *\n     * @param layerName\n     * @public\n     */\n    activateDrawMode(layerName: string | boolean): void {\n        /**\n         *\n         * @param layerName\n         * @private\n         */\n        const addDrawInteraction = (layerName: string): void => {\n            this.activateEditMode(false);\n\n            // If already exists, remove\n            if (this.interactionDraw) {\n                this._map.removeInteraction(this.interactionDraw);\n            }\n\n            const geomDrawType = this._selectDraw.value;\n\n            this.interactionDraw = new Draw({\n                source: this._editLayer.getSource(),\n                type: geomDrawType as GeometryType,\n                style: (feature: Feature<Geometry>) =>\n                    this._styleFunction(feature)\n            });\n\n            this._map.addInteraction(this.interactionDraw);\n\n            this.interactionDraw.on('drawstart', (evt) => {\n                super.dispatchEvent(evt);\n            });\n\n            this.interactionDraw.on('drawend', (evt) => {\n                const feature: Feature<Geometry> = evt.feature;\n                this._transactWFS('insert', feature, layerName);\n\n                super.dispatchEvent(evt);\n            });\n        };\n\n        if (!this.interactionDraw && !layerName) {\n            return;\n        }\n\n        if (layerName) {\n            // If layer is set to invisible, show warning\n            if (!this._mapLayers[layerName as string].getVisible()) {\n                return;\n            }\n\n            const btn = document.querySelector(\n                '.ol-wfst--tools-control-btn-draw'\n            );\n            if (btn) {\n                btn.classList.add('wfst--active');\n            }\n\n            this._viewport.classList.add('draw-mode');\n\n            addDrawInteraction(String(layerName));\n        } else {\n            this._map.removeInteraction(this.interactionDraw);\n            this._viewport.classList.remove('draw-mode');\n        }\n\n        this._isDrawModeOn = layerName ? true : false;\n    }\n\n    /**\n     * Activate/desactivate the edit mode\n     *\n     * @param bool\n     * @public\n     */\n    activateEditMode(bool = true): void {\n        if (bool) {\n            const btn = document.querySelector(\n                '.ol-wfst--tools-control-btn-edit'\n            );\n            if (btn) {\n                btn.classList.add('wfst--active');\n            }\n\n            this.activateDrawMode(false);\n        } else {\n            // Deselct features\n            this._collectionModify.clear();\n        }\n\n        if (this.interactionSelectModify) {\n            this.interactionSelectModify.setActive(bool);\n        }\n\n        this.interactionModify.setActive(bool);\n\n        if (this.interactionWfsSelect)\n            this.interactionWfsSelect.setActive(bool);\n    }\n\n    /**\n     * Add features directly to the geoserver, in a custom layer\n     * without checking geometry or showing modal to confirm.\n     *\n     * @param layerName\n     * @param features\n     * @public\n     */\n    insertFeaturesTo(\n        layerName: string,\n        features: Array<Feature<Geometry>>\n    ): void {\n        this._transactWFS('insert', features, layerName);\n    }\n\n    /**\n     * Shows a fields form in a modal window to allow changes in the properties of the feature.\n     *\n     * @param feature\n     * @private\n     */\n    _initEditFieldsModal(feature: Feature<Geometry>): void {\n        this._editFeature = feature;\n\n        const properties = feature.getProperties();\n        const layer = feature.get('_layerName_');\n\n        // Data schema from the geoserver\n        const dataSchema = this._geoServerData[layer].properties;\n\n        let content = '<form autocomplete=\"false\">';\n        Object.keys(properties).forEach((key) => {\n            // If the feature field exists in the geoserver and is not added by openlayers\n            const field = dataSchema.find((data) => data.name === key);\n\n            if (field) {\n                const typeXsd = field.type;\n                let type;\n\n                switch (typeXsd) {\n                    case 'xsd:string':\n                        type = 'text';\n                        break;\n                    case 'xsd:number':\n                    case 'xsd:int':\n                        type = 'number';\n                        break;\n                    case 'xsd:date-time':\n                        type = 'datetime';\n                        break;\n                    default:\n                        type = 'text';\n                }\n\n                if (type) {\n                    content += `\n                <div class=\"ol-wfst--input-field-container\">\n                    <label class=\"ol-wfst--input-field-label\" for=\"${key}\">${key}</label>\n                    <input placeholder=\"NULL\" class=\"ol-wfst--input-field-input\" type=\"${type}\" name=\"${key}\" value=\"${\n                        properties[key] || ''\n                    }\">\n                </div>`;\n                }\n            }\n        });\n\n        content += '</form>';\n\n        const footer = `\n            <button type=\"button\" class=\"btn btn-sm btn-link btn-third\" data-action=\"delete\" data-dismiss=\"modal\">\n                ${this._i18n.labels.delete}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" data-dismiss=\"modal\">\n                ${this._i18n.labels.cancel}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-primary\" data-action=\"save\" data-dismiss=\"modal\">\n                ${this._i18n.labels.save}\n            </button>\n        `;\n\n        const modal = new Modal({\n            ...this._options.modal,\n            header: true,\n            headerClose: true,\n            title: `${\n                this._i18n.labels.editElement\n            } ${this._editFeature.getId()} `,\n            content: content,\n            footer: footer\n        }).show();\n\n        modal.on('dismiss', (modal, event) => {\n            // On saving changes\n            if (event.target.dataset.action === 'save') {\n                const inputs = modal.el.querySelectorAll('input');\n\n                inputs.forEach((el: HTMLInputElement) => {\n                    const value = el.value;\n                    const field = el.name;\n                    this._editFeature.set(field, value, /*isSilent = */ true);\n                });\n\n                this._editFeature.changed();\n                this._addFeatureToEditedList(this._editFeature);\n\n                // Force deselect to trigger handler\n                this._collectionModify.remove(this._editFeature);\n            } else if (event.target.dataset.action === 'delete') {\n                this._deleteFeature(this._editFeature, true);\n            }\n        });\n    }\n\n    /**\n     * Remove the overlay helper atttached to a specify feature\n     * @param feature\n     * @private\n     */\n    _removeOverlayHelper(feature: FeatureLike): void {\n        const featureId = feature.getId();\n\n        if (!featureId) {\n            return;\n        }\n\n        const overlay = this._map.getOverlayById(featureId);\n\n        if (!overlay) {\n            return;\n        }\n\n        this._map.removeOverlay(overlay);\n    }\n}\n\n/**\n *\n * @param target\n * @param sources\n * @returns\n * @private\n */\nconst deepObjectAssign = (target, ...sources) => {\n    sources.forEach((source) => {\n        Object.keys(source).forEach((key) => {\n            const s_val = source[key];\n            const t_val = target[key];\n            target[key] =\n                t_val &&\n                s_val &&\n                typeof t_val === 'object' &&\n                typeof s_val === 'object' &&\n                !Array.isArray(t_val) // Don't merge arrays\n                    ? deepObjectAssign(t_val, s_val)\n                    : s_val;\n        });\n    });\n    return target;\n};\n\n/**\n * **_[interface]_** - Wfst Options specified when creating a Wfst instance\n *\n * Default values:\n * ```javascript\n * {\n *  geoServerUrl: null,\n *  geoServerAdvanced: {\n *      getCapabilitiesVersion: '1.3.0',\n *      getFeatureVersion: '1.0.0',\n *      describeFeatureTypeVersion: '1.1.0',\n *      lockFeatureVersion: '1.1.0',\n *      wfsTransactionVersion: '1.1.0',\n *      projection: 'EPSG:3857'\n *  },\n *  headers: {},\n *  layers: null,\n *  evtType: 'singleclick',\n *  active: true,\n *  showControl: true,\n *  useLockFeature: true,\n *  minZoom: 9,\n *  language: 'en',\n *  i18n: {...}, // according to language selection\n *  uploadFormats: '.geojson,.json,.kml',\n *  processUpload: null,\n *  beforeInsertFeature: null,\n * }\n * ```\n */\ninterface Options {\n    /**\n     * Url for OWS services. This endpoint will recive the WFS, WFST and WMS requests\n     */\n    geoServerUrl: string;\n\n    /**\n     * Advanced options for geoserver requests\n     */\n    geoServerAdvanced?: {\n        getCapabilitiesVersion?: string;\n        getFeatureVersion?: string;\n        lockFeatureVersion?: string;\n        describeFeatureTypeVersion?: string;\n        wfsTransactionVersion?: string;\n        projection?: ProjectionLike;\n    };\n    /**\n     * Url headers for GeoServer requests. You can use it to add Authorization credentials\n     */\n    headers?: HeadersInit;\n    /**\n     * Layers to be loaded from the geoserver\n     */\n    layers?: Array<LayerParams>;\n    /**\n     * Init active\n     */\n    active?: boolean;\n    /**\n     * The click event to allow selection of Features to be edited\n     */\n    evtType?: 'singleclick' | 'dblclick';\n    /**\n     * Use LockFeatue request on GeoServer when selecting features.\n     * This is not always supportedd by the GeoServer.\n     * See https://docs.geoserver.org/stable/en/user/services/wfs/reference.html\n     */\n    useLockFeature?: boolean;\n    /**\n     * Show/hide the control map\n     */\n    showControl?: boolean;\n    /**\n     * Zoom level to hide features to prevent too much features being loaded\n     */\n    minZoom?: number;\n    /**\n     * Modal configuration\n     */\n    modal?: {\n        animateClass?: string;\n        animateInClass?: string;\n        transition?: number;\n        backdropTransition?: number;\n        templates?: {\n            dialog?: string | HTMLElement;\n            headerClose?: string | HTMLElement;\n        };\n    };\n    /**\n     * Language to be used\n     */\n    language?: 'es' | 'en';\n    /**\n     * Custom translations\n     */\n    i18n?: I18n;\n    /**\n     * Show/hide the upload button\n     */\n    showUpload?: boolean;\n    /**\n     * Accepted extension formats on upload\n     * Example: \".json,.geojson\"\n     */\n    uploadFormats?: string;\n    /**\n     * Triggered to allow implement custom functions or to parse other formats than default\n     * by filtering the extension. If this doesn't return features, the default function\n     * will be used to extract them.\n     */\n    processUpload?(file: File): Array<Feature<Geometry>>;\n    /**\n     * Triggered before inserting new features to the Geoserver.\n     * Use this to insert custom properties, modify the feature, etc.\n     */\n    beforeInsertFeature?(feature: Feature<Geometry>): Feature<Geometry>;\n}\n\n/**\n * **_[interface]_** - Parameters to create the layers and connect to the GeoServer\n *\n * You can use all the parameters supported by OpenLayers\n *\n *  Default values:\n * ```javascript\n * {\n *  name: null,\n *  label: null, // `name` if not provided\n *  mode: 'wfs',\n *  wfsStrategy: 'bbox',\n *  cqlFilter: null,\n *  tilesBuffer: 0,\n * }\n * ```\n *\n */\ninterface LayerParams extends Omit<VectorLayerOptions<any>, 'source'> {\n    /**\n     * Layer name in the GeoServer\n     */\n    name: string;\n    /**\n     * Label to be displayed in the widget control\n     */\n    label?: string;\n    /**\n     * Mode to use in the layer\n     */\n    mode?: 'wfs' | 'wms';\n    /**\n     * Strategy function for loading features. Only works if mode is \"wfs\"\n     */\n    wfsStrategy?: string;\n    /**\n     * The cql_filter GeoServer parameter is similar to the standard filter parameter,\n     * but the filter is expressed using ECQL (Extended Common Query Language).\n     * ECQL provides a more compact and readable syntax compared to OGC XML filters.\n     * For full details see the [ECQL Reference](https://docs.geoserver.org/stable/en/user/filter/ecql_reference.html#filter-ecql-reference) and CQL and ECQL tutorial.\n     */\n    cqlFilter?: string;\n    /**\n     * The buffer parameter specifies the number of additional\n     * border pixels that are used on requesting rasted tiles\n     * Only works if mode is 'wms'\n     */\n    tilesBuffer?: number;\n}\n\n/**\n * **_[interface]_** - Data obtained from geoserver\n * @protected\n */\ninterface LayerData {\n    namespace?: string;\n    properties?: Record<string, unknown>;\n    geomType?: string;\n    geomField?: string;\n}\n\n/**\n * **_[interface]_** - Geoserver response on DescribeFeature request\n * @protected\n */\ninterface DescribeFeatureType {\n    elementFormDefault: string;\n    targetNamespace: string;\n    targetPrefix: string;\n    featureTypes: Array<{\n        typeName: string;\n        properties: Array<{\n            name: string;\n            nillable: boolean;\n            maxOccurs: number;\n            minOccurs: number;\n            type: string;\n            localType: string;\n        }>;\n    }>;\n}\n\n/**\n * **_[interface]_** - Custom Language specified when creating a WFST instance\n */\ninterface I18n {\n    /** Labels section */\n    labels?: {\n        select?: string;\n        addElement?: string;\n        editElement?: string;\n        save?: string;\n        delete?: string;\n        cancel?: string;\n        apply?: string;\n        upload?: string;\n        editMode?: string;\n        confirmDelete?: string;\n        geomTypeNotSupported?: string;\n        editFields?: string;\n        editGeom?: string;\n        selectDrawType?: string;\n        uploadToLayer?: string;\n        uploadFeatures?: string;\n        validFeatures?: string;\n        invalidFeatures?: string;\n        loading?: string;\n        toggleVisibility?: string;\n        close?: string;\n    };\n    /** Errors section */\n    errors?: {\n        capabilities?: string;\n        wfst?: string;\n        layer?: string;\n        noValidGeometry?: string;\n        geoserver?: string;\n        badFormat?: string;\n        badFile?: string;\n        lockFeature?: string;\n        transaction?: string;\n        getFeatures?: string;\n    };\n}\n\nexport { Options, I18n, LayerParams };\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","uidCounter_","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","AssertionError","_super","code","_this","message","split","name","Error","BaseEvent","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","Disposable","disposed","dispose","disposeInternal","VOID","assign","var_sources","output","i","ii","arguments","length","source","key","clear","object","property","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","indexOf","push","dispatchEvent","event","evt","Event","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","listen","opt_this","opt_once","bind","originalListener_1","eventsKey","listenOnce","unlistenByKey","Observable","on","once","un","revision_","changed","EventType","getRevision","onInternal","isArray","len","onceInternal","ol_key","unInternal","unByKey","EventTarget","ObjectEvent","oldValue","BaseObject","opt_values","obj","ol_uid","values_","setProperties","get","getKeys","getProperties","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","opt_silent","values","applyProperties","unset","isEmpty","Property","CollectionEvent","opt_element","opt_index","element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","arr","forEach","f","array","getArray","item","insertAt","elem","CollectionEventType","removeAt","n","remove","prev","setAt","j","opt_except","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","styles_1","assertion","errorCode","assert","createStyleFunction","setId","id","outerWidth","width","offsetWidth","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","height","offsetHeight","marginTop","marginBottom","Overlay","insertFirst","stopEvent","document","createElement","className","position","pointerEvents","autoPan","animation","autoPanAnimation","margin","autoPanMargin","rendered","transform_","visible","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","offset","setPositioning","positioning","OverlayPositioning","setPosition","getElement","getMap","getOffset","getPosition","getPositioning","node","lastChild","removeChild","removeChildren","appendChild","parentNode","map","MapEventType","render","updatePixelPosition","container","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","performAutoPan","setMap","panIntoView","opt_panIntoViewOptions","getTargetElement","extent1","extent2","mapRect","getRect","getSize","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","Math","abs","center","getView","getCenterInternal","centerPx","getPixelFromCoordinateInternal","newCenterPx","panOptions","animateInternal","getCoordinateFromPixelInternal","duration","easing","size","box","getBoundingClientRect","offsetX","left","window","pageXOffset","offsetY","top","pageYOffset","setVisible","display","isRendered","pixel","getPixelFromCoordinate","mapSize","updateRenderedPosition","x","round","y","posX","posY","transform","msTransform","getOptions","_factory","_defaults","freeze","el","animate","animateClass","animateInClass","appendTo","backdrop","keyboard","title","header","content","footer","buttons","headerClose","construct","transition","backdropTransition","_buttons","deepFreeze","k","v","dialog","text","attr","class","data-dismiss","alert","confirm","_templates","body","data","prop","elData","dataAttr","getAttribute","build","html","all","nodeName","replace","innerHTML","Modal","EventEmitter","templates","_baseTemplates","_baseButtons","_baseOptions","version","[object Object]","_options","question","super","random","toString","_html","_events","_visible","querySelector","_scrollbarWidth","inner","outer","visibility","overflow","calcScrollbarWidth","_render","_mapDom","o","t","classList","add","_setHeader","_setContent","_setFooter","contains","outerHTML","ineerHTML","children","button","setAttribute","keydownHandler","_handleKeydownEvent","clickHandler","_handleClickEvent","resizeHandler","_handleResizeEvent","nodes","getPath","every","tagName","emit","hide","which","_resize","_checkScrollbar","_setScrollbar","scrollTop","_setEvents","setTimeout","_backdrop","show","modalIsOverflowing","scrollHeight","documentElement","clientHeight","paddingLeft","bodyIsOverflowing","paddingRight","contCList","_removeEvents","originalBodyPad","clientWidth","innerWidth","basePadding","GeometryType","default","labels","select","addElement","editElement","save","delete","cancel","upload","editMode","confirmDelete","geomTypeNotSupported","editFields","editGeom","selectDrawType","uploadToLayer","uploadFeatures","validFeatures","invalidFeatures","loading","toggleVisibility","close","errors","capabilities","wfst","layer","noValidGeometry","geoserver","badFormat","badFile","lockFeature","transaction","getFeatures","controlElement","Wfst","Control","_i18n","language","i18n","defaultOptions","geoServerUrl","geoServerAdvanced","getCapabilitiesVersion","getFeatureVersion","describeFeatureTypeVersion","lockFeatureVersion","wfsTransactionVersion","projection","headers","layers","evtType","active","showControl","useLockFeature","minZoom","uploadFormats","processUpload","beforeInsertFeature","modal","deepObjectAssign","_mapLayers","_countRequests","_isEditModeOn","_hasLockFeature","_hasTransaction","_geoServerCapabilities","_geoServerData","_editedFeatures","Set","_layerToInsertElements","_insertFeatures","_updateFeatures","_deleteFeatures","_formatWFS","WFS","_formatGeoJSON","GeoJSON","_formatKml","KML","extractStyles","showPointNames","_xs","XMLSerializer","_controlWidgetToolsDiv","_initAsyncOperations","_map","_view","_viewport","getViewport","_isVisible","getZoom","_createLayers","_initMapElements","_onLoad","_showLoading","_connectToGeoServerAndGetCapabilities","_getGeoserverLayersData","err","_hideLoading","_showError","params","URLSearchParams","service","request","exceptions","url_fetch","response","fetch","ok","DOMParser","parseFromString","getCapabilities","operations","getElementsByTagName","from","operation","getLayerData","layerName","typeName","outputFormat","json","layerLabel","label","targetNamespace","featureTypes","geom","find","namespace","geomType","localType","geomField","layerLoaded","layersNumber","addLayerLoaded","newWmsLayer","layerParams","cqlFilter","buffer","tilesBuffer","SERVICE","LAYERS","TILED","TileWMS","url","serverType","tileLoadFunction","tile","src","blob","getImage","URL","createObjectURL","setState","TileState","loaded","layer_options","zIndex","TileLayer","newWfsLayer","strategy","wfsStrategy","VectorSource","format","bbox","loader","extent","typename","srsName","append","extentGeoServer","transformExtent","getProjection","getCode","features","getFormat","readFeatures","featureProjection","dataProjection","feature","addFeatures","removeLoadedExtent","VectorLayer","mode","getVisible","addLayer","_createEditLayer","_addInteractions","_addHandlers","_addMapControl","activateEditMode","prepareWfsInteraction","_collectionModify","interactionWfsSelect","Select","hitTolerance","_styleFunction","toggleCondition","never","filter","addInteraction","selected","deselected","mapBrowserEvent","coordinate","has","getLayer","getSource","removeFeature","_addFeatureToEdit","prepareWmsInteraction","interactionSelectModify","_editLayer","removeCondition","getResolution","INFO_FORMAT","BUFFER","FEATURE_COUNT","EXCEPTIONS","status","_keyClickWms","hasFeatureAtPixel","interactionModify","Modify","Style","image","CircleStyle","radius","fill","Fill","color","stroke","Stroke","condition","primaryAction","interactionSnap","Snap","_addFeatureToEditedList","_onDeselectFeatureEvent","_onRemoveFeatureEvent","handleZoomEnd","_currentZoom","_lastZoom","selectedFeatures","_deleteFeature","keyboardEvents","headControl","createUploadElements","uploadButton","htmlFor","uploadInput","accept","onchange","_processUploadFile","subControl","showUpload","uploadSection","drawContainer","drawButton","onclick","_isDrawModeOn","_resetStateButtons","activateDrawMode","selectedValue","_changeStateSelect","types","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","Circle","option","_selectDraw","createDrawContainer","createHeadControl","htmlLayers","createLayerElements","selectLayers","querySelectorAll","radioInput","parentDiv","closest","btn","dataset","toggle","createLayersControl","_modalLoading","featureId","retry","expiry","LockId","releaseAction","featureid","dataParsed","JSON","parse","_lockFeature","msg","originalError","console","error","action","transformCircleToPolygon","geomConverted","fromCircle","transformGeoemtryCollectionToGeometries","getGeometries","cloneFeature","_removeFeatureFromEditList","featureProperties","boundedBy","_layerName_","clonedFeatures","cloneGeom","GeometryCollection","numberRequest","srs","featureNS","featureType","featurePrefix","nativeElements","writeTransaction","payload","serializeToString","gmemberIn","gmemberOut","_useLockFeature","Content-Type","method","parseResponse","readTransactionResponse","responseStr","findError","match","refresh","refreshWfsLayer","getParams","Date","getMilliseconds","updateParams","refreshWmsLayer","_removeOverlayHelper","addFeature","checkIfFeatureIsChanged","_isFeatureEdited","_transactWFS","_restoreFeatureToLayer","_removeFeatureFromTmpLayer","_keySelect","_deselectEditFeature","_editModeOff","_keyRemove","getVertexs","coordinates","getCoordinates","flatCoordinates","flat","getType","_editFeatureOriginal","controlDiv","elements","elementId","acceptButton","textContent","cancelButton","deleteButton","_controlApplyDiscardChanges","addControl","removeControl","deleteEl","ev","prepareOverlay","editFieldsEl","_initEditFieldsModal","editGeomEl","_editModeOn","getCenter","getExtent","buttonsOverlay","addOverlay","activeBtn","featuresToInsert","fileReader","file","reader","FileReader","fileData","readAsText","fixGeometry","geomTypeLayer","coords","checkGeometry","geomTypeFeature","files","extension","toLowerCase","string","invalidFeaturesCount","validFeaturesCount","_initUploadFileModal","fit","maxZoom","padding","geomDrawTypeSelected","setSelectState","disabled","includes","drawType","geomLayer","LinearRing","addDrawInteraction","interactionDraw","removeInteraction","geomDrawType","Draw","bool","setActive","_editFeature","dataSchema","field","overlay","getOverlayById","removeOverlay","sources","s_val","t_val"],"mappings":"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"}